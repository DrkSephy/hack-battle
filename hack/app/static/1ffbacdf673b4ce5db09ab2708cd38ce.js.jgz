(function e(b, g, d) {
    function c(m, j) {
        if (!g[m]) {
            if (!b[m]) {
                var i = typeof require == "function" && require;
                if (!j && i) {
                    return i(m, !0)
                }
                if (a) {
                    return a(m, !0)
                }
                var k = new Error("Cannot find module '" + m + "'");
                throw k.code = "MODULE_NOT_FOUND", k
            }
            var h = g[m] = {
                exports: {}
            };
            b[m][0].call(h.exports, function(l) {
                var o = b[m][1][l];
                return c(o ? o : l)
            }, h, h.exports, e, b, g, d)
        }
        return g[m].exports
    }
    var a = typeof require == "function" && require;
    for (var f = 0; f < d.length; f++) {
        c(d[f])
    }
    return c
})({
    1: [
        function(f, c, Z) {
            var s, L, R, t, Q, C, ad, r, ai, U, l, af, h, T, H, ac, S, E, X, m, z, n, aa, i, ah, v, J, ab, G, K, N, a, u, ae, j, W, d, ag, k, q, w, M, O, D, g, V, p, o, Y, y, F, b, x;
            f("../../karma/.coffee.karma_utils.js");
            R = window.AmiTooltip;
            L = window.AmiComplete;
            ab = window.MiniCal;
            M = window.Signals;
            ad = window.FilesManager;
            F = f("../components/misc/Util.js").postMessageToWindow;
            E = f("../models/.coffee.LoadEngine.js");
            af = f("../models/.coffee.ItemsModel.js");
            k = f("../models/.coffee.ProjectsModel.js");
            U = f("../models/.coffee.InitModels.js");
            J = f("../mini/.coffee.MessageHandler.js");
            C = f("../mini/.coffee.DimensionCalculator.js");
            ae = f("../mini/PluginVersion.js");
            u = f("../external_services/OutlookIntegration.js");
            ai = f("../components/generic_manager/GenericManager.js");
            G = f("../components/minical_ext/.coffee.MinicalExt.js");
            n = f("../components/location_manager/LocationManager.js");
            Y = f("../components/opener/WindowOpener.js");
            g = f("../components/timezone_checker/.coffee.TimezoneChecker.js");
            a = f("../components/notifier/Notifier.js");
            s = f("../components/agenda/Agenda.js");
            t = f("../components/comet/.coffee.Comet.js");
            X = f("../components/loading/Loading.js");
            V = f("../components/left_menu/.coffee.TopFilters.js");
            S = f("../components/left_menu/.coffee.LeftMenuTabs.js");
            ac = f("../components/left_menu/.coffee.LeftMenu.js");
            p = f("../components/top_icons/.coffee.TopIcons.js");
            q = f("../components/quick_find/.coffee.QuickFind.js");
            T = f("../components/labels/Labels.js");
            K = f("../components/notes/Notes.js");
            N = f("../components/notes/.coffee.NotesBuffer.js");
            l = f("../components/item_selecter/ItemSelecter.js");
            h = f("../components/keyboard_shortcuts/KeyboardShortcuts.js");
            d = f("../components/project_list/.coffee.ProjectList.js");
            ag = f("../components/project_list/.coffee.ProjectArchive.js");
            r = f("../components/filters_list/.coffee.FiltersList.js");
            H = f("../components/labels_list/.coffee.LabelsList.js");
            W = f("../components/project_editor/ProjectEditor.js").ProjectEditorGeneric;
            Q = f("../components/completed_history/.coffee.CompletedHistory.js");
            o = f("../components/viral_spread/.coffee.ViralSpread.js");
            O = f("../components/start_page/StartPage.js");
            j = f("../components/premium_promotion/.coffee.PremiumPromotion.js");
            D = f("../components/themes/.coffee.Themes.js");
            i = f("../menus/MenuAgendaEdit.js");
            v = f("../menus/MenuUser.js");
            ah = f("../menus/.coffee.MenuItemEditMore.js");
            w = f("./.coffee.ResolveDeps.js");
            aa = f("../external_services/.coffee.MacAppBridge.js");
            m = f("../components/local_notifications/.coffee.LocalNotifications.js");
            z = f("../components/local_reminders/.coffee.LocalReminders.js");
            f("../components/refresh_interface/.coffee.RefreshInterface.js");
            window.initTodoist = function(aj) {
                ICE.annotateAjaxData.push(function(ak) {
                    if (window.CLIENT_ID && ak) {
                        return ak._client_id = window.CLIENT_ID
                    }
                });
                t.init();
                J.init();
                U.init();
                w.resolve();
                return E.loadData(false, function() {
                    y();
                    if ($isFunction(aj)) {
                        return aj()
                    }
                })
            };
            y = function() {
                var ak, al, aj;
                $hide($("all_holder"), $("left_menu"), $("content"));
                if (ICE.$hasTouchEnabled() || ICE.$isEdge()) {
                    $addClass($body(), "has_touch_enabled")
                }
                if (ICE.$isTouchDeviceOnly()) {
                    $addClass($body(), "touch_device_only")
                }
                ac.render();
                aj = window.User;
                if (aj) {
                    ak = window.User.is_premium = aj.is_premium
                } else {
                    ak = window.User.is_premium = false
                } if (aj) {
                    if (!ak && aj.karma > 530) {
                        $show($("premium_promotion"))
                    }
                }
                p.render();
                q.render();
                T.init();
                Y.init();
                R.init();
                l.init();
                n.init();
                ae.init();
                h.init();
                ab.init({
                    startDay: window.Settings && window.Settings.START_DAY || 1
                });
                G.init();
                n.init();
                K.init();
                d.initWithData();
                H.initWithData();
                r.initWithData();
                W.init();
                s.init();
                D.switchThemes(aj.theme || 0);
                Q.updateCount(aj.completed_count);
                d.render();
                H.render();
                r.render();
                ag.render();
                i.init(s.get());
                v.init();
                ah.init();
                al = $("top_section");
                $add(al, V.render());
                d.current_list = $("project_list");
                H.current_list = $("labels_list");
                r.current_list = $("filters_list");
                $add(al, S.render());
                S.showDefault();
                $AEV(window, "load", function() {
                    return d.arrows.updateArrows()
                });
                setTimeout(x, 10);
                g.checkTimezone();
                o.countAndShowIfNeeded();
                return M.sendSignal("data_fully_loaded")
            };
            x = function() {
                b();
                L.init();
                a.init();
                O.show();
                $AEV([$("editor")], "contextmenu", function(aj) {
                    var al, ak;
                    al = $eventElm(aj);
                    if (al && ((ak = $nodeName(al)) === "textarea" || ak === "input")) {
                        return true
                    }
                    if (aj.ctrl) {
                        return false
                    }
                    return true
                });
                $AEV($("left_menu"), "scroll", function() {
                    var aj;
                    aj = $("left_menu").scrollTop;
                    if (aj !== window.LEFT_MENU_ST) {
                        if (window.CURRENT_AMI_MENU) {
                            window.CURRENT_AMI_MENU.hide(null, true)
                        }
                    }
                    return window.LEFT_MENU_ST = aj
                });
                j.checkEmpty();
                $show($("all_holder"), $("top_bar"), $("left_menu"), $("content"));
                C.init();
                C.recalculate();
                return s.get().updateCounters()
            };
            if (window !== top && top.postMessage) {
                setInterval(function() {
                    return F(top, window.location.toString())
                }, 200)
            }
            window.onbeforeunload = function() {
                var an, am, al, aj, ao, ak;
                am = N.getNoteUploads();
                if (am.length > 0) {
                    K.loadAndShow(am[0].item_id);
                    return _("You have uploads that are not completed.")
                }
                al = [k.project_order_indent_syncer, af.item_order_indent_syncer, af.dayorder_syncer];
                an = false;
                for (ao = 0, ak = al.length; ao < ak; ao++) {
                    aj = al[ao];
                    if (aj.hasUnfinished()) {
                        aj.commit();
                        an = true
                    }
                }
                if (an) {
                    return _("You have some updates pending, please wait...")
                }
            };
            b = function() {
                var aj;
                if (window.location.host.match(/firefox|gmail/)) {
                    aj = function() {
                        return false
                    };
                    ad.isDropboxEnabled = aj;
                    ad.isDriveEnabled = aj;
                    return ad.isSelectFilesEnabled = aj
                }
            };
            window.CURRENT_DAY = (new Date()).getDate();
            setInterval(function() {
                var aj;
                aj = (new Date()).getDate();
                if (aj !== window.CURRENT_DAY) {
                    s.get().updateCounters();
                    M.sendSignal("refresh_interface");
                    return window.CURRENT_DAY = aj
                }
            }, 30000)
        }, {
            "../../karma/.coffee.karma_utils.js": 159,
            "../components/agenda/Agenda.js": 12,
            "../components/comet/.coffee.Comet.js": 15,
            "../components/completed_history/.coffee.CompletedHistory.js": 16,
            "../components/filters_list/.coffee.FiltersList.js": 26,
            "../components/generic_manager/GenericManager.js": 30,
            "../components/item_selecter/ItemSelecter.js": 32,
            "../components/keyboard_shortcuts/KeyboardShortcuts.js": 43,
            "../components/labels/Labels.js": 44,
            "../components/labels_list/.coffee.LabelsList.js": 45,
            "../components/left_menu/.coffee.LeftMenu.js": 46,
            "../components/left_menu/.coffee.LeftMenuTabs.js": 47,
            "../components/left_menu/.coffee.TopFilters.js": 48,
            "../components/loading/Loading.js": 49,
            "../components/local_notifications/.coffee.LocalNotifications.js": 50,
            "../components/local_reminders/.coffee.LocalReminders.js": 51,
            "../components/location_manager/LocationManager.js": 52,
            "../components/minical_ext/.coffee.MinicalExt.js": 53,
            "../components/misc/Util.js": 55,
            "../components/notes/.coffee.NotesBuffer.js": 58,
            "../components/notes/Notes.js": 61,
            "../components/notifier/Notifier.js": 63,
            "../components/opener/WindowOpener.js": 64,
            "../components/premium_promotion/.coffee.PremiumPromotion.js": 67,
            "../components/project_editor/ProjectEditor.js": 72,
            "../components/project_list/.coffee.ProjectArchive.js": 73,
            "../components/project_list/.coffee.ProjectList.js": 75,
            "../components/quick_find/.coffee.QuickFind.js": 82,
            "../components/refresh_interface/.coffee.RefreshInterface.js": 83,
            "../components/start_page/StartPage.js": 97,
            "../components/themes/.coffee.Themes.js": 101,
            "../components/timezone_checker/.coffee.TimezoneChecker.js": 102,
            "../components/top_icons/.coffee.TopIcons.js": 103,
            "../components/viral_spread/.coffee.ViralSpread.js": 104,
            "../external_services/.coffee.MacAppBridge.js": 105,
            "../external_services/OutlookIntegration.js": 106,
            "../menus/.coffee.MenuItemEditMore.js": 109,
            "../menus/MenuAgendaEdit.js": 117,
            "../menus/MenuUser.js": 123,
            "../mini/.coffee.DimensionCalculator.js": 125,
            "../mini/.coffee.MessageHandler.js": 126,
            "../mini/PluginVersion.js": 129,
            "../models/.coffee.InitModels.js": 136,
            "../models/.coffee.ItemsModel.js": 137,
            "../models/.coffee.LoadEngine.js": 139,
            "../models/.coffee.ProjectsModel.js": 143,
            "./.coffee.ResolveDeps.js": 107
        }
    ],
    2: [
        function(b, c, a) {
            var d, f, g;
            f = window.AmiTooltip;
            d = window.AmiComplete;
            g = window.Signals;
            window.CURRENT_ACTION_PERFOMED = null;
            a.get = function() {
                return window.CURRENT_ACTION_PERFOMED
            };
            a.mark = function(h) {
                window.CURRENT_ACTION_PERFOMED = h;
                g.sendSignal("action_performed");
                f.hide();
                d.hide();
                return window.CURRENT_ACTION_PERFOMED = null
            }
        }, {}
    ],
    3: [
        function(c, d, a) {
            var h, f, g, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            f = window.DateistDateHelpers;
            h = window.DateUtils;
            g = (function() {
                function i() {
                    this.getNonOverdue = b(this.getNonOverdue, this);
                    this.isAdded = b(this.isAdded, this);
                    this.add = b(this.add, this);
                    this.reset = b(this.reset, this)
                }
                i.prototype.current_dates = {};
                i.prototype.current_dates_list = [];
                i.prototype.reset = function() {
                    this.current_dates = {};
                    return this.current_dates_list = []
                };
                i.prototype.add = function(j) {
                    var k;
                    j = f.date_max(j);
                    k = h.formatView(j);
                    this.current_dates[k] = j;
                    return this.current_dates_list.push(j)
                };
                i.prototype.isAdded = function(j) {
                    var k;
                    j = f.date_max(j);
                    k = h.formatView(j);
                    return this.current_dates[k]
                };
                i.prototype.getNonOverdue = function() {
                    var o, j, l, n, k, m;
                    l = f.date_min(new Date());
                    j = [];
                    m = this.current_dates_list;
                    for (n = 0, k = m.length; n < k; n++) {
                        o = m[n];
                        if (!f.is_overdue(l, o)) {
                            j.push(o)
                        }
                    }
                    return j
                };
                return i
            })();
            d.exports = new g()
        }, {}
    ],
    4: [
        function(f, c, h) {
            var g, a, b, i, j, d;
            g = f("../../models/.coffee.ProjectsModel.js");
            i = f("./.coffee.RenderQueryLabelPriority.js");
            b = f("./.coffee.RenderQueryDays.js");
            d = f("./.coffee.RenderQueryViewAll.js");
            j = f("./.coffee.RenderQuerySearch.js");
            a = f("./RenderDateItems.js");
            h.renderSection = function(k, o, m) {
                var n, l;
                n = true;
                if (m.is_filtered) {
                    n = false
                }
                if (m.view === "flat_view") {
                    return i.render(k, o, m.items, m.name)
                } else {
                    if (m.view === "day_view_span") {
                        return a.displayItems(k, o, m.items, null, false, n)
                    } else {
                        if (m.view === "day_view_fixed") {
                            return b.render(k, o, m.day_date, m.items, n)
                        } else {
                            if (m.view === "view_all") {
                                d.render(k, o, g.getAll());
                                return l = true
                            } else {
                                if (m.view === "search") {
                                    return j.render(k, o, m)
                                }
                            }
                        }
                    }
                }
            }
        }, {
            "../../models/.coffee.ProjectsModel.js": 143,
            "./.coffee.RenderQueryDays.js": 8,
            "./.coffee.RenderQueryLabelPriority.js": 9,
            "./.coffee.RenderQuerySearch.js": 10,
            "./.coffee.RenderQueryViewAll.js": 11,
            "./RenderDateItems.js": 13
        }
    ],
    5: [
        function(d, f, b) {
            var a, c = function(g, h) {
                    return function() {
                        return g.apply(h, arguments)
                    }
                };
            a = (function() {
                function g() {
                    this.translate_to_lang = c(this.translate_to_lang, this);
                    this.translate_to_english = c(this.translate_to_english, this)
                }
                g.prototype.translate_to_english = function(h) {
                    return this._generic(window.translate_to_english, h)
                };
                g.prototype.translate_to_lang = function(h) {
                    return this._generic(window.translate_to_lang, h)
                };
                g.prototype._generic = function(i, m) {
                    var j, n, l, h, k;
                    if (window.I18N_FILTERS) {
                        n = [];
                        k = m.split(",");
                        for (l = 0, h = k.length; l < h; l++) {
                            j = k[l];
                            j = $strip(j);
                            if (j.length > 0) {
                                j = i(window.I18N_FILTERS, "" + window.LANG + "_filters", j)
                            }
                            n.push(j)
                        }
                        m = n.join(", ")
                    }
                    return m
                };
                return g
            })();
            f.exports = new a()
        }, {}
    ],
    6: [
        function(b, f, a) {
            var g, d, c, h;
            d = window.ElementStore;
            c = b("../../models/.coffee.ItemsModel.js");
            h = b("../../models/.coffee.ProjectsModel.js");
            a.Deps = g = {
                Agenda: null
            };
            a.query = function(i) {
                return g.Agenda.get().query(i)
            };
            a.blur = function() {
                return g.Agenda.get().blur()
            };
            a.reset = function() {
                return g.Agenda.get().reset()
            };
            a.refresh = function() {
                return g.Agenda.get().refresh()
            };
            a.getQuery = function() {
                return g.Agenda.get().current_query
            };
            a.renderItem = function(j, i) {
                return g.Agenda.get().renderItem(j, i)
            };
            a.fetchChildren = function(n) {
                var i, j, o, q, r, k, l, p, m;
                n.fetched = true;
                n._collapsed = false;
                r = {};
                if (n.render_opts) {
                    $update(r, n.render_opts)
                }
                r.no_indent = false;
                r.no_drag_and_drop = true;
                o = n;
                j = [];
                m = c.getChildren(n.json);
                for (l = 0, p = m.length; l < p; l++) {
                    i = m[l];
                    q = {};
                    $update(q, i);
                    q.agenda_child_view = true;
                    q.dont_show_arrow = true;
                    q.collapsed = false;
                    if (n.json.indent > 1) {
                        q.indent = q.indent - n.json.indent + 1
                    }
                    if (i.in_history && i.indent > 1) {
                        r.no_checkbox = true
                    }
                    k = g.Agenda.get().renderItem(q, r);
                    $addClass(k, "agenda_child_expanded");
                    $removeClass(k, "indent_1");
                    k.fetched = true;
                    $addAfter(k, o);
                    o = k;
                    j.push(k)
                }
                d.set(n, "children", j);
                return false
            }
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143
        }
    ],
    7: [
        function(d, c, f) {
            var m, h, k, o, j, a, i, n, l, b, g;
            o = window.Indicator;
            l = window.imageSprite;
            h = window.$static_path;
            m = window.$isHighDensity;
            n = d("../themes/.coffee.Themes.js");
            k = d("../completed_history/.coffee.CompletedQuickVisualize.js");
            i = {};
            g = function() {
                if (i.karma) {
                    i.karma.reuseable = false
                }
                if (i.tweet) {
                    i.tweet.reuseable = false
                }
                $remove($("completed_checkmarks"));
                return i = {}
            };
            j = {
                noir_morning: "https://d3ptyyxy2at9ui.cloudfront.net/591043b85c121a366f0a09139b58a296.png",
                noir_night: "https://d3ptyyxy2at9ui.cloudfront.net/886783b92c47986ff270c4ab05160477.png",
                neutral_morning: "https://d3ptyyxy2at9ui.cloudfront.net/ac4da96df11263faf25e6095ce699f42.png",
                neutral_night: "https://d3ptyyxy2at9ui.cloudfront.net/85b143d9a241f3f26f62d3d8f8f6a95f.png",
                tangerine_morning: "https://d3ptyyxy2at9ui.cloudfront.net/8d0d6b495a0f3d4fcbf81d774ca6d6b8.png",
                tangerine_night: "https://d3ptyyxy2at9ui.cloudfront.net/b8283c76a74ac58cc9d19dbc0874c3bc.png",
                sunflower_morning: "https://d3ptyyxy2at9ui.cloudfront.net/c46ca84e748d578fedc63b3854812b94.png",
                sunflower_night: "https://d3ptyyxy2at9ui.cloudfront.net/a3eaa47595eac316760e0555f2303da6.png",
                clover_morning: "https://d3ptyyxy2at9ui.cloudfront.net/173de3398c1ffbed877177bc405b100a.png",
                clover_night: "https://d3ptyyxy2at9ui.cloudfront.net/a3316c5a65ed661cddd3651bcc92ad3a.png",
                blueberry_morning: "https://d3ptyyxy2at9ui.cloudfront.net/8d79cedcee68fa7cb51d9073e092f61d.png",
                blueberry_night: "https://d3ptyyxy2at9ui.cloudfront.net/6b4a841399e78eac3eb14b17253c48a4.png",
                sky_morning: "https://d3ptyyxy2at9ui.cloudfront.net/45f74436bd67244a4476c63c557a2de3.png",
                sky_night: "https://d3ptyyxy2at9ui.cloudfront.net/541cbc91efa5326b39399b1d909b4908.png",
                amethyst_morning: "https://d3ptyyxy2at9ui.cloudfront.net/0eda391a75a0f6b9ce69a2a1cf76a376.png",
                amethyst_night: "https://d3ptyyxy2at9ui.cloudfront.net/44cabbbf6235638bb5f3d9c531ed1abb.png",
                graphite_morning: "https://d3ptyyxy2at9ui.cloudfront.net/2d4a1b447f60ea50330bfdf02da3516b.png",
                graphite_night: "https://d3ptyyxy2at9ui.cloudfront.net/e4e5f428398a9f4cb2530b8b78255f23.png",
                todoist_morning: "https://d3ptyyxy2at9ui.cloudfront.net/26fd30f763e3bb7896449bd13b8fb361.png",
                todoist_night: "https://d3ptyyxy2at9ui.cloudfront.net/0d61bca511a19be2d9fa93e5f374442d.png"
            };
            a = {
                noir_morning: "https://d3ptyyxy2at9ui.cloudfront.net/6bf602af3977690d868d4723d68bb358.png",
                noir_night: "https://d3ptyyxy2at9ui.cloudfront.net/abb34ba1b7d4473528f138da83b6a31b.png",
                neutral_morning: "https://d3ptyyxy2at9ui.cloudfront.net/f70a1d3561136980b37de418ba13a8aa.png",
                neutral_night: "https://d3ptyyxy2at9ui.cloudfront.net/ab057d764099f4d1a3ed782069ec720b.png",
                tangerine_morning: "https://d3ptyyxy2at9ui.cloudfront.net/a279da898a147f08fe7e67f5c56b9316.png",
                tangerine_night: "https://d3ptyyxy2at9ui.cloudfront.net/dcc6718ee0e1d08dc50a47d997327e2a.png",
                sunflower_morning: "https://d3ptyyxy2at9ui.cloudfront.net/5f62a2df019901f7a3bbc9f5581b8fc6.png",
                sunflower_night: "https://d3ptyyxy2at9ui.cloudfront.net/19c3a0a61370819931d6eed2b63f162a.png",
                clover_morning: "https://d3ptyyxy2at9ui.cloudfront.net/a981da325d12f3b6119e829ccc273ed2.png",
                clover_night: "https://d3ptyyxy2at9ui.cloudfront.net/8d7fc4218256b73cf958f5bf12a8c742.png",
                blueberry_morning: "https://d3ptyyxy2at9ui.cloudfront.net/35491450657fee4e1b2911282ed72a3b.png",
                blueberry_night: "https://d3ptyyxy2at9ui.cloudfront.net/31f94428053e12205f7fb1d83eefbfc0.png",
                sky_morning: "https://d3ptyyxy2at9ui.cloudfront.net/59d096ed2b887159e785ff69da19819e.png",
                sky_night: "https://d3ptyyxy2at9ui.cloudfront.net/43bd9107a58979124051c9e3bbe7440c.png",
                amethyst_morning: "https://d3ptyyxy2at9ui.cloudfront.net/d07e02b336fa6e5b6db474be01cb4190.png",
                amethyst_night: "https://d3ptyyxy2at9ui.cloudfront.net/ee5562846456e8acb21cb1a05b6de41f.png",
                graphite_morning: "https://d3ptyyxy2at9ui.cloudfront.net/f872b7337c72f15bfd0d3d249959dc43.png",
                graphite_night: "https://d3ptyyxy2at9ui.cloudfront.net/62dfa8267d25fe2c3af225c108669445.png",
                todoist_morning: "https://d3ptyyxy2at9ui.cloudfront.net/b7483bff96b34e90e17b6dc79c09cc2f.png",
                todoist_night: "https://d3ptyyxy2at9ui.cloudfront.net/cd397ac432e42c370e6b1830599b2329.png"
            };
            b = function() {
                var z, s, q, C, w, t, p, x, r, y, v, u;
                if (i.completed) {
                    return i.completed
                }
                q = new Date();
                w = q.getHours();
                if (w >= 5 && w <= 15) {
                    v = _("Enjoy your day.");
                    x = "morning";
                    r = 0
                } else {
                    if (w >= 16 && w <= 19) {
                        v = _("Enjoy your afternoon.");
                        x = "morning";
                        r = 0
                    } else {
                        v = _("Enjoy your night.");
                        x = "night";
                        r = 1
                    }
                } if (w >= 15 && q.getDay() === 5) {
                    v = _("Enjoy your weekend!")
                }
                if (m()) {
                    t = j["" + n.theme_name + "_" + x]
                } else {
                    t = a["" + n.theme_name + "_" + x]
                }
                s = window.User.completed_today;
                C = null;
                y = null;
                if (s >= 5) {
                    C = DIV({
                        c: "heading"
                    }, v);
                    y = null
                } else {
                    if (s === 0) {
                        C = DIV({
                            c: "heading"
                        }, _("No tasks for today."))
                    } else {
                        C = DIV({
                            c: "heading"
                        }, _("No more tasks for today."))
                    }
                    y = DIV({
                        c: "text"
                    }, v)
                }
                z = DIV({
                    id: "completed_checkmarks"
                }, IMG({
                    src: t,
                    width: 305,
                    height: 305,
                    c: "illustration"
                }), C, y);
                if (s >= 5) {
                    $add(z, DIV(p = A({
                        href: "#"
                    }, _("Today you completed %s tasks and reached #TodoistZero!").replace("%s", s))), DIV(u = A({
                        href: "#s"
                    }, l("cmp_twitter", 26, 16), _("Tweet"))));
                    p.reuseable = true;
                    u.reuseable = true;
                    i.karma = p;
                    i.tweet = u;
                    $AEV(p, "click", function() {
                        k.show($("completed_items"));
                        return false
                    });
                    $AEV(u, "click", function() {
                        var E, D;
                        E = "https://todoist.com/todoist/zero/" + n.theme_number + "/" + r;
                        D = _("Done for today! Completed %s tasks! #TodoistZero").replace("%s", s) + " " + E;
                        D = $urlencode(D);
                        D = "https://twitter.com/home?status=" + D;
                        window.open(D);
                        return false
                    })
                }
                $setOpacity(z, 0);
                setTimeout(function() {
                    return $setOpacity(z, 1)
                }, 50);
                i.completed = z;
                return z
            };
            f.render = b;
            f.reset = g
        }, {
            "../completed_history/.coffee.CompletedQuickVisualize.js": 17,
            "../themes/.coffee.Themes.js": 101
        }
    ],
    8: [
        function(f, c, g) {
            var i, l, h, k, b, d, a, j = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            k = window.DateistDateHelpers;
            h = window.DateUtils;
            a = f("../../models/.coffee.UtilModels.js");
            i = f("./.coffee.AgendaCurrentDays.js");
            b = f("../../models/.coffee.DayOrders.js");
            l = f("./.coffee.AgendaUtils.js");
            d = (function() {
                function m() {
                    this.render = j(this.render, this)
                }
                m.prototype.render = function(s, w, H, x, v) {
                    var r, E, z, D, q, t, y, C, u, p, o, n, F, J, G;
                    if (v == null) {
                        v = true
                    }
                    i.add(H);
                    if (v) {
                        x = b.annotate(x)
                    } else {
                        x = x.sort(a.daySort)
                    }
                    s.display_date = true;
                    z = DIV();
                    r = -1;
                    if (H) {
                        r = Math.abs(k.day_diff(new Date(), H));
                        $add(z, this._renderDayHeader(k.date_max(H), true, r))
                    }
                    $add(z, u = UL({
                        "class": "items day_list"
                    }));
                    if (r === 0) {
                        $addClass(u, "ul_today")
                    }
                    if (!v) {
                        $addClass(u, "is_filtered")
                    }
                    u.day_date = H;
                    if (x.length === 0) {
                        $addClass(z, "no_tasks")
                    }
                    q = [];
                    D = [];
                    for (p = 0, F = x.length; p < F; p++) {
                        E = x[p];
                        if (k.has_time(E.due_date)) {
                            D.push(E)
                        } else {
                            q.push(E)
                        }
                    }
                    D.sort(function(L, K) {
                        if (L.time === K.time) {
                            return a.sortByPriority(L, K)
                        }
                        return L.time - K.time
                    });
                    y = {};
                    if (!v) {
                        y.no_day_ordering = true
                    }
                    for (o = 0, J = D.length; o < J; o++) {
                        E = D[o];
                        $add(u, t = s.renderItem(E, y));
                        s.displayArrows(E, t)
                    }
                    C = LI({
                        c: "agenda_item reorder_item",
                        s: "font-size: 0; height: 0px; padding: 0;"
                    });
                    $add(u, C);
                    C.json = {
                        due_date: H
                    };
                    for (n = 0, G = q.length; n < G; n++) {
                        E = q[n];
                        $add(u, t = s.renderItem(E, y));
                        s.displayArrows(t.json, t)
                    }
                    $add(w, z);
                    return $add(w, u)
                };
                m.prototype._renderDayHeader = function(v, p, n) {
                    var t, r, s, q, o, u;
                    if (!n) {
                        n = Math.abs(k.day_diff(new Date(), v))
                    }
                    t = k.date_max(new Date());
                    q = k.is_same_date(v, t);
                    r = v.getTime() < t.getTime();
                    s = function(x) {
                        var w;
                        w = A({
                            href: "#"
                        }, x);
                        $AEV(w, "click", function() {
                            l.query(h.format(v, true));
                            return false
                        });
                        return w
                    };
                    if (r && !q) {
                        u = H2({
                            c: "section_header"
                        });
                        if (n === 1) {
                            $add(u, s(_("Yesterday")));
                            $add(u, SPAN({
                                "class": "h2_date"
                            }, h.formatView(v, true)))
                        } else {
                            $add(u, s(_("%s days ago").replace("%s", Math.abs(n))));
                            $add(u, SPAN({
                                "class": "h2_date"
                            }, h.formatView(v, true)))
                        }
                        $addClass(u, "overdue")
                    } else {
                        if (n === 0) {
                            u = H2(s(_("Today")));
                            o = true
                        } else {
                            if (n === 1) {
                                u = H2(s(_("Tomorrow")));
                                o = true
                            } else {
                                u = H2(s(h.getWeekDay(v.getDay())));
                                o = false
                            }
                        }
                        $addClass(u, "section_header");
                        $add(u, SPAN({
                            "class": "h2_date"
                        }, h.formatView(v, o)))
                    }
                    return u
                };
                return m
            })();
            c.exports = new d()
        }, {
            "../../models/.coffee.DayOrders.js": 131,
            "../../models/.coffee.UtilModels.js": 157,
            "./.coffee.AgendaCurrentDays.js": 3,
            "./.coffee.AgendaUtils.js": 6
        }
    ],
    9: [
        function(c, d, a) {
            var h, f, g, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            f = window.DateistDateHelpers;
            h = window.DateUtils;
            g = (function() {
                function i() {
                    this.labelPrioritySort = b(this.labelPrioritySort, this);
                    this.render = b(this.render, this)
                }
                i.prototype.render = function(q, j, m, s, o) {
                    var r, p, l, k, n;
                    if (o == null) {
                        o = true
                    }
                    $add(j, DIV(H2({
                        c: "section_header"
                    }, s)));
                    l = UL({
                        "class": "items priority_list",
                        style: "margin-bottom: 9px;"
                    });
                    if (m.length === 0) {
                        $add(l, LI({
                            c: "no_tasks"
                        }, _("No tasks match your query")))
                    } else {
                        q.display_date = false;
                        m.sort($p(this.labelPrioritySort, o));
                        for (k = 0, n = m.length; k < n; k++) {
                            r = m[k];
                            p = q.renderItem(r, {
                                with_due_date: true,
                                with_time: false,
                                with_project: true,
                                no_indent: true,
                                no_drag_and_drop: true
                            });
                            $add(l, p);
                            q.displayArrows(r, p)
                        }
                    }
                    return $add(j, l)
                };
                i.prototype.labelPrioritySort = function(n, m, k) {
                    var j, l;
                    if (n) {
                        if (m.priority > k.priority) {
                            return -1
                        } else {
                            if (m.priority < k.priority) {
                                return 1
                            }
                        }
                    }
                    if (f.is_same_date(m.due_date, k.due_date)) {
                        j = f.has_time(m.due_date);
                        l = f.has_time(k.due_date);
                        if (j && l) {
                            if (m.due_date > k.due_date) {
                                return 1
                            } else {
                                return -1
                            }
                        } else {
                            if (j && !l) {
                                return -1
                            } else {
                                if (!j && l) {
                                    return 1
                                }
                            }
                        } if (m.project_id === k.project_id) {
                            return m.item_order > k.item_order
                        } else {
                            return m.project_id > k.project_id
                        }
                    }
                    if (m.due_date && !k.due_date) {
                        return -1
                    }
                    if (!m.due_date && k.due_date) {
                        return 1
                    }
                    if (m.due_date === k.due_date) {
                        return 0
                    }
                    if (m.due_date > k.due_date) {
                        return 1
                    }
                    if (m.due_date < k.due_date) {
                        return -1
                    }
                    return k.id - m.id
                };
                return i
            })();
            d.exports = new g()
        }, {}
    ],
    10: [
        function(b, a, d) {
            var j, k, h, i, c, f, g = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            k = window.Indicator;
            i = b("../project_editor/.coffee.ProjectEditorUtils.js");
            h = b("../../models/.coffee.ItemsModel.js");
            c = b("../../models/.coffee.ProjectsModel.js");
            f = b("./.coffee.RenderQueryLabelPriority.js");
            j = (function() {
                function l() {
                    this.renderItem = g(this.renderItem, this);
                    this.renderItems = g(this.renderItems, this);
                    this.fetchFromServer = g(this.fetchFromServer, this);
                    this.render = g(this.render, this)
                }
                l.prototype.render = function(w, m, v) {
                    var o, s, r, t, n, p, u, q;
                    n = DIV({
                        c: "search_holder"
                    });
                    $add(n, H2({
                        c: "section_header"
                    }, v.name));
                    o = [];
                    s = [];
                    q = v.items;
                    for (p = 0, u = q.length; p < u; p++) {
                        r = q[p];
                        if (r.in_history || r.checked) {
                            s.push(r)
                        } else {
                            o.push(r)
                        }
                    }
                    this.renderItems(w, n, o, true, true);
                    if (s.length > 0) {
                        $add(n, DIV({
                            s: "padding-top: 10px"
                        }));
                        this.renderItems(w, n, s, true)
                    }
                    if (!v.is_filtered) {
                        $add(n, t = A({
                            href: "#",
                            c: "action search_completed"
                        }, _("Search completed tasks...")));
                        $AEV(t, "click", $p(this.fetchFromServer, w, n, t, v.query))
                    }
                    return $add(m, n)
                };
                l.prototype.fetchFromServer = function(n, r, p, q) {
                    var o, m;
                    if (!window.User.is_premium) {
                        alert(_("Full text search is only available for premium users."));
                        return false
                    }
                    $remove(p);
                    m = DIV(k.cssSpinner());
                    $add(r, m);
                    o = $requestJSON("/API/v6/search");
                    o.offline_message = true;
                    o.addCallback((function(s) {
                        return function(t) {
                            var u;
                            if (t.projects) {
                                $map($values(t.projects), function(v) {
                                    return c.temporary_projects[v.id] = v
                                })
                            }
                            $add(m, u = UL({
                                "class": "items",
                                style: "margin-bottom: 9px;"
                            }));
                            $replace(m, null);
                            return s.renderItems(n, m, t.history, false)
                        }
                    })(this));
                    o.sendReq({
                        query: q,
                        only_history: 1,
                        token: window.User.token
                    });
                    return false
                };
                l.prototype.renderItems = function(v, z, D, s, y) {
                    var E, G, o, C, x, w, F, u, t, q, p, n, K, M, L, J, H, m, r;
                    if (y == null) {
                        y = false
                    }
                    if (D.length === 0) {
                        return $add(u, LI({
                            c: "no_tasks"
                        }, _("No tasks match your query"), "."))
                    } else {
                        for (t = 0, K = D.length; t < K; t++) {
                            G = D[t];
                            h.convertToDateObject(G)
                        }
                        D.sort($p(f.labelPrioritySort, true));
                        if (y) {
                            x = [];
                            o = {};
                            for (q = 0, M = D.length; q < M; q++) {
                                G = D[q];
                                E = o[G.project_id];
                                if (!E) {
                                    E = o[G.project_id] = [];
                                    x.push(G.project_id)
                                }
                                E.push(G)
                            }
                            r = [];
                            for (p = 0, L = x.length; p < L; p++) {
                                C = x[p];
                                u = UL({
                                    "class": "items",
                                    style: "margin-bottom: 9px;"
                                });
                                w = o[C];
                                F = c.get(parseInt(C));
                                if (!F || w.length === 0) {
                                    continue
                                }
                                $add(z, H2({
                                    c: "project_header section_header project_header_mini"
                                }, i.generateLink(F)));
                                for (n = 0, J = w.length; n < J; n++) {
                                    G = w[n];
                                    this.renderItem(v, u, G, s, false)
                                }
                                r.push($add(z, u))
                            }
                            return r
                        } else {
                            u = UL({
                                "class": "items",
                                style: "margin-bottom: 9px;"
                            });
                            for (m = 0, H = D.length; m < H; m++) {
                                G = D[m];
                                this.renderItem(v, u, G, s)
                            }
                            return $add(z, u)
                        }
                    }
                };
                l.prototype.renderItem = function(q, p, r, s, o) {
                    var n, m;
                    if (s == null) {
                        s = false
                    }
                    if (o == null) {
                        o = true
                    }
                    r = h.getById(r.id) || r;
                    if (!r) {
                        return
                    }
                    m = c.get(r.project_id);
                    if (!m) {
                        return
                    }
                    if (r.due_date) {
                        r.due_date = new Date(r.due_date)
                    }
                    n = q.renderItem(r, {
                        with_due_date: true,
                        with_time: true,
                        with_project: o,
                        no_indent: true,
                        no_drag_and_drop: true
                    });
                    $add(p, n);
                    return q.displayArrows(r, n)
                };
                return l
            })();
            a.exports = new j()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../project_editor/.coffee.ProjectEditorUtils.js": 70,
            "./.coffee.RenderQueryLabelPriority.js": 9
        }
    ],
    11: [
        function(c, d, a) {
            var g, f, b = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            f = c("../project_editor/.coffee.ProjectEditorManager.js");
            g = (function() {
                function h() {
                    this.render = b(this.render, this)
                }
                h.prototype.render = function(k, o, j) {
                    var n, m, l, i;
                    n = [];
                    for (l = 0, i = j.length; l < i; l++) {
                        m = j[l];
                        n.push(m.id)
                    }
                    return f.showProjects(n, null, {
                        holder: o,
                        update_location: false,
                        dont_replace_holder: true
                    })
                };
                return h
            })();
            d.exports = new g()
        }, {
            "../project_editor/.coffee.ProjectEditorManager.js": 69
        }
    ],
    12: [
        function(m, c, H) {
            var p = window.Signals;
            var o = window.DateistDateHelpers;
            var u = window.AmiComplete;
            var f = window.ElementStore;
            var x = window.track;
            var J = m("../action_perfomed/.coffee.ActionPerformed.js");
            var b = m("../misc/Util.js").postMessageToWindow;
            var z = m("../filter_engine/.coffee.TodoistFilterEngine.js");
            var s = m("../items_utils/.coffee.ItemEdit.js");
            var F = m("../items_utils/ItemForms.js");
            var j = m("../items_utils/.coffee.ItemsRender.js");
            var y = m("../items_utils/.coffee.ItemCheckbox.js");
            var G = m("../generic_manager/GenericManagerUtils.js");
            var k = m("../generic_manager/GenericArrows.js");
            var C = m("../../menus/MenuAgendaEdit.js");
            var i = m("../left_menu/.coffee.LeftMenu.js");
            var l = m("../project_editor/.coffee.ProjectEditorManager.js");
            var r = m("../promotion_overlay/.coffee.PromotionOverlay.js");
            var n = m("../labels_list/.coffee.LabelsList.js");
            var v = m("../quick_find/.coffee.QuickFind.js");
            var a = m("./.coffee.AgendaUtils.js");
            var K = m("./.coffee.AgendaRenderUtils.js");
            var g = m("./.coffee.AgendaCurrentDays.js");
            var E = m("./.coffee.AgendaTranslate.js");
            var t = m("./.coffee.CompletedToday.js");
            var q = m("../../models/.coffee.QueriesItems.js");
            var h = m("../../models/.coffee.LabelsModel.js");
            var w = m("../../models/.coffee.ItemsModel.js");
            var D;
            H.get = function() {
                return D
            };
            H.init = function() {
                D = new d()
            };
            var d = Class({
                name: "Agenda",
                init: function() {
                    $bindMethods(this);
                    this.saved_collapse_state = {};
                    this.current_query = "";
                    this.genereateAgendaArrows();
                    g.reset();
                    p.connect("update_counters", this.updateCounters);
                    p.connect("theme_changed", function() {
                        t.reset()
                    })
                },
                query: function(L) {
                    p.sendSignal("agenda_query", L);
                    v.setValue("");
                    this.current_query = E.translate_to_lang(L);
                    v.setPlaceholder(this.current_query);
                    document.title = "Todoist";
                    i.hide();
                    this.showAgenda();
                    var N = L.match(/^@([^\s]+)$/);
                    if (N) {
                        var M = h.get(N[1]);
                        if (M) {
                            n.setCurrentVisually(M.id)
                        }
                    }
                    return false
                },
                reset: function() {
                    v.setValue("");
                    v.setPlaceholder(null);
                    this.current_query = "";
                    this.saved_collapse_state = {};
                    g.reset();
                    u.hide();
                    t.reset()
                },
                saveCurrentCollapseState: function() {
                    this.saved_collapse_state = {};
                    var L = this.saved_collapse_state;
                    $map($all("li", "task_item"), function(M) {
                        if (M.json) {
                            L[M.json.id] = M._collapsed
                        }
                    })
                },
                showAgenda: function() {
                    l.reset();
                    this._runQuery();
                    return false
                },
                refresh: function(L, M) {
                    if (!this.current_query.length) {
                        return
                    }
                    if (L && M) {
                        if (o.is_same_date(L.due_date, M.due_date) && L.priority == M.priority) {
                            return false
                        }
                    }
                    this.saveCurrentCollapseState();
                    this.showAgenda();
                    this.flashItem()
                },
                blur: function() {
                    v.blur()
                },
                showError: function(Q, M, N) {
                    if (N == "premium") {
                        var L = r.renderHolder(Q);
                        $replace(M, L)
                    } else {
                        M = M || $("editor");
                        var O = A({
                            href: "/Help/Filtering",
                            c: "action",
                            target: "_blank"
                        }, _("Show examples"));
                        $replace(M, DIV({
                            c: "no_matches"
                        }, SPAN(Q), O))
                    }
                },
                _runQuery: function() {
                    var M = this;
                    J.mark("Agenda/query");
                    this.current_form = null;
                    var O = this.current_query;
                    var N = window.User.is_premium;
                    if (O === "") {
                        return false
                    }
                    if (!N && (O.indexOf("&") != -1 || O.indexOf("|") != -1)) {
                        return this.showError(_("Boolean operators are only available for premium users."), $("editor"), true)
                    }
                    p.sendSignal("change_location", "agenda/" + O);
                    var T;
                    try {
                        T = z.filter(O)
                    } catch (Q) {
                        var R = Q && Q.message || "" + Q;
                        return this.showError(R)
                    }
                    g.reset();
                    var S = DIV({
                        id: "agenda_view"
                    });
                    $map(T, function(U) {
                        K.renderSection(M, S, U)
                    });
                    this.cur_div = S;
                    $replace($("editor"), S);
                    var L = $child($("editor"), "h2") || $child($("editor"), "div", "premium_only");
                    if (!L && O.indexOf("q:") == -1) {
                        this.showError(SPAN(_("No tasks match your query"), " `", B(this.current_query), "`."), S, "no_match")
                    }
                    p.sendSignal("rendered.queries");
                    this.flashItem();
                    this.renderInspirationalIfNeeded()
                },
                flashItem: function() {
                    if (this.flash_item) {
                        var L = $("item_" + this.flash_item);
                        if (L) {
                            $addClass(L, "item_flash");
                            window.scrollTo(0, $position(L).y - 200)
                        }
                        this.flash_item = null
                    }
                },
                editCurrentItem: function(M) {
                    var L = $parent($eventElm(M), "li");
                    if (this.isClickAble(L)) {
                        var N = $p(this._initForm, L);
                        if (this.current_form) {
                            this._onSave(this.current_form, N)
                        } else {
                            N()
                        }
                        return false
                    }
                },
                _initForm: function(L) {
                    var M = this;
                    var N = function() {
                        $show(L);
                        M.current_form = null;
                        s.genericCancelEdit();
                        return false
                    };
                    var Q = {
                        cancel: F.genCancel("li", N, this),
                        action: $p(M._onSave),
                        submit_val: _("Save"),
                        name_val: L.json.content,
                        due_date: L.json.due_date,
                        date_string: L.json.date_string,
                        current_item: L,
                        priority: L.json.priority
                    };
                    Q.onKeyPress = function(U) {
                        if (U.keyAscii == 13) {
                            if (u.shown()) {
                                return false
                            }
                            Q.action(M.current_form);
                            return false
                        }
                        if (U.ctrl && U.keyAscii == 38) {
                            var S = M.getPElement(L);
                            if (S) {
                                M._onSave(M.current_form, function() {
                                    M._initForm(S)
                                });
                                return false
                            }
                        }
                        if (U.ctrl && U.keyAscii == 40) {
                            var R = M.getNElement(L);
                            if (R) {
                                M._onSave(M.current_form, function() {
                                    M._initForm(R)
                                });
                                return false
                            }
                            return false
                        } else {
                            if (U.keyAscii == 9 && $isSafari()) {
                                var T = $f(M.current_form, "due_date");
                                if (T) {
                                    var V = $eventElm(U);
                                    if (V && !$hasClass(V, "due_date")) {
                                        $preventDefault(U);
                                        T.select()
                                    }
                                }
                            }
                        }
                    };
                    Q.no_indent = true;
                    var O = s.generateForm(Q);
                    M.current_form = O.form;
                    $hide(L);
                    $addAfter(O.li_item, L);
                    O.textarea.proxyPlaceCursor();
                    return false
                },
                _onSave: function(R, T) {
                    var N = this;
                    var M = $parent(R, "li");
                    var S = M.previousSibling;
                    var Q = $update({}, S.json);
                    var O = s.genericSaveItem(S, R);
                    if (!O) {
                        return
                    }
                    var L = N.renderItem(O.item, S.render_opts || null);
                    $swap(S, L);
                    $map($all("li", "item_" + S.json.id), function(U) {
                        if (U != L) {
                            var V = N.renderItem(O.item, S.render_opts || null);
                            $swap(U, V)
                        }
                    });
                    this.refresh(Q, O.item);
                    if (O.is_updated) {
                        this.updateCounters()
                    }
                    this.current_form = null;
                    x("Tasks", "Edit", "AgendaView");
                    if ($isFunction(T)) {
                        T()
                    }
                    return false
                },
                renderItem: function(Q, M) {
                    var O;
                    if (!O) {
                        O = {
                            fn_toggle_menu: C.toggle,
                            fn_complete_item: this.completeItem,
                            fn_undo_complete_item: this.uncompleteItem,
                            with_project: true,
                            with_time: true,
                            no_indent: true
                        }
                    }
                    if (M) {
                        $update(O, M)
                    }
                    var L = j.renderItem(Q, O);
                    L.render_opts.renderCls = this;
                    $addClass(L, "agenda_item");
                    $addClass(L, "indent_1");
                    if (this.saved_collapse_state[Q.id] === false) {
                        L._collapsed = -1
                    } else {
                        L._collapsed = true
                    }
                    var N = true;
                    if (M && M.not_editable) {
                        N = false
                    }
                    if (N) {
                        F.attachClick(L.td_time, this.editCurrentItem);
                        F.attachClick(L.content, this.editCurrentItem)
                    }
                    return L
                },
                completeItem: function(L, O) {
                    var M = this;
                    J.mark("Agenda/complete");
                    var Q = false;
                    if (O && O.shift) {
                        Q = true
                    }
                    var N = w.complete(L.json, Q);
                    $map(N, function(R) {
                        var S = $("item_" + R.id);
                        if (!S) {
                            return
                        }
                        if ($hasClass(S, "agenda_child_expanded")) {
                            y.update(S, 1, M.uncompleteItem, false)
                        } else {
                            s.removeItemInList(S)
                        }
                    });
                    M.arrows.updateArrows();
                    M.updateCounters();
                    t.reset();
                    setTimeout(M.renderInspirationalIfNeeded, 120);
                    if (Q) {
                        x("Tasks", "CompleteForced", "AgendaView")
                    } else {
                        x("Tasks", "Complete", "AgendaView")
                    }
                },
                uncompleteItem: function(L) {
                    J.mark("Agenda/complete");
                    var M = w.uncomplete(L.json);
                    $update(L.json, M);
                    y.update(L, 0, this.completeItem);
                    this.arrows.updateArrows();
                    this.updateCounters();
                    this.renderInspirationalIfNeeded()
                },
                updateCounters: function() {
                    var L = w.getAllOwn();
                    var M = q.getCounts(L);
                    b(top, "UPDATE_COUNT:" + $serialize(M));
                    p.sendSignal("countsUpdated", M)
                },
                getAllRenrededItems: function(N, M) {
                    if (!M) {
                        M = $all("li", "agenda_item")
                    }
                    var L = [];
                    $map(M, function(O) {
                        if ($isHidden(O) || $hasClass(O, "moved")) {
                            return
                        }
                        L.push(O)
                    });
                    return L
                },
                displayArrows: function(N, L) {
                    var M = w.getChildren(N, false);
                    if (M.length > 0) {
                        this.arrows.displayArrow(L, true)
                    }
                },
                genereateAgendaArrows: function() {
                    var L = this;
                    this.arrows = new k();
                    this.arrows.list = this;
                    this.arrows.getChildren = G.getChildren;
                    this.arrows._hasChildren = function(M) {
                        if (!M || !M.json) {
                            return false
                        }
                        if (M._collapsed == -1) {
                            L.fetchChildren(M);
                            M._collapsed = false
                        }
                        return w.getChildren(M.json, false).length > 0
                    };
                    this.arrows._getArrows = function(M) {
                        return $all("img", "arrow", M)
                    };
                    this.arrows._switchState = function(N) {
                        var M = N.host_item;
                        L.fetchChildren(M);
                        $remove($all("img", "arrow", M));
                        L.arrows.displayArrow(M);
                        L.saveCurrentCollapseState();
                        return false
                    }
                },
                fetchChildren: function(L) {
                    var M = f.get(L, "children");
                    if (L.fetched && M) {
                        if (L._collapsed) {
                            L._collapsed = false;
                            $map(M, function(N) {
                                $show(N)
                            })
                        } else {
                            L._collapsed = true;
                            $map(M, function(N) {
                                $hide(N)
                            })
                        }
                    } else {
                        a.fetchChildren(L)
                    }
                },
                getNElement: function(L) {
                    var M = L.nextSibling;
                    while (M) {
                        if (!$isHidden(M) && !$hasClass(M, "manager")) {
                            return M
                        }
                        M = M.nextSibling
                    }
                },
                getPElement: function(L) {
                    var M = L.previousSibling;
                    while (M) {
                        if (!$isHidden(M) && !$hasClass(M, "manager")) {
                            return M
                        }
                        M = M.previousSibling
                    }
                },
                renderInspirationalIfNeeded: function() {
                    if (this.current_query.indexOf(":") != -1) {
                        return
                    }
                    var M = q.getCounts();
                    var L = M.today + M.overdue;
                    $remove($all("li", "inspiration"));
                    if (L === 0) {
                        $map($all("ul", "ul_today"), function(N) {
                            $ATT(N, LI({
                                c: "inspiration"
                            }, t.render()))
                        })
                    }
                },
                isClickAble: function(L) {
                    return L && !$isIn($nodeName(L), ["a", "img"]) && !$hasClass(L, "label") && !$hasClass(L, "menu")
                }
            })
        }, {
            "../../menus/MenuAgendaEdit.js": 117,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.QueriesItems.js": 145,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../filter_engine/.coffee.TodoistFilterEngine.js": 25,
            "../generic_manager/GenericArrows.js": 29,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../items_utils/.coffee.ItemCheckbox.js": 33,
            "../items_utils/.coffee.ItemEdit.js": 35,
            "../items_utils/.coffee.ItemsRender.js": 37,
            "../items_utils/ItemForms.js": 39,
            "../labels_list/.coffee.LabelsList.js": 45,
            "../left_menu/.coffee.LeftMenu.js": 46,
            "../misc/Util.js": 55,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78,
            "../quick_find/.coffee.QuickFind.js": 82,
            "./.coffee.AgendaCurrentDays.js": 3,
            "./.coffee.AgendaRenderUtils.js": 4,
            "./.coffee.AgendaTranslate.js": 5,
            "./.coffee.AgendaUtils.js": 6,
            "./.coffee.CompletedToday.js": 7
        }
    ],
    13: [
        function(c, d, b) {
            var a = c("../../models/.coffee.UtilModels.js");
            var g = c("./.coffee.AgendaCurrentDays.js");
            var h = c("./.coffee.RenderQueryDays.js");
            var f = {
                displayItems: function(l, j, p, q, m, k) {
                    p = p.sort(a.sortByDate);
                    p.reverse();
                    var o = [];
                    for (var n = 0; n < p.length; n++) {
                        var r = p[n];
                        o.push(r);
                        if (!this._isNextSameDate(p, r.due_date, n)) {
                            if (!q || q(r)) {
                                if (m) {
                                    o.reverse()
                                }
                                g.add(r.due_date);
                                h.render(l, j, r.due_date, o, k)
                            }
                            o = []
                        }
                    }
                },
                _isNextSameDate: function(j, m, k) {
                    var l = j[k + 1];
                    if (l && l != "overdue_end") {
                        return this.isSameDay(m, l.due_date)
                    }
                    return false
                },
                isSameDay: function(j, i) {
                    if (!j || !i) {
                        return false
                    }
                    return j.getDate() == i.getDate() && j.getMonth() == i.getMonth() && j.getYear() == i.getYear()
                }
            };
            d.exports = f
        }, {
            "../../models/.coffee.UtilModels.js": 157,
            "./.coffee.AgendaCurrentDays.js": 3,
            "./.coffee.RenderQueryDays.js": 8
        }
    ],
    14: [
        function(d, g, b) {
            var f, a, c = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            a = (function() {
                function h() {
                    this.getAvatarBackground = c(this.getAvatarBackground, this);
                    this.renderAvatar = c(this.renderAvatar, this)
                }
                h.prototype.renderAvatar = function(i, k) {
                    var j, p, o, l, m, n;
                    n = i["avatar_" + k];
                    if (n && n.indexOf("default_avatar") === -1) {
                        j = IMG({
                            src: n,
                            c: "user_avatar " + k
                        })
                    } else {
                        if (i.full_name) {
                            m = $strip(i.full_name).split(" ")
                        } else {
                            m = $strip(i.email).split(" ")
                        }
                        p = m[0];
                        l = $last(m);
                        if (p === l) {
                            o = p[0]
                        } else {
                            o = p[0] + l[0]
                        }
                        j = DIV({
                            c: "user_avatar"
                        }, o.toUpperCase());
                        $addClass(j, k);
                        j.style.backgroundColor = this.getAvatarBackground(i.email || i.full_name)
                    }
                    return j
                };
                h.prototype.backgrounds = ["#fcc652", "#e9952c", "#e16b2d", "#d84b40", "#e8435a", "#e5198a", "#ad3889", "#86389c", "#a8a8a8", "#98be2f", "#5d9d50", "#5f9f85", "#5bbcb6", "#32a3bf", "#2bafeb", "#2d88c3", "#3863cc", "#5e5e5e"];
                h.prototype.getAvatarBackground = function(i) {
                    var j, k;
                    k = i.split("@")[0];
                    j = k.charCodeAt(0) + k.charCodeAt(k.length - 1);
                    return this.backgrounds[j % this.backgrounds.length]
                };
                return h
            })();
            f = new a();
            window.Avatars = f;
            if (typeof g !== "undefined" && g !== null) {
                g.exports = f
            }
        }, {}
    ],
    15: [
        function(b, c, a) {
            var f, d;
            f = window.Signals;
            d = b("../../models/.coffee.SyncEngine.js");
            a.init = function() {
                window.COMET_TIMEOUT = null;
                return f.connect("comet_td_sync", function() {
                    var g;
                    if (window.COMET_TIMEOUT) {
                        clearTimeout(window.COMET_TIMEOUT)
                    }
                    g = function() {
                        return d.sync(null, true)
                    };
                    return window.COMET_TIMEOUT = setTimeout(g, 200)
                })
            }
        }, {
            "../../models/.coffee.SyncEngine.js": 152
        }
    ],
    16: [
        function(j, b, x) {
            var c, a, p, d, n, u, v, q, i, t, h, w, y, k, m, r, g, s, o, l, f = function(z, C) {
                    return function() {
                        return z.apply(C, arguments)
                    }
                };
            m = window.Signals;
            d = window.DateUtils;
            a = window.Alerts;
            n = window.DateistDateHelpers;
            q = window.Indicator;
            l = window.imageSprite;
            c = window.$static_path;
            s = window.getKarmaImage;
            o = window.getOfflineMessage;
            k = j("../agenda/.coffee.RenderQueryDays.js");
            t = j("../labels/Labels.js");
            w = j("../notes/.coffee.NotesUtils.js");
            r = j("../themes/.coffee.Themes.js");
            u = j("../formatter/Formatter.js");
            i = j("../items_utils/.coffee.ItemsRender.js");
            y = j("../../models/.coffee.ProjectsModel.js");
            h = j("../../models/.coffee.LabelsModel.js");
            g = j("../../models/.coffee.UserModel.js");
            p = j("./.coffee.CompletedUtils.js");
            v = (function() {
                function z() {
                    this._processReqData = f(this._processReqData, this);
                    this._renderBlankState = f(this._renderBlankState, this);
                    this._renderItem = f(this._renderItem, this);
                    this._renderLoadMore = f(this._renderLoadMore, this);
                    this._renderItems = f(this._renderItems, this);
                    this.renderItems = f(this.renderItems, this);
                    this.showHistory = f(this.showHistory, this);
                    this.renderKarma = f(this.renderKarma, this);
                    this.updateCount = f(this.updateCount, this);
                    this.karmaUpdated = f(this.karmaUpdated, this);
                    this._resetState = f(this._resetState, this);
                    this._resetState();
                    m.connect("karma_updated", this.karmaUpdated);
                    m.connect("user_updated", this.karmaUpdated);
                    m.connect("theme_changed", (function(C) {
                        return function() {
                            var D;
                            D = $("s_completed_count");
                            if (D) {
                                return $replace(D, C.renderKarma())
                            }
                        }
                    })(this));
                    m.connect("completed_history.show", this.showHistory)
                }
                z.prototype._resetState = function() {
                    this.project_by_id = {};
                    return this.current_offset = 0
                };
                z.prototype.current_karma = null;
                z.prototype.karmaUpdated = function() {
                    var E, C, D;
                    E = $("s_completed_count");
                    D = window.User;
                    if (!E) {
                        return
                    }
                    if (window.User.karma_disabled) {
                        if (this.current_count !== window.User.completed_count) {
                            this.updateCount();
                            return this.highlightCount()
                        }
                    } else {
                        C = D.karma;
                        if (this.current_karma !== C) {
                            $replace(E, this.renderKarma());
                            this.highlightCount();
                            return this.current_karma = C
                        }
                    }
                };
                z.prototype.updateCount = function() {
                    var E, D, C;
                    E = window.User.completed_count;
                    if (!E) {
                        E = 0
                    }
                    this.current_count = E;
                    if (!window.User.karma_disabled) {
                        $replace($("s_completed_count"), this.renderKarma());
                        return
                    }
                    D = $("s_completed_count").innerHTML;
                    C = true;
                    if (D === "-") {
                        C = false
                    } else {
                        if (parseInt(D) === E) {
                            C = false
                        }
                    }
                    $replace($("s_completed_count"), "" + E);
                    if (C) {
                        return this.highlightCount()
                    }
                };
                z.prototype.highlightCount = function() {
                    return $fx.fadeIn($("completed_items"), {
                        duration: 1000
                    })
                };
                z.prototype.renderKarma = function() {
                    var F, D, E, C;
                    C = window.User;
                    this.current_karma = C.karma;
                    F = SPAN();
                    D = s(C.karma);
                    D.id = "karma_icon";
                    $add(F, D);
                    E = null;
                    if (C.karma_trend === "up") {
                        $add(F, E = l(r.getKarmaUpIcon(), 11, 9))
                    } else {
                        if (C.karma_trend === "down") {
                            $add(F, E = l(r.getKarmaDownIcon(), 11, 9))
                        }
                    } if (E) {
                        $addClass(E, "karma_up_down")
                    }
                    $add(F, SPAN({
                        c: "count"
                    }, "" + C.karma));
                    return F
                };
                z.prototype.showHistory = function() {
                    var M, D, O, J, Q, L, K, G, F, N, C, H, E;
                    m.sendSignal("projects.reset");
                    K = SELECT({
                        id: "select_project"
                    }, OPTION({
                        value: ""
                    }, _("Any project")), OPTION({
                        disabled: "disabled"
                    }, "---------"));
                    H = y.getAll();
                    for (G = 0, N = H.length; G < N; G++) {
                        Q = H[G];
                        if (Q.indent > 1) {
                            D = (function() {
                                var T, R, S;
                                S = [];
                                for (J = T = 0, R = Q.indent - 2; 0 <= R ? T <= R : T >= R; J = 0 <= R ? ++T : --T) {
                                    S.push("–")
                                }
                                return S
                            })();
                            D = D.join("") + " "
                        } else {
                            D = ""
                        }
                        $add(K, OPTION({
                            value: Q.id
                        }, D + Q.name))
                    }
                    L = SELECT({
                        id: "select_label"
                    }, OPTION({
                        value: ""
                    }, _("Any label")), OPTION({
                        disabled: "disabled"
                    }, "---------"));
                    E = $values(h.getAll());
                    for (F = 0, C = E.length; F < C; F++) {
                        O = E[F];
                        $add(L, OPTION({
                            value: O.name
                        }, O.name))
                    }
                    $AEV([L, K], "change", this.renderItems);
                    this.current_offset = 0;
                    M = DIV({
                        id: "completed_app"
                    }, DIV({
                        c: "filters"
                    }, K, L), DIV({
                        id: "completed_show"
                    }));
                    $replace($("editor"), M);
                    this.renderItems();
                    return false
                };
                z.prototype.renderItems = function() {
                    var D, E, C, F;
                    this._resetState();
                    m.sendSignal("change_location", "completed");
                    D = $("completed_show");
                    if (!window.User.is_premium) {
                        $replace(D, this._renderBlankState(0));
                        return
                    }
                    $replace($("completed_show"), IMG({
                        src: "https://d3ptyyxy2at9ui.cloudfront.net/fb947b5107ee9a4cbb1a7299459d46ae.gif"
                    }));
                    F = this._createReq(), E = F[0], C = F[1];
                    E.addCallback((function(G) {
                        return function(H) {
                            G._processReqData(H);
                            $replace(D, null);
                            if ($values(C).length !== 0 && H.items.length === 0) {
                                return $replace(D, SPAN({
                                    c: "light_error"
                                }, _("No completed tasks matches your filter.")))
                            } else {
                                if (H.items.length === 0) {
                                    return $replace(D, G._renderBlankState(H.items.length))
                                } else {
                                    return G._renderItems(D, H.items)
                                }
                            }
                        }
                    })(this));
                    E.addErrback(function(H, G) {
                        return $replace($("completed_app"), o(G))
                    });
                    return E.sendReq(C)
                };
                z.prototype._renderItems = function(K, J) {
                    var E, M, C, H, G, N, D, F, L;
                    for (F = 0, L = J.length; F < L; F++) {
                        N = J[F];
                        E = N.completed_date;
                        E = n.date_max(E);
                        H = "" + (E.getFullYear()) + "-" + (E.getMonth()) + "-" + (E.getDate());
                        M = "day_header_" + H;
                        C = "day_ul_" + H;
                        G = $(M);
                        if (!G) {
                            G = k._renderDayHeader(E, false);
                            G.id = M;
                            $add(K, G)
                        }
                        D = $(C);
                        if (!D) {
                            D = UL({
                                c: "items",
                                id: C
                            });
                            $add(K, D)
                        }
                        this._renderItem(K, D, N)
                    }
                    if (J.length > 0) {
                        return this._renderLoadMore(K)
                    }
                };
                z.prototype._renderLoadMore = function(D) {
                    var E, C;
                    C = _("Load more history") + "...";
                    $add(D, E = A({
                        c: "load_more",
                        href: "#"
                    }, C));
                    return $AEV(E, "click", (function(F) {
                        return function() {
                            var H, G, J;
                            if (E.loading) {
                                return false
                            } else {
                                E.loading = true
                            }
                            $replace(E, q.imgSmall());
                            J = F._createReq(), H = J[0], G = J[1];
                            H.addCallback(function(K) {
                                F._processReqData(K);
                                if (K.items.length === 0) {
                                    $addClass(E, "load_more_none");
                                    $replace(E, _("No more tasks to show"));
                                    $fx.fadeOut(E, {
                                        duration: 3000,
                                        onComplete: function() {
                                            return $remove(E)
                                        }
                                    })
                                } else {
                                    $remove(E)
                                }
                                return F._renderItems(D, K.items)
                            });
                            H.addErrback(function(L, K) {
                                alert(o(K));
                                E.loading = false;
                                return $replace(E, C)
                            });
                            H.sendReq(G);
                            return false
                        }
                    })(this))
                };
                z.prototype._renderItem = function(L, E, Q) {
                    var C, H, F, K, N, O, M, G, J, D;
                    D = SPAN({
                        c: "complete_time"
                    }, d.getHourAndMin(Q.completed_date));
                    J = null;
                    M = y.get(Q.project_id) || this.project_by_id[Q.project_id];
                    if (M) {
                        J = i.createProjectItem({
                            project_id: M.id
                        }, M)
                    }
                    F = l("cmp_trash", 16, 16);
                    $setVisibility(F, false);
                    N = LI({
                        c: "task_item"
                    }, D, J, F, C = SPAN());
                    G = function(R, S) {
                        return $setVisibility(R, S)
                    };
                    $AEV(F, "click", $p(this.deleteTask, N, Q.id));
                    $AEV(N, "mouseover", $p(G, F, true));
                    $AEV(N, "mouseout", $p(G, F, false));
                    H = u.format(Q.content);
                    H = t.formatByContent(H);
                    $setHTML(C, H);
                    O = w.renderIcon(Q, N);
                    K = $child(C, "div", "labels_holder");
                    if (K) {
                        $addBefore(O, K)
                    } else {
                        $add(C, O)
                    }
                    return $add(E, N)
                };
                z.prototype._renderBlankState = function() {
                    var C, D, E;
                    if (!window.User.is_premium) {
                        E = _("Completed view is a premium feature")
                    } else {
                        E = _("You don't have any completed tasks")
                    }
                    C = DIV({
                        c: "blank_state_text blank_state_completed"
                    }, B(E), DIV(_("Completed view makes it possible to see what you have done in the past."), " ", _("It's the perfect tool to review and improve your productivity."), " ", D = A({
                        href: "/Help/viewTrackProducitivty",
                        c: "action",
                        target: "_blank"
                    }, _("Read more") + "...")));
                    if (!window.User.is_premium) {
                        $add(C, DIV({
                            c: "text"
                        }, $setHTML(SPAN(), _("<a>Upgrade to Todoist Premium</a> for instant access to this and a lot of other features.").replace("<a>", '<a href="/premium" target="_blank">'))))
                    }
                    return C
                };
                z.prototype.deleteTask = function(C, D) {
                    var E;
                    E = function(G) {
                        var F;
                        if (!G) {
                            return
                        }
                        $hide(C);
                        F = $request("/API/v6/completed/delete");
                        F.offline_message = true;
                        F.addCallback(function() {
                            $remove(C);
                            return m.sendSignal("update_counters")
                        });
                        F.addErrback(function() {
                            return $show(C)
                        });
                        return F.sendReq({
                            task_id: D,
                            token: window.User.token
                        })
                    };
                    return a.confirm(_("Are you sure you want to delete this completed task?"), E)
                };
                z.prototype._createReq = function() {
                    var E, D, C;
                    D = $requestJSON("/API/v6/completed/get_all");
                    D.offline_message = true;
                    C = {
                        token: window.User.token,
                        annotate_notes: 1,
                        limit: 50
                    };
                    E = function(H, G) {
                        var F;
                        F = $selectValue($(H));
                        if (F) {
                            return C[G] = F
                        }
                    };
                    C.known_projects = $serialize(y.getIds());
                    E("select_project", "project_id");
                    E("select_label", "label");
                    if (this.current_offset !== 0) {
                        C.offset = this.current_offset
                    }
                    return [D, C]
                };
                z.prototype._processReqData = function(G) {
                    var D, F, C, E;
                    E = G.items;
                    for (F = 0, C = E.length; F < C; F++) {
                        D = E[F];
                        if ($isString(D.completed_date)) {
                            D.completed_date = new Date(D.completed_date)
                        }
                    }
                    if (G.projects) {
                        $update(this.project_by_id, G.projects)
                    }
                    return this.current_offset += G.items.length
                };
                return z
            })();
            b.exports = new v()
        }, {
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.UserModel.js": 156,
            "../agenda/.coffee.RenderQueryDays.js": 8,
            "../formatter/Formatter.js": 27,
            "../items_utils/.coffee.ItemsRender.js": 37,
            "../labels/Labels.js": 44,
            "../notes/.coffee.NotesUtils.js": 59,
            "../themes/.coffee.Themes.js": 101,
            "./.coffee.CompletedUtils.js": 18
        }
    ],
    17: [
        function(i, b, t) {
            var q, d, o, r, h, s, l, j, g, u, k, p, a, m, c, n, f = function(v, w) {
                    return function() {
                        return v.apply(w, arguments)
                    }
                };
            r = window.GB_hide;
            o = window.GB_getLast;
            h = window.GB_show;
            p = window.TooptipWin;
            k = window.Signals;
            d = window.DateUtils;
            q = window.AmiTooltip;
            l = window.Indicator;
            n = window.track;
            m = window.highDefCanvas;
            c = i("../misc/Misc.js").isMacStore;
            a = i("../opener/WindowOpener.js");
            u = i("../../models/.coffee.ProjectsModel.js");
            g = i("../project_list/.coffee.ProjectColors.js");
            j = i("./.coffee.KarmaGraph.js");
            s = (function() {
                function v() {
                    this._renderStreaks = f(this._renderStreaks, this);
                    this._renderKarmaHelp = f(this._renderKarmaHelp, this);
                    this.getProjectColor = f(this.getProjectColor, this);
                    this._renderData = f(this._renderData, this);
                    this._renderKarmaInfo = f(this._renderKarmaInfo, this);
                    this._renderTotalStats = f(this._renderTotalStats, this);
                    this.renderData = f(this.renderData, this);
                    this.reRender = f(this.reRender, this);
                    this.show = f(this.show, this);
                    this.renderLink = f(this.renderLink, this);
                    this.attach = f(this.attach, this)
                }
                v.prototype.full_width = 225;
                v.prototype.attach = function(w) {
                    return $AEV(w, "click", (function(x) {
                        return function() {
                            x.show(w);
                            return false
                        }
                    })(this))
                };
                v.prototype.hide = function() {
                    if (this.cur_window) {
                        return r()
                    }
                };
                v.prototype.renderLink = function() {
                    var w;
                    if (!window.User.karma_disabled) {
                        w = A({
                            href: "#completed",
                            c: "fixed_pos"
                        }, SPAN({
                            id: "s_completed_count"
                        }, "-"))
                    } else {
                        w = A({
                            href: "#completed",
                            c: "fixed_pos"
                        }, SPAN({
                            id: "s_completed_count"
                        }, "-"))
                    }
                    this.attach(w);
                    return w
                };
                v.prototype.show = function() {
                    var x, w, y;
                    if ($all("div", "completed_quick_viz").length > 0) {
                        return this.hide()
                    }
                    w = DIV({
                        c: "completed_quick_viz"
                    });
                    this.fetchData(w);
                    y = {
                        fn_left_offset: function(D, C) {
                            var z;
                            z = $position($("karma_icon") || $("completed_items")).x;
                            z = z - 95;
                            return z - (C.width / 2)
                        },
                        fn_top_offset: function() {
                            return 40
                        },
                        fn_arrow_left: function() {
                            var z;
                            z = $position($("karma_icon") || $("completed_items")).x;
                            return z
                        },
                        fixed_pos: true
                    };
                    p.show(_("Your Productivity"), w, 300, 315, y);
                    if ($winSize().h < 700) {
                        x = o().g_window;
                        $addClass(x, "limit_karma_window");
                        $setHeight(x, $winSize().h - 75)
                    }
                    return n("Karma", "Show")
                };
                v.prototype.reRender = function() {
                    var w;
                    w = $all("div", "completed_quick_viz");
                    if (w.length > 0) {
                        return this.fetchData(w[0])
                    }
                };
                v.prototype.fetchData = function(x) {
                    var w;
                    $replace(x, l.cssSpinner());
                    w = (function(y) {
                        return function() {
                            var C, z;
                            z = window.User;
                            C = $requestJSON("/API/v6/completed/get_stats");
                            C.addCallback(function(D) {
                                y.renderData(D, x);
                                window.User.karma = D.karma;
                                window.User.karma_trend = D.karma_trend;
                                return k.sendSignal("karma_updated")
                            });
                            C.addErrback(y.hide);
                            return C.sendReq({
                                token: window.User.token,
                                as_karma_graph: 0
                            })
                        }
                    })(this);
                    return setTimeout(w, 200)
                };
                v.prototype.renderData = function(y, w) {
                    var z, x;
                    $replace(w, null);
                    this.data_project_colors = y.project_colors;
                    if (!window.User.karma_disabled) {
                        $add(w, this._renderKarmaInfo(y))
                    }
                    $add(w, this._renderTotalStats(y));
                    $add(w, DIV({
                        c: "separator"
                    }));
                    z = y.goals || {};
                    x = {
                        str_caption: _("Completed last %s days").replace("%s", "7")
                    };
                    this._renderData(y.days_items, w, x, z.daily_goal || 0);
                    $add(w, DIV({
                        c: "separator"
                    }));
                    if (window.User.is_premium || !c()) {
                        x = {
                            str_caption: _("Completed last %s weeks").replace("%s", "4"),
                            check_premium: true
                        };
                        this._renderData(y.week_items, w, x, z.weekly_goal || 0)
                    }
                    $add(w, this._renderStreaks(y));
                    return $add(w, this._renderKarmaHelp())
                };
                v.prototype._renderTotalStats = function(y) {
                    var x, z, w;
                    x = DIV(DIV({
                        c: "separator"
                    }));
                    if (y.completed_count === 1) {
                        z = _("completed task")
                    } else {
                        z = _("completed tasks")
                    }
                    $add(x, DIV({
                        c: "completed_history_holder"
                    }, w = A({
                        href: "#completed"
                    }, _("View All")), B(y.completed_count || "0"), " ", z));
                    $AEV(w, "click", function() {
                        r();
                        k.sendSignal("completed_history.show");
                        return false
                    });
                    return x
                };
                v.prototype._renderKarmaInfo = function(D) {
                    var z, y, E, x, C, w;
                    C = null;
                    x = D.karma_last_update;
                    if (x !== void 0) {
                        if (x > 0) {
                            w = _("%s on last update!");
                            x = "+" + x
                        } else {
                            if (x < 0) {
                                w = _("%s on last update!")
                            } else {
                                w = _("No change on last update!")
                            }
                        }
                        C = $setHTML(SPAN({
                            c: "desc"
                        }), w.replace("%s", "<b>" + x + "</b>"))
                    }
                    y = DIV(H2(C, _("Karma Trend")));
                    $add(y, z = DIV({
                        s: "width: 255; height: 70"
                    }));
                    j.render(z, D.karma_graph_data, 285, 70);
                    $add(y, DIV({
                        c: "karma_updates"
                    }, E = A({
                        href: "#"
                    }, _("Karma Updates"))));
                    $AEV(E, "click", a.showKarmaInfo);
                    return y
                };
                v.prototype._renderData = function(R, ai, T, W) {
                    var U, ab, O, ao, am, V, Z, aj, M, E, L, Q, w, x, an, S, K, X, H, al, Y, ak, ah, ag, af, N, G, F, D, C, z, y, ae, ad, ac, aa, J;
                    if (W == null) {
                        W = 0
                    }
                    ao = DIV(H2(T.str_caption));
                    $add(ao, Y = UL());
                    if (T.check_premium && !window.User.is_premium) {
                        $add(Y, LI({
                            c: "promo"
                        }, _("Only available for premium."), A({
                            href: "/premium",
                            target: "_blank"
                        }, _("Upgrade now"))));
                        $add(ai, ao);
                        return false
                    }
                    am = {};
                    E = 0;
                    for (ak = 0, N = R.length; ak < N; ak++) {
                        V = R[ak];
                        E = Math.max(V.total_completed, E)
                    }
                    E = Math.max(W, E);
                    aj = this.full_width / 100;
                    L = 0;
                    for (ah = 0, G = R.length; ah < G; ah++) {
                        V = R[ah];
                        if (E === 0) {
                            O = am[V.date] = 0
                        } else {
                            O = am[V.date] = aj * (V.total_completed / E) * 100
                        } if (O > L) {
                            L = O
                        }
                    }
                    K = {};
                    for (ag = 0, F = R.length; ag < F; ag++) {
                        V = R[ag];
                        al = am[V.date];
                        Q = al / 100;
                        aa = V.items;
                        for (af = 0, D = aa.length; af < D; af++) {
                            w = aa[af];
                            M = "" + V.date + "-" + w.id;
                            K[M] = Q * (w.completed / V.total_completed) * 100
                        }
                    }
                    H = function(ap) {
                        return parseInt(ap.replace(/^0/, ""))
                    };
                    Z = function(aq) {
                        var ap;
                        aq = aq.split("-");
                        ap = new Date(H(aq[0]), H(aq[1]) - 1, H(aq[2]));
                        return d.getWeekdayShort(ap)
                    };
                    for (ae = 0, C = R.length; ae < C; ae++) {
                        V = R[ae];
                        if (V.date.indexOf("/") === -1) {
                            X = SPAN({
                                c: "short_date"
                            }, Z(V.date))
                        } else {
                            X = null
                        }
                        an = DIV({
                            c: "project_colors"
                        });
                        if (V.items.length === 0) {
                            $add(an, DIV({
                                c: "project_viz",
                                s: "width: 1px"
                            }))
                        }
                        ab = [];
                        J = V.items;
                        for (ad = 0, z = J.length; ad < z; ad++) {
                            w = J[ad];
                            w = u.get(w.id) || w;
                            M = "" + V.date + "-" + w.id;
                            S = K[M];
                            if (S) {
                                x = this.getProjectColor(w, S);
                                ab.push(x)
                            }
                        }
                        ab.sort(function(aq, ap) {
                            return aq.color - ap.color
                        });
                        for (ac = 0, y = ab.length; ac < y; ac++) {
                            U = ab[ac];
                            $add(an, U)
                        }
                        $add(Y, LI(an, X, B("" + V.total_completed)))
                    }
                    this._addGoalLine(W, ao, R, L, E, aj);
                    return $add(ai, ao)
                };
                v.prototype.getProjectColor = function(z, y) {
                    var w, x;
                    if (y == null) {
                        y = 5
                    }
                    x = DIV({
                        c: "project_viz"
                    });
                    w = z.color;
                    if (w === void 0 && this.data_project_colors) {
                        w = this.data_project_colors[z.id]
                    }
                    if (w !== void 0) {
                        $setStyle(x, {
                            backgroundColor: g.get()[w] || "#dddddd",
                            width: y
                        })
                    } else {
                        $setStyle(x, {
                            backgroundColor: "#dddddd",
                            width: y
                        })
                    }
                    x.color = w || 0;
                    return x
                };
                v.prototype._renderKarmaHelp = function() {
                    var x, w;
                    x = DIV({
                        c: "karma_help"
                    }, DIV(w = A({
                        href: "#"
                    }, _("Karma Settings and Goals"))));
                    $AEV(w, "click", function() {
                        return a.showPrefs("karma", _("Karma Settings and Goals"))
                    });
                    return x
                };
                v.prototype._renderStreaks = function(w) {
                    var G, F, y, z, x, C, E, D;
                    x = w.goals;
                    if (!x) {
                        return null
                    }
                    y = function(H) {
                        if (H === 1) {
                            return _("1 day")
                        } else {
                            return _("%s days").replace("%s", H)
                        }
                    };
                    z = function(H) {
                        if (H === 1) {
                            return _("1 week")
                        } else {
                            return _("%s weeks").replace("%s", H)
                        }
                    };
                    F = function(J) {
                        var H, K;
                        K = new Date(J.start);
                        K.setSeconds(59);
                        K = d.format(K, false, {
                            with_year: false
                        });
                        H = new Date(J.end);
                        H.setSeconds(59);
                        H = d.format(H, false, {
                            with_year: false
                        });
                        return K + " - " + H
                    };
                    E = function(N, M, H, J) {
                        var L, K;
                        if (J === "daily") {
                            L = y
                        } else {
                            L = z
                        } if (H.end === "" && J === "daily") {
                            K = _("Complete your goals to increase your streaks")
                        } else {
                            if (H.end === "") {
                                K = _("Longest") + ": -"
                            } else {
                                K = SPAN(_("Longest"), ": ", L(H.count), BR(), F(H))
                            }
                        }
                        return DIV({
                            c: "streak " + J
                        }, N, B(L(M.count)), SPAN({
                            c: "longest"
                        }, K))
                    };
                    G = E(_("Daily Streak"), x.current_daily_streak, x.max_daily_streak, "daily");
                    if (window.User.is_premium) {
                        D = E(_("Weekly Streak"), x.current_weekly_streak, x.max_weekly_streak, "weekly")
                    } else {
                        D = null;
                        $addClass(G, "single_tile")
                    }
                    return C = DIV({
                        c: "streaks"
                    }, G, D)
                };
                v.prototype._addGoalLine = function(G, C, F, L, z, w) {
                    var D, y, J, H, E, K, x;
                    if (G === 0) {
                        return
                    }
                    y = document.createElement("canvas");
                    J = y.getContext("2d");
                    m(y, J);
                    D = F.length * 20 + 12;
                    y.width = 250;
                    y.height = D + 17;
                    m(y, J);
                    $addClass(y, "goal_line");
                    H = w * (G / z) * 100;
                    E = D + 5;
                    J.strokeStyle = "#666666";
                    J.fillStyle = "#666666";
                    J.lineWidth = 1.5;
                    x = 7;
                    J.beginPath();
                    J.moveTo(H, x);
                    J.lineTo(H, E);
                    J.stroke();
                    J.closePath();
                    J.beginPath();
                    J.arc(H, x, 2, 0, 2 * Math.PI, false);
                    J.fill();
                    J.closePath();
                    J.beginPath();
                    J.arc(H, E, 2, 0, 2 * Math.PI, false);
                    J.fill();
                    J.closePath();
                    if (F.length === 7) {
                        K = _("Daily Goal") + ": " + G
                    } else {
                        K = _("Weekly Goal") + ": " + G
                    }
                    $addClass(C, "fixed_pos");
                    q.showSimpleText(C, K, null, x + 2, H - 7);
                    return $ATT(C, y)
                };
                return v
            })();
            window.CompletedQuickVisualize = new s();
            b.exports = window.CompletedQuickVisualize
        }, {
            "../../models/.coffee.ProjectsModel.js": 143,
            "../misc/Misc.js": 54,
            "../opener/WindowOpener.js": 64,
            "../project_list/.coffee.ProjectColors.js": 74,
            "./.coffee.KarmaGraph.js": 19
        }
    ],
    18: [
        function(b, c, a) {
            a.splitIntoDays = function(g) {
                var m, h, l, j, d, k, f;
                l = function(q, n) {
                    var s, p, r;
                    p = g[n + 1];
                    if (p) {
                        s = q;
                        r = p.completed_date;
                        return s.getDate() === r.getDate() && s.getMonth() === r.getMonth() && s.getYear() === r.getYear()
                    } else {
                        return false
                    }
                };
                d = [];
                m = [];
                for (h = k = 0, f = g.length; k < f; h = ++k) {
                    j = g[h];
                    m.push(j);
                    if (!l(j.completed_date, h)) {
                        d.push({
                            items: m,
                            date: j.completed_date
                        });
                        m = []
                    }
                }
                return d
            }
        }, {}
    ],
    19: [
        function(c, b, d) {
            var h, f, a, j, i, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            h = window.AmiTooltip;
            f = window.DateUtils;
            i = window.highDefCanvas;
            j = c("../themes/.coffee.Themes.js");
            a = (function() {
                function k() {
                    this.renderWeekdays = g(this.renderWeekdays, this);
                    this.renderXaxis = g(this.renderXaxis, this);
                    this.renderPoints = g(this.renderPoints, this);
                    this.calculateYPos = g(this.calculateYPos, this);
                    this.calculateXPos = g(this.calculateXPos, this);
                    this.render = g(this.render, this)
                }
                k.prototype.x_axis_font_height = 10;
                k.prototype.x_axis_start = 10;
                k.prototype.fill_start = 22;
                k.prototype.graph_starts = 11;
                k.prototype.x_diff = 4;
                k.prototype.y_diff = 7;
                k.prototype.render = function(o, q, p, l) {
                    var n, m;
                    if (!q) {
                        q = []
                    }
                    if (j.theme_name === "neutral") {
                        this.graph_color = "#535a5b"
                    } else {
                        this.graph_color = j.getPrimaryColor()
                    }
                    n = document.createElement("canvas");
                    m = n.getContext("2d");
                    n.width = p;
                    n.height = l;
                    i(n, m);
                    o.appendChild(n);
                    m.fillStyle = "#eeeeee";
                    m.font = "" + this.x_axis_font_height + "px Helvetica";
                    this.calculateYPos(q, this.graph_starts, l - this.graph_starts);
                    this.calculateXPos(q, 5, p - 5);
                    this.renderPoints(o, m, q, p, l);
                    this.renderWeekdays(m, q, p, l);
                    return this.renderXaxis(m, q, p, l)
                };
                k.prototype.calculateXPos = function(s, p, l) {
                    var o, n, w, m, t, v, r, u, q;
                    t = function(x) {
                        return parseInt(x.replace(/^0/, ""))
                    };
                    n = Math.ceil(l / s.length) + 3;
                    v = p;
                    w = [];
                    q = [];
                    for (r = 0, u = s.length; r < u; r++) {
                        o = s[r];
                        m = o.date.split("-");
                        o.date = new Date(t(m[0]), t(m[1]) - 1, t(m[2]));
                        o.x_pos = v;
                        q.push(v += n)
                    }
                    return q
                };
                k.prototype.calculateYPos = function(v, y, l) {
                    var o, r, p, w, u, t, q, x, n, m, s;
                    l = l - y;
                    p = 100000;
                    for (u = 0, x = v.length; u < x; u++) {
                        o = v[u];
                        if (o.karma_avg < p) {
                            p = o.karma_avg
                        }
                    }
                    r = 1;
                    for (t = 0, n = v.length; t < n; t++) {
                        o = v[t];
                        o.y_pos = o.karma_avg - p;
                        if (o.y_pos > r) {
                            r = o.y_pos
                        }
                    }
                    w = l / r;
                    s = [];
                    for (q = 0, m = v.length; q < m; q++) {
                        o = v[q];
                        o.y_pos = o.y_pos * w;
                        o.y_pos = l - o.y_pos;
                        s.push(o.y_pos_org = l - o.y_pos)
                    }
                    return s
                };
                k.prototype.renderPoints = function(v, y, s) {
                    var x, u, z, q, t, r, p, n, w, m, l, o;
                    q = this.x_diff;
                    t = this.y_diff;
                    y.beginPath();
                    z = s[0];
                    y.moveTo(z.x_pos + q, z.y_pos + t);
                    for (r = 0, w = s.length; r < w; r++) {
                        x = s[r];
                        if (x === z) {
                            continue
                        }
                        y.lineTo(x.x_pos + q, x.y_pos + t)
                    }
                    y.lineTo(x.x_pos + q, z.y_pos + t);
                    y.lineTo(z.x_pos + q, z.y_pos + t);
                    if (j.theme_name === "neutral") {
                        y.fillStyle = "#ececec"
                    } else {
                        y.fillStyle = this.hexToRgb(this.graph_color, 0.1)
                    }
                    y.fill();
                    y.closePath();
                    for (p = 0, m = s.length; p < m; p++) {
                        x = s[p];
                        y.beginPath();
                        y.fillStyle = this.graph_color;
                        y.arc(x.x_pos + q, x.y_pos + t, 2, 0, 2 * Math.PI, false);
                        y.fill();
                        y.closePath();
                        $add(v, u = DIV({
                            s: "position: absolute; width: 20px; height: 20px;",
                            c: "fixed_pos"
                        }));
                        u.style.marginLeft = x.x_pos + "px";
                        u.style.marginTop = (-x.y_pos_org - this.graph_starts - 19) + "px";
                        h.showSimpleText(u, x.karma_avg || "0", null, -5, -2)
                    }
                    y.lineWidth = 2;
                    y.strokeStyle = this.graph_color;
                    z = s[0];
                    o = [];
                    for (n = 0, l = s.length; n < l; n++) {
                        x = s[n];
                        if (x === z) {
                            continue
                        }
                        y.beginPath();
                        y.moveTo(z.x_pos + q, z.y_pos + t);
                        y.lineTo(x.x_pos + q, x.y_pos + t);
                        y.stroke();
                        y.closePath();
                        o.push(z = x)
                    }
                    return o
                };
                k.prototype.renderXaxis = function(v, p, l, u) {
                    var t, n, r, q, o, s, m;
                    q = u - 5 - this.x_axis_start;
                    v.strokeStyle = "#999999";
                    v.lineWidth = 0.2;
                    n = this.x_diff;
                    r = this.y_diff;
                    m = [];
                    for (o = 0, s = p.length; o < s; o++) {
                        t = p[o];
                        v.beginPath();
                        v.moveTo(t.x_pos + n, q + r);
                        v.lineTo(t.x_pos + n, t.y_pos + r);
                        v.stroke();
                        m.push(v.closePath())
                    }
                    return m
                };
                k.prototype.renderWeekdays = function(u, p, l, t) {
                    var s, m, q, o, r, n;
                    q = t - 2;
                    u.fillStyle = "#999999";
                    n = [];
                    for (o = 0, r = p.length; o < r; o++) {
                        s = p[o];
                        m = f.getWeekdayShort(s.date);
                        n.push(u.fillText(m, s.x_pos + 1, q))
                    }
                    return n
                };
                k.prototype.hexToRgb = function(m, n) {
                    var l;
                    l = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(m);
                    return "rgba(" + (parseInt(l[1], 16)) + ", " + (parseInt(l[2], 16)) + ", " + (parseInt(l[3], 16)) + ", " + n + ")"
                };
                return k
            })();
            b.exports = new a()
        }, {
            "../themes/.coffee.Themes.js": 101
        }
    ],
    20: [
        function(j, a, t) {
            var m, c, q, s, p, r, g, n, i, h, d, b, o, l, k, f = function(u, v) {
                    return function() {
                        return u.apply(v, arguments)
                    }
                };
            n = window.MouseHover;
            c = window.ElementStore;
            m = window.DateistDateHelpers;
            k = window.imageSprite;
            d = j("../../components/agenda/RenderDateItems.js");
            h = j("../../components/project_editor/.coffee.ProjectEditorManager.js");
            i = j("../postpone/.coffee.Postpone.js");
            b = j("../sortable/Sortable.js");
            p = j("../items_utils/.coffee.ItemCommonEdits.js");
            s = j("../generic_manager/GenericManagerUtils.js");
            r = j("../../models/.coffee.ItemsModel.js");
            l = j("../../models/.coffee.UtilModels.js");
            g = j("../../models/.coffee.ModelUndo.js");
            o = j("../../models/.coffee.StateModel.js");
            q = (function() {
                u.prototype.DepAgenda = null;
                u.prototype.DepProjectList = null;
                u.prototype.DepFiltersList = null;
                u.prototype.DepLabelsList = null;
                u.prototype.DepLeftMenuTabs = null;

                function u() {
                    this.showUndo = f(this.showUndo, this);
                    this.autoFocusInput = f(this.autoFocusInput, this);
                    this.onEndToProject = f(this.onEndToProject, this);
                    this.onDragToProject = f(this.onDragToProject, this);
                    this.agendaOnStart = f(this.agendaOnStart, this);
                    this.agendaOnDrag = f(this.agendaOnDrag, this);
                    this.agendaOnEnd = f(this.agendaOnEnd, this);
                    this.genericMakeSortable = f(this.genericMakeSortable, this);
                    this.genericOnEnd = f(this.genericOnEnd, this);
                    this.genericMouseDown = f(this.genericMouseDown, this);
                    this.labelsMakeSortable = f(this.labelsMakeSortable, this);
                    this.filtersMakeSortable = f(this.filtersMakeSortable, this);
                    this.projectListMakeSortable = f(this.projectListMakeSortable, this);
                    this.projectEditorMakeSortable = f(this.projectEditorMakeSortable, this);
                    this.agendaMakeSortable = f(this.agendaMakeSortable, this);
                    this.attach = f(this.attach, this);
                    this.attachHandler = f(this.attachHandler, this);
                    this.handler = DIV({
                        c: "drag_and_drop_handler"
                    }, k("cmp_reorder_handler", 16, 23));
                    this.handler.onmousedown = this.genericMouseDown;
                    this.handler.reuseable = true;
                    this.current_li = null;
                    o.set("drag_and_drop_mode", o.DragMode.waiting);
                    this.undo_items = []
                }
                u.prototype.attachHandler = function(v) {
                    this.current_li = v;
                    if ($child(v, "img", "arrow")) {
                        $addClass(this.handler, "extra_arrow_marigin")
                    } else {
                        $removeClass(this.handler, "extra_arrow_marigin")
                    }
                    return $ATT(v, this.handler)
                };
                u.prototype.attach = function(v, x) {
                    var y, w;
                    if (x == null) {
                        x = {}
                    }
                    w = (function(z) {
                        return function() {
                            if (o.get("drag_and_drop_mode") === o.DragMode.reordering) {
                                return false
                            }
                            n.clearCurrentTimeout();
                            return z.attachHandler(v)
                        }
                    })(this);
                    y = (function(z) {
                        return function() {
                            return $remove(z.handler)
                        }
                    })(this);
                    n.attach(v, "drag_and_drop_" + v.json.id, w, y, 100);
                    if (x.trigger_mouse_over) {
                        return w()
                    }
                };
                u.prototype.agendaMakeSortable = function(v) {
                    return this.genericMakeSortable(this.DepAgenda.get(), v)
                };
                u.prototype.projectEditorMakeSortable = function(v) {
                    this.current_editor = h.current_editor;
                    return this.genericMakeSortable(this.current_editor, v)
                };
                u.prototype.projectListMakeSortable = function(v) {
                    return this.genericMakeSortable(this.DepProjectList, v)
                };
                u.prototype.filtersMakeSortable = function(v) {
                    return this.genericMakeSortable(this.DepFiltersList, v)
                };
                u.prototype.labelsMakeSortable = function(v) {
                    return this.genericMakeSortable(this.DepLabelsList, v)
                };
                u.prototype.genericMouseDown = function(v) {
                    var w;
                    w = this.current_li.json.manager_type;
                    if ($hasClass(this.current_li, "agenda_item")) {
                        return this.agendaMakeSortable(v)
                    } else {
                        if ($hasClass(this.current_li, "task_item") || w === "project_editor") {
                            return this.projectEditorMakeSortable(v)
                        } else {
                            if (this.DepLeftMenuTabs.getCurrentTab() === "filters") {
                                return this.filtersMakeSortable(v)
                            } else {
                                if (this.DepLeftMenuTabs.getCurrentTab() === "labels") {
                                    return this.labelsMakeSortable(v)
                                } else {
                                    return this.projectListMakeSortable(v)
                                }
                            }
                        }
                    }
                };
                u.prototype.genericOnEnd = function() {
                    o.set("drag_and_drop_mode", o.DragMode.waiting);
                    this.current_editor = null;
                    this.sortable.onEnd();
                    return this.autoFocusInput()
                };
                u.prototype.genericMakeSortable = function(C, O) {
                    var E, H, N, D, v, J, F, L, K, z, y, M, x, w, Q, R, G;
                    C.save_indent = false;
                    this.handler.onmousedown = this.genericMouseDown;
                    H = $parent(this.handler, "li");
                    if (C.list_class === "ProjectEditor") {
                        K = [];
                        E = $all("li", "task_item");
                        G = $all("li", "task_item");
                        for (x = 0, Q = G.length; x < Q; x++) {
                            M = G[x];
                            if ($hasClass(M, "history_item")) {
                                continue
                            }
                            if ($hasClass(M, "reorder_item") || M.json && !$isHidden(M)) {
                                K.push(M)
                            }
                        }
                    } else {
                        K = C.getAllRenrededItems(true)
                    } if (C.undo_reorder_intent) {
                        D = [];
                        for (w = 0, R = K.length; w < R; w++) {
                            N = K[w];
                            if (N.json) {
                                D.push(N.json)
                            }
                        }
                        this.undo_items = g.markCheckpoint(D, C.undo_reorder_intent).items
                    }
                    this.sortable = y = new b(K, C);
                    this.project_items = null;
                    v = false;
                    J = y.onDrag;
                    F = y.onEnd;
                    L = y.onStart;
                    z = true;
                    if (C.list_class === "ProjectEditor") {
                        this.project_items = this.calculateProjectListXY();
                        this.list_class = C;
                        J = this.onDragToProject;
                        F = this.onEndToProject;
                        v = true
                    } else {
                        if (C === this.DepProjectList || C === this.DepFiltersList || C === this.DepLabelsList) {
                            F = (function(S) {
                                return function() {
                                    S.genericOnEnd();
                                    C.saveOrder();
                                    S.showUndo(C);
                                    if (C.arrows) {
                                        return C.arrows.updateArrows()
                                    }
                                }
                            })(this);
                            z = false;
                            if (C === this.DepProjectList) {
                                v = true
                            } else {
                                this.sortable.set_indent = false
                            }
                        } else {
                            if (C === this.DepAgenda.get()) {
                                F = this.agendaOnEnd;
                                L = this.agendaOnStart;
                                J = this.agendaOnDrag;
                                this.sortable.set_indent = false
                            }
                        }
                    }
                    ICE.$dnd.dragAble(H, {
                        handler: this.handler,
                        move_x: v,
                        on_start: L,
                        on_drag: J,
                        scroll_on_overflow: z,
                        on_end: F
                    });
                    o.set("drag_and_drop_mode", o.DragMode.reordering);
                    ICE.$dnd._start(this.handler, O);
                    $preventDefault(O);
                    return false
                };
                u.prototype.agendaOnEnd = function(H) {
                    var C, E, v, F, K, L, D, x, G, w, y, J, z;
                    C = ICE.$dnd.current_root;
                    v = C.json;
                    this.genericOnEnd(H);
                    if (this.postpone_box) {
                        w = $hasClass(this.postpone_box, "will_drop_bg");
                        $remove(this.postpone_box);
                        if (w) {
                            i.postPoneUpdate([C], true);
                            return
                        }
                    }
                    $removeClass(C, "moved");
                    G = $parent(C, "ul");
                    F = $hasClass(G, "is_filtered");
                    D = {};
                    x = 1;
                    z = G.childNodes;
                    for (y = 0, J = z.length; y < J; y++) {
                        K = z[y];
                        if ($hasClass(K, "moved")) {
                            continue
                        }
                        if (K.json && K.json.id) {
                            D[K.json.id] = x++
                        }
                    }
                    E = v.due_date;
                    L = G.day_date;
                    if (E && L) {
                        if (!d.isSameDay(E, L)) {
                            p.markForUndo([v], "postpone", _("Date updated"));
                            v = r.update(v.id, {
                                due_date: m.inherit_date(L, E)
                            })
                        }
                    }
                    if (!F) {
                        r.updateDayOrders(D)
                    }
                    this.DepAgenda.get().arrows.updateArrows(G);
                    this.updateDayStyles();
                    return this.DepAgenda.get().renderInspirationalIfNeeded()
                };
                u.prototype.agendaOnDrag = function() {
                    var y, w, x, v;
                    this.sortable.onDrag();
                    if (this.postpone_box) {
                        v = $position(this.postpone_box).y;
                        w = ICE.$dnd.mouse_pos || $mousePos();
                        x = w.y;
                        y = v - x;
                        if (y < 14 && y > -60) {
                            return $addClass(this.postpone_box, "will_drop_bg")
                        } else {
                            return $removeClass(this.postpone_box, "will_drop_bg")
                        }
                    }
                };
                u.prototype.agendaOnStart = function() {
                    var x, C, F, w, v, z, D, y;
                    x = ICE.$dnd.current_root;
                    w = x.json;
                    D = $parent(x, "ul");
                    try {
                        y = l.getNewDate(w, true), z = y[0], v = y[1], C = y[2], F = y[3]
                    } catch (E) {
                        C = ""
                    }
                    this.postpone_box = DIV({
                        id: "postpone_box"
                    }, $setHTML(SPAN(), _("Drop to postpone: <b>%s</b>").replace("%s", C)));
                    $setOpacity(this.postpone_box, 0);
                    $addAfter(this.postpone_box, D);
                    $fx.fadeIn(this.postpone_box);
                    return this.sortable.onStart()
                };
                u.prototype.calculateProjectListXY = function() {
                    var y, w, C, x, z, v;
                    x = [];
                    w = this.DepProjectList.getAllRenrededItems(true, false);
                    w.push($("filter_inbox"));
                    for (z = 0, v = w.length; z < v; z++) {
                        y = w[z];
                        C = $position(y);
                        C.x_max = C.x + y.offsetWidth;
                        C.y_max = C.y + y.offsetHeight;
                        C.project = y;
                        x.push(C)
                    }
                    return x
                };
                u.prototype.onDragToProject = function() {
                    var w, D, C, v, E, y, F, z, x;
                    this.sortable.onDrag();
                    if (!this.current_li.json.manager_type) {
                        w = ICE.$dnd.mouse_pos || $mousePos();
                        D = w.x;
                        C = w.y;
                        C += $("left_menu").scrollTop - $scrollTop();
                        if (this.drop_to_project) {
                            $removeClass(this.drop_to_project, "will_drop_bg");
                            this.drop_to_project = null
                        }
                        z = this.project_items;
                        x = [];
                        for (y = 0, F = z.length; y < F; y++) {
                            E = z[y];
                            v = D >= E.x && D <= E.x_max;
                            v = v && C >= E.y && C <= E.y_max;
                            if (v) {
                                $addClass(E.project, "will_drop_bg");
                                this.drop_to_project = E.project;
                                break
                            } else {
                                x.push(void 0)
                            }
                        }
                        return x
                    }
                };
                u.prototype.onEndToProject = function() {
                    var F, K, D, L, H, y, C, E, J, z, x, w, v, M, Q, O, N, G;
                    o.set("drag_and_drop_mode", o.DragMode.waiting);
                    G = this.project_items;
                    for (z = 0, M = G.length; z < M; z++) {
                        E = G[z];
                        $removeClass(E.project, "will_drop_bg")
                    }
                    y = ICE.$dnd.current_root;
                    K = this.sortable.cur_child;
                    this.sortable.onEnd();
                    D = $parent(y, "div", "project_editor_instance");
                    if (D) {
                        D = c.get(D, "editor")
                    }
                    if (this.drop_to_project) {
                        H = [y];
                        if (K) {
                            H = H.concat(K)
                        }
                        J = {};
                        C = J[y.json.project_id] = [y.json.id];
                        for (x = 0, Q = K.length; x < Q; x++) {
                            F = K[x];
                            C.push(F.json.id)
                        }
                        p.moveItems(J, this.drop_to_project.json.id);
                        for (w = 0, O = H.length; w < O; w++) {
                            L = H[w];
                            $remove(L)
                        }
                        this.drop_to_project = null;
                        this.DepAgenda.get().updateCounters()
                    } else {
                        if (D && this.current_editor !== D) {
                            r.update(y.json.id, {
                                project_id: D.project_id
                            });
                            D.saveOrder();
                            $swap(y, y = D.renderItem(y.json));
                            for (v = 0, N = K.length; v < N; v++) {
                                F = K[v];
                                $swap(F, D.renderItem(F.json))
                            }
                            s.showHideChildren($AF(D.current_list.childNodes));
                            this.current_editor.arrows.updateArrows();
                            D.arrows.updateArrows()
                        } else {
                            this.current_editor.saveOrder();
                            this.showUndo(this.current_editor);
                            this.current_editor.arrows.updateArrows()
                        }
                    }
                    this.autoFocusInput();
                    n.clearCurrentTimeout();
                    return this.attachHandler(y)
                };
                u.prototype.autoFocusInput = function() {
                    var v;
                    if (this.current_li.json.manager_type) {
                        v = $child(this.current_li, null, "richtext_editor");
                        if (v) {
                            return v.proxyFocus()
                        }
                    }
                };
                u.prototype.showUndo = function(v) {
                    if (v.undo_reorder_intent) {
                        p.markForUndo(this.undo_items, v.undo_reorder_intent, _("Order changed"))
                    }
                    return this.undo_items = []
                };
                u.prototype.updateDayStyles = function() {
                    var G, F, x, J, w, D, C, H, v, E, z, y;
                    E = $all("h2", "section_header");
                    y = [];
                    for (D = 0, H = E.length; D < H; D++) {
                        x = E[D];
                        F = x.parentNode;
                        w = F.nextSibling;
                        G = 0;
                        z = w.childNodes;
                        for (C = 0, v = z.length; C < v; C++) {
                            J = z[C];
                            if (J.json && J.json.id) {
                                G += 1
                            }
                        }
                        if (G === 0) {
                            if ($hasClass(x, "overdue")) {
                                $remove(F);
                                y.push($remove(w))
                            } else {
                                y.push($addClass(F, "no_tasks"))
                            }
                        } else {
                            y.push($removeClass(F, "no_tasks"))
                        }
                    }
                    return y
                };
                return u
            })();
            window.DragAndDrop = new q();
            a.exports = window.DragAndDrop
        }, {
            "../../components/agenda/RenderDateItems.js": 13,
            "../../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ModelUndo.js": 140,
            "../../models/.coffee.StateModel.js": 149,
            "../../models/.coffee.UtilModels.js": 157,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../items_utils/.coffee.ItemCommonEdits.js": 34,
            "../postpone/.coffee.Postpone.js": 66,
            "../sortable/Sortable.js": 96
        }
    ],
    21: [
        function(c, d, a) {
            var f, b = function(g, h) {
                    return function() {
                        return g.apply(h, arguments)
                    }
                };
            f = (function() {
                function g() {
                    this.flattenSections = b(this.flattenSections, this);
                    this.forceList = b(this.forceList, this);
                    this.getItemIds = b(this.getItemIds, this)
                }
                g.prototype.createSection = function(j, i, h) {
                    if (h == null) {
                        h = "flat_view"
                    }
                    return {
                        name: j,
                        items: i,
                        view: h
                    }
                };
                g.prototype.getItemIds = function(p) {
                    var h, q, n, l, k, o, i, m, j;
                    h = {};
                    m = this.forceList(p);
                    for (l = 0, o = m.length; l < o; l++) {
                        n = m[l];
                        j = n.items;
                        for (k = 0, i = j.length; k < i; k++) {
                            q = j[k];
                            h[q.id] = true
                        }
                    }
                    return h
                };
                g.prototype.isArray = function(h) {
                    return Object.prototype.toString.call(h) === "[object Array]"
                };
                g.prototype.forceList = function(h) {
                    if (this.isArray(h)) {
                        return h
                    } else {
                        return [h]
                    }
                };
                g.prototype.flattenSections = function(o) {
                    var m, p, l, j, i, n, h, k;
                    p = [];
                    for (j = 0, n = o.length; j < n; j++) {
                        l = o[j];
                        if (this.isArray(l)) {
                            p = p.concat(l)
                        } else {
                            if (l.get_sections) {
                                k = l.get_sections();
                                for (i = 0, h = k.length; i < h; i++) {
                                    m = k[i];
                                    p.push(m)
                                }
                            } else {
                                p.push(l)
                            }
                        }
                    }
                    return p
                };
                return g
            })();
            d.exports = new f()
        }, {}
    ],
    22: [
        function(f, d, h) {
            var i, g, b, a, k, c, j = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            c = window.translate_to_english;
            k = window.format;
            a = window.LANG;
            b = window.I18N_FILTERS;
            g = f("./.coffee.FilerHelpers.js");
            i = (function() {
                l.prototype.re_set_op = /(\&|\|)/g;

                function l(m) {
                    this.evaluteMinusOp = j(this.evaluteMinusOp, this);
                    this.evaluteOrOp = j(this.evaluteOrOp, this);
                    this.evaluteAndOp = j(this.evaluteAndOp, this);
                    this.evaluateSetOperations = j(this.evaluateSetOperations, this);
                    this.convertToSections = j(this.convertToSections, this);
                    this.convertToTerms = j(this.convertToTerms, this);
                    this.rewriteOperators = j(this.rewriteOperators, this);
                    this.filterItems = j(this.filterItems, this);
                    this.filter_defs_obj = m
                }
                l.prototype.filterItems = function(p, m) {
                    var o, n;
                    m = this.rewriteOperators(m);
                    n = this.convertToTerms(m);
                    o = this.convertToSections(p, n);
                    o = this.evaluateSetOperations(o);
                    o = g.flattenSections(o);
                    return o
                };
                l.prototype.rewriteOperators = function(m) {
                    m = m.replace(/[\s,&]+((&|and)[\s,&]+)+/gi, " & ");
                    m = m.replace(/[\s,\|]+((\||or)[\s,\|]+)+/gi, " | ");
                    m = m.replace(/([^,|&]+)\s@/g, "$1 & @");
                    m = m.replace(/(@[^\s,|&]+)\s+([^,|&])/g, "$1 & $2");
                    m = m.replace(/([^,|&:]+)\s:/g, "$1 & :");
                    m = m.replace(/:\s+([^,|&:])/g, ": & $1");
                    return m
                };
                l.prototype.convertToTerms = function(w) {
                    var u, C, s, v, q, D, z, n, y, r, p, x, m, t, o;
                    v = function(E) {
                        return E.replace(",", "~")
                    };
                    w = w.replace(/\([^)]+\)/g, v);
                    D = [];
                    t = w.split(",");
                    for (r = 0, x = t.length; r < x; r++) {
                        z = t[r];
                        z = $strip(z).replace(/~/g, ",");
                        s = {};
                        C = 1;
                        q = function(E) {
                            var F;
                            C++;
                            F = "~!" + C;
                            s[F] = E;
                            return F
                        };
                        z = z.replace(/\([^)]+\)/g, q);
                        D.push(",");
                        o = z.split(this.re_set_op);
                        for (p = 0, m = o.length; p < m; p++) {
                            n = o[p];
                            if (n) {
                                for (u in s) {
                                    y = s[u];
                                    n = n.replace(u, y)
                                }
                                n = $strip(n);
                                D.push(n)
                            }
                        }
                    }
                    return D
                };
                l.prototype.convertToSections = function(t, r) {
                    var D, w, y, x, s, v, q, p, z, C, n, m, E, F, u;
                    q = t;
                    z = [];
                    for (n = 0, E = r.length; n < E; n++) {
                        C = r[n];
                        if (C === ",") {
                            t = q;
                            continue
                        }
                        p = null;
                        if (C.indexOf("(") !== -1) {
                            C = C.replace("(", "").replace(")", "");
                            p = this.filterItems(t, C)
                        } else {
                            if (C.match(this.re_set_op)) {
                                z.push(C);
                                continue
                            }
                            y = false;
                            if (C.indexOf("-") === 0 || C.indexOf("!") === 0) {
                                y = true;
                                C = $strip(C.replace(/[-!]/, ""))
                            }
                            try {
                                if (C.indexOf("@") === -1) {
                                    C = c(b, "" + a + "_defs", C)
                                }
                            } catch (o) {
                                D = o;
                                null
                            }
                            u = this.filter_defs_obj.all_filters;
                            for (m = 0, F = u.length; m < F; m++) {
                                w = u[m];
                                s = C.match(w.query_match);
                                if (s) {
                                    if (w.filter_sections) {
                                        p = w.filter_sections(t, s)
                                    } else {
                                        x = w.filter_items(t, s);
                                        v = w.name_fn;
                                        if (v) {
                                            w.name = v(s)
                                        }
                                        p = g.createSection(w.name, x, w.view);
                                        if (w.get_sections) {
                                            p.get_sections = w.get_sections
                                        }
                                    }
                                    break
                                }
                            }
                            if (!p) {
                                throw new Error(k("There was an error. Could not understand `%s`.", C))
                            }
                        } if (y) {
                            p = this.evaluteMinusOp(t, p)
                        }
                        if (C.indexOf(":") === 0) {
                            t = p.items
                        }
                        z.push(p)
                    }
                    return z
                };
                l.prototype.evaluateSetOperations = function(r) {
                    var n, p, m, o, q;
                    p = 0;
                    while (true) {
                        q = r[p];
                        if (!q) {
                            break
                        }
                        if (typeof q !== "string") {
                            p += 1;
                            continue
                        }
                        if (q.match(this.re_set_op)) {
                            m = r[p - 1];
                            o = r[p + 1];
                            if (!m || !o) {
                                throw new Error(_("`%s` is badly placed. Please look at filtering help for examples.".replace("%s", q)))
                            }
                            if (q === "&") {
                                n = this.evaluteAndOp(m, o)
                            } else {
                                n = this.evaluteOrOp(m, o)
                            }
                            r.splice(p - 1, 1);
                            r.splice(p - 1, 1);
                            r.splice(p - 1, 1);
                            r.splice(p - 1, 0, n);
                            p = p - 1;
                            continue
                        }
                    }
                    return r
                };
                l.prototype.evaluteAndOp = function(m, o) {
                    var w, q, y, x, p, r, u, t, z, n, v, s;
                    o = g.forceList(o);
                    x = o[0].name;
                    r = o[0].view;
                    p = g.getItemIds(o);
                    v = g.forceList(m);
                    for (u = 0, z = v.length; u < z; u++) {
                        q = v[u];
                        y = [];
                        s = q.items;
                        for (t = 0, n = s.length; t < n; t++) {
                            w = s[t];
                            if (p[w.id]) {
                                y.push(w)
                            }
                        }
                        q.items = y;
                        if (x) {
                            q.name = "" + q.name + " & " + x
                        }
                        q.is_filtered = true;
                        if (r) {
                            if (q.view === "flat_view" && r.indexOf("day_view") !== -1) {
                                q.view = r
                            }
                        }
                        if (q.get_sections) {
                            q.get_sections = null
                        }
                    }
                    return m
                };
                l.prototype.evaluteOrOp = function(n, p) {
                    var C, y, s, x, D, v, u, r, z, o, m, w, t, q;
                    w = g.forceList(p);
                    for (v = 0, z = w.length; v < z; v++) {
                        D = w[v];
                        t = g.forceList(n);
                        for (u = 0, o = t.length; u < o; u++) {
                            s = t[u];
                            if (s.get_sections) {
                                s.get_sections = null
                            }
                            if (D.get_sections) {
                                D.get_sections = null
                            }
                            x = g.getItemIds(s);
                            y = s.items;
                            q = D.items;
                            for (r = 0, m = q.length; r < m; r++) {
                                C = q[r];
                                if (!x[C.id]) {
                                    y.push(C)
                                }
                            }
                            if (D.name) {
                                s.name = "" + s.name + " | " + D.name
                            }
                            s.is_filtered = true;
                            if (s.view !== D.view) {
                                s.view = "flat_view"
                            }
                        }
                    }
                    return n
                };
                l.prototype.evaluteMinusOp = function(o, v) {
                    var w, t, s, n, q, p, u, m, r;
                    r = g.forceList(v);
                    for (q = 0, u = r.length; q < u; q++) {
                        s = r[q];
                        n = g.getItemIds(s);
                        t = [];
                        for (p = 0, m = o.length; p < m; p++) {
                            w = o[p];
                            if (!n[w.id]) {
                                t.push(w)
                            }
                        }
                        s.items = t;
                        s.name = "-" + s.name;
                        s.is_filtered = true
                    }
                    return v
                };
                return l
            })();
            d.exports = i
        }, {
            "./.coffee.FilerHelpers.js": 21
        }
    ],
    23: [
        function(c, b, f) {
            var k, j, i, h, d, a, g = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            k = window.Dateist;
            j = window.DateistDateHelpers;
            d = c("../../models/.coffee.TemporaryIds.js");
            a = c("../../models/.coffee.UtilModels.js");
            h = c("../../models/.coffee.QueriesItems.js");
            i = (function() {
                function l() {
                    this.createDateSpan = g(this.createDateSpan, this);
                    this.byOverdue = g(this.byOverdue, this)
                }
                l.prototype.byFilter = function(m, o) {
                    var n;
                    return (function() {
                        var r, q, p;
                        p = [];
                        for (r = 0, q = m.length; r < q; r++) {
                            n = m[r];
                            if (n.priority === o) {
                                p.push(n)
                            }
                        }
                        return p
                    })()
                };
                l.prototype.byLabel = function(o, r, p) {
                    var q, m, s, n;
                    if (p == null) {
                        p = false
                    }
                    m = [];
                    for (s = 0, n = o.length; s < n; s++) {
                        q = o[s];
                        if ($isIn(r, d.getRealIds(q.labels))) {
                            m.push(q)
                        }
                    }
                    return m
                };
                l.prototype.byNoDueDate = function(o) {
                    var p, m, q, n;
                    m = [];
                    for (q = 0, n = o.length; q < n; q++) {
                        p = o[q];
                        if (!p.due_date) {
                            m.push(p)
                        }
                    }
                    return m
                };
                l.prototype.byOverdue = function(m) {
                    m = h.getOverdue(m);
                    return [].concat(m)
                };
                l.prototype.byDate = function(n, o) {
                    var m;
                    m = h.getByDate(o, n);
                    return [].concat(m)
                };
                l.prototype.byDateSpan = function(p, t) {
                    var o, s, q, m, r, n;
                    s = j.date_min(k.parse("today").due_date);
                    o = new Date(s);
                    o.setDate(o.getDate() + t);
                    m = [];
                    for (r = 0, n = p.length; r < n; r++) {
                        q = p[r];
                        if (q.due_date) {
                            if (j.between_dates(s, o, q.due_date)) {
                                m.push(q)
                            }
                        }
                    }
                    m.sort(a.sortByDate);
                    m.reverse();
                    return m
                };
                l.prototype.createDateSpan = function(t) {
                    var n, q, s, m, r, p, o;
                    s = new Date();
                    r = new Date();
                    r.setDate(s.getDate() + t);
                    n = [];
                    for (m = p = 0, o = t - 1; 0 <= o ? p <= o : p >= o; m = 0 <= o ? ++p : --p) {
                        q = new Date();
                        q.setDate(q.getDate() + m);
                        n.push(q)
                    }
                    return n
                };
                return l
            })();
            b.exports = new i()
        }, {
            "../../models/.coffee.QueriesItems.js": 145,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../../models/.coffee.UtilModels.js": 157
        }
    ],
    24: [
        function(c, a, g) {
            var i, f, j, b, l, h, d, k, m;
            i = window.DateUtils;
            m = window.format;
            l = c("../../models/.coffee.ItemsModel.js");
            d = c("../../models/.coffee.ProjectsModel.js");
            h = c("../../models/.coffee.LabelsModel.js");
            k = c("../../models/.coffee.QueriesSearch.js");
            j = c("./.coffee.FilterQueries.js");
            f = c("./.coffee.FilerHelpers.js");
            b = (function() {
                n.prototype.all_filters = [];

                function n() {
                    var p, o;
                    this.all_filters.push({
                        name: _(""),
                        query_match: /q:\s*(.+)/i,
                        filter_sections: (function(q) {
                            return function(r, s) {
                                r = k.search(s[1]);
                                return q.createSearchSection(s[1], r)
                            }
                        })(this)
                    });
                    this.all_filters.push({
                        name: _("No Priority"),
                        query_match: /^p(?:riority)?\s*(4)|^no\s*pri(ority)?/i,
                        filter_items: function(q) {
                            return j.byFilter(q, 1)
                        }
                    });
                    this.all_filters.push({
                        name_fn: function(q) {
                            return m(_("Priority %s"), parseInt(q[1]))
                        },
                        query_match: /^p(?:riority)?\s*(\d)/i,
                        filter_items: function(q, r) {
                            var s;
                            s = 5 - parseInt(r[1]);
                            return j.byFilter(q, s)
                        }
                    });
                    this.all_filters.push({
                        name: _("All tasks"),
                        query_match: /^:?all:?/i,
                        filter_items: function() {
                            return l.getAll()
                        },
                        view: "flat_view"
                    });
                    this.all_filters.push({
                        name: _("Assigned to me"),
                        query_match: /^:?to[_\s]me:?/i,
                        filter_items: function() {
                            return l.getAssignedToMe()
                        },
                        view: "flat_view"
                    });
                    this.all_filters.push({
                        name: _("Assigned to others"),
                        query_match: /^:?to[_\s]others:?/i,
                        filter_items: function() {
                            return l.getAssignedToOthers()
                        },
                        view: "flat_view"
                    });
                    this.all_filters.push({
                        name: _("No labels"),
                        query_match: /^no[_\s]labels?/i,
                        filter_items: function() {
                            return l.getNoLabels()
                        },
                        view: "flat_view"
                    });
                    this.all_filters.push({
                        name_fn: function(q) {
                            return q[0]
                        },
                        query_match: /^p:([^\s]+)/,
                        filter_items: function(s, t) {
                            var x, v, u, r, w, q;
                            r = t[1].replace(/([\(\[])/g, "\\$1");
                            r = r.replace(/([\)\]])/g, "\\$1");
                            u = new RegExp(r, "i");
                            v = d.getByRegExp(u);
                            s = [];
                            for (w = 0, q = v.length; w < q; w++) {
                                x = v[w];
                                s = s.concat(l.getByProjectId(x.id))
                            }
                            return s
                        }
                    });
                    this.all_filters.push({
                        name_fn: function(q) {
                            return q[0]
                        },
                        query_match: /^@([^\s]+)/,
                        filter_items: function(q, s) {
                            var r;
                            r = h.get(s[0].replace("@", "").toLowerCase());
                            if (r) {
                                return j.byLabel(q, r.id)
                            } else {
                                return []
                            }
                        }
                    });
                    this.all_filters.push({
                        name: _("Tasks with no due date"),
                        query_match: /(no\s*dates?|no\s*due\s*dates?|without_dates?)/i,
                        filter_items: function(q) {
                            return j.byNoDueDate(q)
                        }
                    });
                    this.all_filters.push({
                        name: _("Overdue"),
                        query_match: /^(od$|over\s*due|over\s*time)/i,
                        filter_items: function(q) {
                            return j.byOverdue(q)
                        },
                        view: "day_view_span"
                    });
                    p = {
                        query_match: /^(\d|1\d)\s*days?$/i,
                        name_fn: function(q) {
                            return m(_("%s days"), parseInt(q[1]))
                        },
                        filter_items: function(u, t) {
                            var v, q, r, z, C, x, y, s, w;
                            z = parseInt(t[1]);
                            r = j.createDateSpan(z);
                            C = [];
                            y = [];
                            for (s = 0, w = r.length; s < w; s++) {
                                v = r[s];
                                q = j.byDate(u, v);
                                C = C.concat(q);
                                x = f.createSection("", q, "day_view_fixed");
                                x.day_date = v;
                                y.push(x)
                            }
                            p.get_sections = function() {
                                return y
                            };
                            return C
                        },
                        view: "day_view_span"
                    };
                    this.all_filters.push(p);
                    this.all_filters.push({
                        name_fn: function(q) {
                            return m(_("%s days"), parseInt(q[1]))
                        },
                        query_match: /(\d\d+)\s*days?/i,
                        filter_items: function(r, s) {
                            var t, q;
                            t = parseInt(s[1]);
                            q = j.byDateSpan(r, t);
                            return q
                        },
                        view: "day_view_span"
                    });
                    this.all_filters.push({
                        name: "view all",
                        query_match: /^va$|^view\s*all/i,
                        filter_items: function() {
                            return []
                        },
                        view: "view_all"
                    });
                    o = {
                        query_match: /.+/,
                        filter_items: (function(q) {
                            return function(s, t) {
                                var r, v, u, w;
                                u = t[0];
                                o.name = u;
                                try {
                                    v = i.parse(u).due_date
                                } catch (x) {
                                    v = null
                                }
                                if (v) {
                                    r = j.byDate(s, v);
                                    w = f.createSection("", r, "day_view_fixed");
                                    w.day_date = v;
                                    o.get_sections = function() {
                                        return [w]
                                    };
                                    o.view = "day_view_span";
                                    return r
                                } else {
                                    s = k.search(u);
                                    w = q.createSearchSection(u, s);
                                    o.get_sections = function() {
                                        return [w]
                                    };
                                    o.view = "search";
                                    return s
                                }
                            }
                        })(this)
                    };
                    this.all_filters.push(o)
                }
                n.prototype.createSearchSection = function(p, o) {
                    var q;
                    q = f.createSection(m(_("Search for `%s`"), p), o, "search");
                    q.query = p;
                    return q
                };
                return n
            })();
            a.exports = b
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.QueriesSearch.js": 146,
            "./.coffee.FilerHelpers.js": 21,
            "./.coffee.FilterQueries.js": 23
        }
    ],
    25: [
        function(d, g, b) {
            var i, h, a, f, c = function(j, k) {
                    return function() {
                        return j.apply(k, arguments)
                    }
                };
            h = d("./.coffee.FiltersDef.js");
            i = d("./.coffee.FilterEngine.js");
            f = d("../../models/.coffee.ItemsModel.js");
            a = (function() {
                function j() {
                    this.filter = c(this.filter, this);
                    var k;
                    k = new h();
                    this.engine = new i(k)
                }
                j.prototype.filter = function(l) {
                    var k, n, m;
                    m = window.User.id;
                    k = f.getAllOwn();
                    n = this.engine.filterItems(k, l);
                    return n
                };
                return j
            })();
            g.exports = new a()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "./.coffee.FilterEngine.js": 22,
            "./.coffee.FiltersDef.js": 24
        }
    ],
    26: [
        function(g, c, j) {
            var p, b, d, h, f, l, n, i, k, o, a, m;
            a = window.Signals;
            b = window.AmiMenu;
            m = window.imageSprite;
            p = g("../agenda/.coffee.AgendaUtils.js");
            n = g("../labels/Labels.js");
            o = g("../promotion_overlay/.coffee.PromotionOverlay.js");
            h = g("../../models/.coffee.FiltersModel.js");
            l = g("../generic_left_list/.coffee.GenericLeftList.js");
            d = g("../drag_and_drop/.coffee.DragAndDrop.js");
            i = g("../../menus/.coffee.MenuFilterColors.js");
            k = g("../../menus/MenuFilterList.js");
            f = l.extend({
                initWithData: function() {
                    var q;
                    q = {
                        event_name: "Filters",
                        data_model: h,
                        default_color: 6,
                        icon: "icon-filter",
                        empty_text: _("You have no filters"),
                        add_text: _("Add Filter"),
                        placeholder: _("Filter name"),
                        list_holder: "filters_list_man",
                        DragAndDrop: d,
                        with_color: true,
                        with_arrows: false,
                        with_indent: false,
                        with_ordering: true,
                        fn_create_counter: this.createCounter,
                        fn_get_all: function() {
                            return h.getAll(true)
                        },
                        fn_on_click: (function(r) {
                            return function(s) {
                                r.setCurrent(s);
                                return window.scroll(0, 0)
                            }
                        })(this),
                        fn_show_items: function(s) {
                            var r;
                            r = h.get(s[0]);
                            if (r) {
                                return p.query(r.query)
                            }
                        },
                        fn_on_delete: function(r) {
                            return $remove(r)
                        },
                        fn_get_selected: function() {
                            return {}
                        },
                        fn_check_show_add_item: (function(r) {
                            return function() {
                                if (!window.User.is_premium) {
                                    return r.premiumOnly()
                                }
                                return true
                            }
                        })(this),
                        fn_extend_form: function(u, t, v) {
                            var s, r;
                            $addClass(u, "edit_filter_form");
                            r = $child(t, "div", "richtext_editor");
                            $addBefore(SPAN({
                                c: "desc"
                            }, _("Name:")), r);
                            s = INPUT({
                                name: "ta_query",
                                "class": "text_box",
                                tabIndex: 1,
                                autocomplete: "off"
                            });
                            s.placeholder = _("Filter query");
                            if (v && v.current_item) {
                                s.value = v.current_item.query
                            } else {
                                s.value = ""
                            }
                            $addAfter(s, r);
                            $addAfter(A({
                                href: "/Help/Filtering",
                                c: "help_icon",
                                target: "_blank"
                            }, m("cmp_query-help", 8, 12)), s);
                            $addBefore(SPAN({
                                c: "desc"
                            }, _("Query:")), s);
                            return u
                        },
                        fn_parse_form: function(s, t, r) {
                            if (r == null) {
                                r = true
                            }
                            t.is_changed = true;
                            t.query = $strip($f(s, "ta_query").value);
                            if (t.query.length === 0) {
                                alert(_("The filter query can't be empty."), function() {
                                    return $f(s, "ta_query").focus()
                                });
                                t.is_changed = false
                            }
                            return t
                        },
                        fn_editing_done: (function(r) {
                            return function() {
                                var s;
                                s = r.current_item;
                                if (s) {
                                    return p.query(s.json.query)
                                }
                            }
                        })(this)
                    };
                    $bindMethods(this);
                    a.connect("filters_updated", this.reRender);
                    q.menu = k.init(this);
                    q.menu_colors = i.init(n);
                    q.fn_create_color = this.createColor;
                    return this.parent(q)
                },
                premiumOnly: function() {
                    o.show(_("Filters editing is a premium only feature"), _("Create powerful filters and filter your tasks any way you like."));
                    return false
                },
                createCounter: function() {
                    return null
                },
                createColor: function(q) {
                    return this.createColorDiv("filter_color_" + q.id, q.color, n.colors)
                }
            });
            c.exports = new f()
        }, {
            "../../menus/.coffee.MenuFilterColors.js": 108,
            "../../menus/MenuFilterList.js": 118,
            "../../models/.coffee.FiltersModel.js": 132,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../generic_left_list/.coffee.GenericLeftList.js": 28,
            "../labels/Labels.js": 44,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78
        }
    ],
    27: [
        function(b, d, a) {
            var f = window.static_path;
            var g = window.DoistFormat;
            var c = {
                formatSimple: function(i, h) {
                    h = this.setOpts(h);
                    return g.formatSimple(i, h)
                },
                format: function(i, h) {
                    h = this.setOpts(h);
                    return g.format(i, h)
                },
                setOpts: function(h) {
                    if (!h) {
                        h = {}
                    }
                    h.fn_generate_link = function(j, k) {
                        var i = '<a href="' + j + '" class="ex_link" target="_blank" onclick="return linkRedirecter(this)">' + $xssStrip($strip(k)) + "</a>";
                        i = c.handleExternalServices(j, i);
                        return i
                    };
                    h.fn_handle_gmail = function(l, m, k) {
                        var i = c.generateServiceIcon("email");
                        var j = "https://mail.google.com/mail/u/0/" + m;
                        return '<a href="' + j + '" class="ex_link" target="_blank" onclick="return linkRedirecter(this)">' + i + $xssStrip($strip(k)) + "</a>"
                    };
                    h.fn_handle_outlook = function(l, m, k) {
                        var i = c.generateServiceIcon("email");
                        var j = "<a href='#openOutlook/" + m.replace(/'/g, "") + '\' class="ex_link" onclick="return OutlookIntegration.openEmail(\'' + m + "')\">" + i + $xssStrip($strip(k)) + "</a>";
                        return j
                    };
                    h.fn_handle_thunderbird = function(l, k, m) {
                        var i = c.generateServiceIcon("email");
                        var j = "<a thunder_id='" + m.replace(/'/g, "") + '\' href="#openThunderbird" class="ex_link" onclick="return linkRedirecter(this)">' + i + $xssStrip($strip(k)) + "</a>";
                        return j
                    };
                    return h
                },
                generateServiceIcon: function(h) {
                    return '<img src="https://d3ptyyxy2at9ui.cloudfront.net/76084e29cb2cf72b320e888edc583dfb.gif" class="cmp_' + h + ' service_icon" width="16" />'
                },
                handleExternalServices: function(i, h) {
                    if (i.indexOf("d1x0mwiac2rqwt.cloudfront.net") != -1) {
                        h = c.generateServiceIcon("attachment") + " " + h
                    }
                    if (i.indexOf("mail.google.com") != -1) {
                        h = c.generateServiceIcon("email") + " " + h
                    }
                    if (i.indexOf("wedoist.com") != -1) {
                        h = "<b>WD</b> " + h
                    }
                    if (i.indexOf("teamcom.io") != -1) {
                        h = "<b>TC</b> " + h
                    }
                    if (i.indexOf("evernote.com/Home.action") != -1 || i.indexOf("evernote.com/shard") != -1 || i.indexOf("evernote://") != -1) {
                        h = c.generateServiceIcon("evernote") + h
                    }
                    if (i.indexOf("google.com/calendar/event") != -1) {
                        h = c.generateServiceIcon("cal") + h
                    }
                    return h
                }
            };
            d.exports = c
        }, {}
    ],
    28: [
        function(f, d, k) {
            var j, m, i, r, p, h, b, o, l, a, g, q, n, c;
            a = window.Signals;
            m = window.Alerts;
            l = window.MenuRightClick;
            q = window.imageSprite;
            c = window.track;
            n = f("../../menus/HelperColorsPriorities.js").selectColor;
            h = f("../generic_manager/GenericManager.js");
            b = f("../generic_manager/GenericManagerUtils.js");
            o = f("../items_utils/ItemForms.js");
            j = f("../action_perfomed/.coffee.ActionPerformed.js");
            r = f("../formatter/Formatter.js");
            g = f("../../components/left_menu/.coffee.TopFilters.js");
            i = f("../../mini/.coffee.DimensionCalculator.js");
            p = h.extend({
                initWithData: function(s) {
                    var t;
                    t = {
                        data_model: s.data_model,
                        max_indent: 4,
                        undo_reorder_intent: s.undo_reorder_intent
                    };
                    $update(t, s);
                    this.opts = t;
                    this.parent(t);
                    this.event_name = s.event_name;
                    this.current_list = null;
                    this.current_item = null;
                    this.empty_text = s.empty_text;
                    this.move_x = false;
                    this.menu.hide_callbacks.push(function() {
                        return $removeClass($all("li", "on_menu_show"), "on_menu_show")
                    });
                    a.connect("color_selected", this.colorSelected);
                    if (s.init) {
                        s.init()
                    }
                    return this.is_inited = true
                },
                insertItems: function(u) {
                    var z, w, s, y, v, x, t;
                    y = this.current_list;
                    z = this.opts.fn_get_selected();
                    $replace(y, null);
                    v = window.User.team_inbox;
                    for (x = 0, t = u.length; x < t; x++) {
                        w = u[x];
                        if (w.inbox_project) {
                            continue
                        }
                        if (w.id === v) {
                            continue
                        }
                        s = this.renderItem(w);
                        $add(y, s);
                        if (z[w.id]) {
                            $addClass(s, "current")
                        }
                    }
                    b.showHideChildren($AF(y.childNodes));
                    if (this.opts.with_arrows) {
                        this.arrows.updateArrows()
                    }
                    this.checkEmpty();
                    return i.recalculate()
                },
                reRender: function() {
                    if (window.isEditingOn()) {
                        setTimeout(this.reRender, 200);
                        return
                    }
                    return this.insertItems(this.opts.fn_get_all())
                },
                renderEmpty: function() {
                    return this.parent()
                },
                checkEmpty: function() {
                    var s;
                    s = this.parent();
                    return a.sendSignal("check_premium_promo")
                },
                getProjectById: function(x) {
                    var w, v, u, s, t;
                    v = null;
                    t = $AF(this.current_list.childNodes);
                    for (u = 0, s = t.length; u < s; u++) {
                        w = t[u];
                        if (w.json && w.json.id === x) {
                            v = w;
                            break
                        }
                    }
                    return v
                },
                deselectCurrent: function() {
                    return $removeClass($all("li", "current"), "current")
                },
                setCurrentVisually: function(x) {
                    var u, w, t, v, s;
                    v = $AF(this.current_list.childNodes);
                    s = [];
                    for (w = 0, t = v.length; w < t; w++) {
                        u = v[w];
                        if (u.json && u.json.id === x) {
                            $removeClass($all("li", "current"), "current");
                            $addClass(u, "current");
                            break
                        } else {
                            s.push(void 0)
                        }
                    }
                    return s
                },
                setCurrentById: function(s, C, y, u) {
                    var z, x, t, w, v;
                    this.flash_item = C;
                    if (s === window.User.inbox_project) {
                        z = g.getInbox();
                        this.setCurrent(z, y, u)
                    } else {
                        if (s === window.User.team_inbox) {
                            z = g.getTeamInbox();
                            this.setCurrent(z, y, u)
                        } else {
                            x = false;
                            v = $AF(this.current_list.childNodes);
                            for (t = 0, w = v.length; t < w; t++) {
                                z = v[t];
                                if (z.json && z.json.id === s) {
                                    this.setCurrent(z, y, u);
                                    x = true;
                                    break
                                }
                            }
                            if (!x) {
                                this.opts.fn_show_items([s], y)
                            }
                        }
                    }
                    return false
                },
                setCurrent: function(x, C, w) {
                    var s, t, u, z, v, y;
                    this.deselectCurrent();
                    if (!x || !x.json) {
                        return
                    }
                    $addClass(x, "current");
                    u = x.json.name.replace(/^\*\s+/, "");
                    u = r.formatSimple(u, {
                        as_text: true,
                        as_html: false
                    });
                    document.title = u + ": Todoist";
                    if (this.opts.with_indent && w !== false) {
                        z = [];
                        t = b.getChildren(x, true);
                        for (v = 0, y = t.length; v < y; v++) {
                            s = t[v];
                            z.push(s.json.id);
                            $addClass(s, "current")
                        }
                    } else {
                        z = [x.json.id]
                    }
                    this.opts.fn_show_items(z, C);
                    if (this.opts.with_arrows) {
                        return this.arrows.updateArrows()
                    }
                },
                editingDone: function(s) {
                    if (s) {
                        this.current_item = s
                    }
                    this.current_form = null;
                    this.current_cancel = null;
                    if (this.opts.with_arrows) {
                        this.arrows.updateArrows()
                    }
                    this.checkEmpty();
                    if (this.opts.fn_editing_done) {
                        return this.opts.fn_editing_done()
                    }
                },
                saveItem: function(s, E) {
                    var x, y, z, u, F, w, t, v, D, C;
                    z = $parent(s, "li");
                    x = z.list_item;
                    if (z && x) {
                        $addAfter(x, z);
                        C = x.nextSibling;
                        v = $gc(s, null, "richtext_editor").proxyGetValue();
                        u = b.getIndent(z);
                        w = this.selected_color;
                        y = {
                            name: v,
                            indent: u
                        };
                        if (this.opts.fn_parse_form) {
                            y = this.opts.fn_parse_form(s, y, true)
                        }
                        this.alterChildIndent(x, u);
                        if (w !== null) {
                            y.color = w
                        }
                        F = this.opts.data_model.update(x.json.id, y);
                        t = this.renderItem(F);
                        if ($hasClass(x, "current")) {
                            $addClass(t, "current")
                        }
                        $addClass(t, "generic_left_list_updated");
                        $swap(x, t);
                        if (this.opts.with_indent) {
                            b.setIndent(t, u)
                        }
                        $remove(z);
                        this.editingDone(t);
                        D = t.nextSibling;
                        if (C !== D) {
                            this.incNextSiblings(t)
                        }
                        c(this.event_name, "Edit")
                    }
                    if ($isFunction(E)) {
                        E()
                    }
                    return false
                },
                editCurrentItem: function() {
                    var u, x, w, v, t, s;
                    this.parent();
                    t = (function(y) {
                        return function() {
                            $show(y.current_item);
                            if (y.opts.with_arrows) {
                                return y.arrows.updateArrows()
                            }
                        }
                    })(this);
                    x = {
                        cancel: o.genCancel("li", t, this),
                        action: this.saveItem,
                        submit_val: _("Save"),
                        name_val: this.current_item.json.name,
                        indent_arrows: this.opts.with_indent,
                        placeholder: this.opts.placeholder,
                        fn_extend_form: this.opts.fn_extend_form,
                        current_item: this.current_item.json,
                        manager_type: this.manager_type,
                        manager_reodering: this.manager_reodering
                    };
                    this.current_cancel = x.cancel;
                    w = this.generateAddEditForm(x);
                    if (this.opts.with_color) {
                        this.selected_color = null;
                        u = this.createColorSelector(this.current_item.json.color);
                        $ATT(w.text_box_holder, u)
                    } else {
                        $addClass(w.form, "no_color")
                    }
                    v = w.li_item;
                    s = w.textarea;
                    v.list_item = this.current_item;
                    this.current_form = w.form;
                    if (this.opts.with_indent) {
                        b.setIndent(v, this.current_item.json.indent)
                    }
                    $addAfter(v, this.current_item);
                    s.proxyPlaceCursor();
                    if (this.arrows) {
                        return this.arrows.updateArrows()
                    }
                },
                deleteCurrentItem: function(x) {
                    var v, t, u, F, D, y, s, C, z, w, E;
                    j.mark("GenericLeftList/deleteCurrentItem");
                    u = b.getChildren(x, false);
                    F = [];
                    y = false;
                    if (x.json.shared) {
                        y = true
                    }
                    z = null;
                    if (this.opts.with_indent && u && u.length > 0) {
                        C = [];
                        for (w = 0, E = u.length; w < E; w++) {
                            t = u[w];
                            s = t.json && t.json.name;
                            if (s) {
                                C.push(s);
                                F.push(t.json.id)
                            }
                        }
                        D = _("Following will be deleted as well: %s.");
                        if (y) {
                            D = _("Following will be left as well: %s.")
                        }
                        z = SPAN(BR(), BR(), $setHTML(SPAN(), D.replace("%s", "<b>" + C.join(", ") + "</b>")))
                    }
                    D = _("Are you sure you want to delete %s?");
                    if (y) {
                        D = _("Are you sure you want to leave %s?")
                    }
                    v = SPAN($setHTML(SPAN(), D.replace("%s", "<b>" + $escape(x.json.name) + "</b>")), z);
                    return m.confirm(v, (function(G) {
                        return function(H) {
                            if (H) {
                                u.splice(0, 0, x);
                                F.splice(0, 0, x.json.id);
                                if (G.opts.fn_on_delete) {
                                    G.opts.fn_on_delete(u)
                                }
                                G.opts.data_model.deleteMany(F);
                                G.editingDone();
                                c(G.event_name, "Delete");
                                return a.sendSignal("refresh_interface")
                            }
                        }
                    })(this))
                },
                addItem: function(s, E) {
                    var v, x, y, F, z, D, t, u, w, C;
                    y = $parent(s, "li");
                    D = y.previousSibling;
                    u = 1;
                    if (D) {
                        u = D.json.item_order + 1
                    }
                    z = $all("li", null, this.current_list);
                    for (w = 0, C = z.length; w < C; w++) {
                        F = z[w];
                        if (F.json) {
                            if (F.json.item_order >= u) {
                                F.json.item_order += 1
                            }
                        }
                    }
                    if (s.color !== void 0) {
                        v = s.color
                    } else {
                        v = this.opts.default_color
                    } if (this.selected_color !== void 0) {
                        v = this.selected_color
                    }
                    x = {
                        name: $gc(s, null, "richtext_editor").proxyGetValue(),
                        item_order: u,
                        indent: b.getIndent(y),
                        color: v
                    };
                    if (this.opts.fn_parse_form) {
                        x = this.opts.fn_parse_form(s, x, true)
                    }
                    if (x.name !== "" && x.is_changed !== false) {
                        F = this.opts.data_model.add(x);
                        if (!F) {
                            return
                        }
                        y.json = F;
                        t = this.renderItem(F);
                        $addClass(t, "generic_left_list_added");
                        $swap(y, t);
                        this.setCurrent(t);
                        window.scroll(0, 0);
                        this.editingDone(t);
                        this.incNextSiblings(t);
                        if ($isFunction(E)) {
                            E()
                        }
                        a.sendSignal("update_counters");
                        c(this.event_name, "Add")
                    } else {
                        this.current_item = y;
                        if ($isFunction(E)) {
                            E()
                        }
                    }
                    return false
                },
                showAddItem: function(w, x, D) {
                    var u, v, E, z, s, y, t, C;
                    if (this.fn_check_show_add_item) {
                        if (!this.fn_check_show_add_item()) {
                            return
                        }
                    }
                    this.parent(w, x, D);
                    C = (function(F) {
                        return function() {
                            F.checkEmpty();
                            if (F.opts.with_arrows) {
                                return F.arrows.updateArrows()
                            }
                        }
                    })(this);
                    u = this.opts.default_color;
                    E = this.current_item;
                    if (w === true && E) {
                        u = E.json.color
                    }
                    z = {
                        cancel: o.genCancel("li", C, this),
                        action: this.addItem,
                        submit_val: this.opts.add_text,
                        submit_icon: "cmp_add",
                        name_val: "",
                        indent_arrows: this.opts.with_indent,
                        placeholder: this.opts.placeholder,
                        fn_extend_form: this.opts.fn_extend_form,
                        manager_type: this.manager_type,
                        manager_reodering: this.manager_reodering
                    };
                    this.current_cancel = z.cancel;
                    y = this.generateAddEditForm(z);
                    if (this.opts.with_color) {
                        v = this.createColorSelector(u);
                        $ATT(y.text_box_holder, v)
                    } else {
                        $addClass(y.form, "no_color")
                    }
                    s = this.current_form = y.form;
                    s.color = u;
                    if (w === true && this.opts.with_indent) {
                        t = b.getIndent(E) || 1;
                        b.setIndent(y.li_item, t)
                    }
                    this.insertForm(y.li_item, x);
                    this.current_item = null;
                    if (this.arrows) {
                        this.arrows.updateArrows()
                    }
                    return setTimeout(function() {
                        return y.textarea.proxyFocus()
                    }, 20)
                },
                render: function() {
                    var t, s;
                    s = DIV({
                        c: "left_list_man"
                    });
                    $addClass(s, "actions");
                    t = A({
                        href: "",
                        "class": "action"
                    }, SPAN({
                        c: "icon icon-add"
                    }), this.opts.add_text);
                    this.add_item = t;
                    t.onclick = (function(u) {
                        return function() {
                            u.saveCurrentItem(function() {
                                u.current_item = u.getItem($last);
                                return u.showAddItem()
                            });
                            return false
                        }
                    })(this);
                    $add(s, t);
                    return $add($(this.opts.list_holder), s)
                },
                renderItem: function(L, D) {
                    var x, z, y, J, F, u, s, H, C, K, w, G, t, v, E;
                    K = TABLE({
                        cellpadding: 0,
                        cellspacing: 0,
                        "class": "item_table"
                    });
                    w = TBODY();
                    $add(K, w);
                    y = LI({
                        "class": "clickable"
                    }, K);
                    y.json = L;
                    $ATT(y, DIV({
                        c: "invisible_space"
                    }));
                    u = null;
                    if (L.not_editable !== true) {
                        u = b.getMenuEditIcon();
                        y.menu_icon = u;
                        new l(y, $p(this.toggleMenu, y, {
                            id: L.id,
                            menu_icon: u
                        }, L.id));
                        if (this.opts.with_ordering && D !== true && !L.inbox_project) {
                            this.opts.DragAndDrop.attach(y)
                        }
                    } else {
                        $addClass(y, "not_editable")
                    }
                    H = L.name;
                    J = H.match(/[^ ]{20}.+?/g);
                    if (J) {
                        for (v = 0, E = J.length; v < E; v++) {
                            z = J[v];
                            H = H.replace(z, z.substr(0, 20) + "... ")
                        }
                    }
                    H = $setHTML(SPAN(), r.formatSimple(H));
                    s = TD({
                        "class": "name"
                    }, H);
                    F = TD({
                        "class": "menu"
                    }, u);
                    $AEV(F, ["click", "touchstart"], (function(M) {
                        return function() {
                            return M.toggleMenu(y, u, L.id)
                        }
                    })(this));
                    if (this.opts.with_color) {
                        G = TD({
                            "class": "td_color"
                        }, this.opts.fn_create_color(L))
                    } else {
                        G = null
                    }
                    $add(s, this.opts.fn_create_counter(L));
                    x = DIV({
                        "class": "td_separator"
                    });
                    if (!$isIe()) {
                        x.style.width = "2px"
                    }
                    t = TD(x);
                    C = (function(M) {
                        return function(N) {
                            var O;
                            O = $eventElm(N);
                            if (!O.is_menu_icon && $nodeName(O) !== "img") {
                                return M.opts.fn_on_click(y, L, N)
                            }
                        }
                    })(this);
                    $AEV(y, "dblclick", (function(M) {
                        return function() {
                            M.setCurrent(y, null, false);
                            return false
                        }
                    })(this));
                    $AEV(y, "click", C);
                    $add(w, TR(G, t, s, F));
                    if (this.opts.with_indent) {
                        b.setIndent(y, L.indent, true)
                    }
                    return y
                },
                colorSelected: function(s) {
                    var v, t, u;
                    v = $("color_selector");
                    if (v && this.current_form) {
                        this.selected_color = s;
                        u = this.createColorSelector(s);
                        $swap(v, u);
                        t = $child(this.current_list, "textarea");
                        if (t) {
                            return t.proxyFocus()
                        }
                    }
                },
                createColorSelector: function(u) {
                    var s, t;
                    t = {
                        color: u
                    };
                    if (this.current_item) {
                        t.id = this.current_item.json.id
                    }
                    s = this.opts.fn_create_color(t, true);
                    s.id = "color_selector";
                    $addClass([s, $child(s, "div")], "menu_icon");
                    $AEV(s, "click", (function(v) {
                        return function() {
                            v.menu_colors.show(s, true);
                            return false
                        }
                    })(this));
                    s.change_y_pos = function(v) {
                        v += $scrollTop();
                        v -= $("left_menu").scrollTop;
                        return v
                    };
                    n(this.menu_colors, u);
                    return s
                },
                createColorDiv: function(t, w, s) {
                    var u, v;
                    v = DIV({
                        "class": "div_color counter_color " + this.icon,
                        id: t
                    });
                    u = s[w] || "#dddddd";
                    $setStyle(v, "color", u);
                    return v
                },
                toggleMenu: function(t, v, u, s) {
                    if (this.opts.fn_on_show_menu) {
                        this.opts.fn_on_show_menu(t)
                    }
                    $removeClass($all("li", "on_menu_show"), "on_menu_show");
                    $addClass(t, "on_menu_show");
                    v.change_y_pos = function() {
                        var x, w;
                        x = v.menu_icon || v;
                        w = $position(x).y + 15;
                        w -= $("left_menu").scrollTop;
                        w += $scrollTop();
                        return w
                    };
                    this.menu.toggle(v, t, s);
                    return false
                },
                getAllRenrededItems: function(y, x) {
                    var u, v, t, w, s;
                    if (x === void 0) {
                        x = true
                    }
                    t = this.parent(y);
                    u = [];
                    for (w = 0, s = t.length; w < s; w++) {
                        v = t[w];
                        if ($hasClass(v, "not_editable")) {
                            continue
                        }
                        if (x === true && v.json && v.json.inbox_project) {
                            continue
                        }
                        if (x === true && v.json && v.json.team_inbox) {
                            continue
                        }
                        u.push(v)
                    }
                    return u
                },
                isEmpty: function() {
                    return this.getAllRenrededItems(false, false).length === 0
                }
            });
            d.exports = p
        }, {
            "../../components/left_menu/.coffee.TopFilters.js": 48,
            "../../menus/HelperColorsPriorities.js": 114,
            "../../mini/.coffee.DimensionCalculator.js": 125,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../formatter/Formatter.js": 27,
            "../generic_manager/GenericManager.js": 30,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../items_utils/ItemForms.js": 39
        }
    ],
    29: [
        function(c, d, b) {
            var f = window.imageSprite;
            var a = c("../generic_manager/GenericManagerUtils.js");
            var g = new ICE.Class({
                init: function(h) {
                    if (h) {
                        $update(this, h)
                    }
                    if (this.x_off !== undefined) {
                        this.x_off = this.x_off
                    } else {
                        this.x_off = 0
                    }
                    $bindMethods(this);
                    if ($isMozilla()) {
                        this.y_offset = 4
                    }
                },
                updateArrows: function(h) {
                    h = h || this.list.current_list;
                    if (h) {
                        this.removeArrows(h);
                        this._updateArrows(h);
                        if (this.list.current_his_list) {
                            this._updateArrows(this.list.current_his_list)
                        }
                    }
                },
                displayArrow: function(k, i) {
                    if (k.is_manager) {
                        return
                    }
                    if (k.json && k.json.dont_show_arrow) {
                        return
                    }
                    var j = this._hasChildren(k);
                    var m = k.json && k.json.collapsed;
                    if (i === true) {
                        m = true
                    }
                    if (k._collapsed !== undefined) {
                        if (k._collapsed) {
                            m = true
                        } else {
                            m = false
                        }
                    }
                    if (j) {
                        var h = "cmp_arrow_open";
                        if (m) {
                            h = "cmp_arrow_closed"
                        }
                        var l = f(h, 18, 18);
                        $addClass(l, "arrow");
                        $addToTop(k, l);
                        l.host_item = k;
                        k.arrow = l;
                        l.onclick = $p(this._switchState, l);
                        return l
                    }
                },
                removeArrows: function(i) {
                    var h = this._getArrows(i);
                    $map(h, function(j) {
                        if (j.host_item) {
                            j.host_item.arrow = null
                        }
                        $remove(j)
                    })
                },
                setList: function(h) {
                    this.list = h
                },
                _updateArrows: function(j) {
                    var i = $first(j.childNodes);
                    var h = i;
                    while (h) {
                        if (!$isHidden(h) && !this._childEdited(h)) {
                            this.displayArrow(h)
                        }
                        h = h.nextSibling
                    }
                },
                _saveState: function(h, i) {
                    this.data_model.update(h, {
                        collapsed: i
                    }, true)
                },
                _switchState: function(j) {
                    if (!j) {
                        return
                    }
                    var h = j.host_item;
                    if (h.json.collapsed) {
                        h.json.collapsed = 0;
                        var i = a.getChildren(h);
                        a.showHideChildren(i, h);
                        $map(i, function(k) {
                            $addClass(k, "task_expand_collapse")
                        })
                    } else {
                        h.json.collapsed = 1;
                        $map(a.getChildren(h), function(k) {
                            $hide(k)
                        })
                    }
                    this.updateArrows($parent(h, "ul"));
                    this._saveState(h.json.id, h.json.collapsed)
                },
                _hasEdit: function(h, i) {
                    if (h.is_manager && a.getIndent(h) <= i) {
                        return true
                    }
                    return true
                },
                _childEdited: function(h) {
                    var j = h.nextSibling;
                    if (!j) {
                        return false
                    }
                    var k;
                    if (!h.json) {
                        if (!h.previousSibling || !h.previousSibling.json) {
                            return false
                        }
                        k = h.previousSibling.json.indent
                    } else {
                        k = h.json.indent
                    }
                    while (j) {
                        var i = j.json;
                        if (i && i.indent <= k) {
                            return false
                        }
                        if (j.is_manager) {
                            return true
                        }
                        if (i && i.indent <= k) {
                            return false
                        }
                        j = j.nextSibling
                    }
                    return false
                },
                _getArrows: function(i) {
                    if (i) {
                        var h = $parent(i, "div");
                        return $all("img", "arrow", h)
                    } else {
                        if (!this.list_holder) {
                            this.list_holder = $parent(this.list.current_list, "td")
                        }
                        return $all("img", "arrow", this.list_holder)
                    }
                },
                _hasChildren: function(i) {
                    if (!i || !i.json) {
                        return false
                    }
                    var h = i.nextSibling;
                    if (h && h.json && h.json.indent > i.json.indent) {
                        return true
                    }
                    return false
                }
            });
            d.exports = g
        }, {
            "../generic_manager/GenericManagerUtils.js": 31
        }
    ],
    30: [
        function(j, c, m) {
            var q = window.imageSprite;
            var g = window.AmiButton;
            var i = window.AmiComplete;
            var n = window.FocusElm;
            var p = j("../misc/Util.js").attachKeyDown;
            var l = j("../action_perfomed/.coffee.ActionPerformed.js");
            var h = j("../drag_and_drop/.coffee.DragAndDrop.js");
            var o = j("../items_utils/ItemForms.js");
            var f = j("../richtext_editor/.coffee.RichTextEditor.js");
            var b = j("./GenericManagerUtils.js");
            var r = 0;
            var k = Class({
                init: function() {},
                initWithData: function(s) {
                    this.state_manager = this;
                    if (s) {
                        $update(this, s)
                    }
                },
                getAllRenrededItems: function(t) {
                    var s = [];
                    $map(this.current_list.childNodes, function(u) {
                        if (u && u.json && !$hasClass(u, "reorder_item")) {
                            if (t === true) {
                                if ($isHidden(u)) {
                                    return
                                }
                            }
                            s.push(u)
                        }
                    });
                    return s
                },
                isFormFirst: function() {
                    var t = $first(this.current_list.childNodes);
                    if ($hasClass(t, "reorder_item")) {
                        t = t.nextSibling
                    }
                    var s = $parent(this.state_manager.current_form, "li");
                    return t == s
                },
                isFormLast: function() {
                    var s = $last(this.current_list.childNodes);
                    var t = $parent(this.state_manager.current_form, "li");
                    return s == t
                },
                getItem: function(s) {
                    s = s || $last;
                    var t = s(this.current_list.childNodes);
                    if (t && $hasClass(t, "reorder_item")) {
                        return t.nextSibling
                    }
                    if (t && t.is_manager) {
                        return t.previousSibling
                    }
                    if (!t || !t.json || t.is_empty) {
                        return null
                    }
                    return t
                },
                addIndentArrows: function(y, x, t) {
                    var u = DIV(q("cmp_indent_right", 14, 14));
                    var w = DIV(q("cmp_indent_left", 14, 14));
                    var s = this;
                    var v = function(D, C) {
                        s.incIndent(x, D);
                        var z = $all(null, "richtext_editor", x)[0];
                        z.proxyFocus();
                        $preventDefault(C);
                        return false
                    };
                    u.onclick = $p(v, 1);
                    w.onclick = $p(v, -1);
                    if (t === true) {
                        $add(y, w, u)
                    } else {
                        $add(y, u, w)
                    }
                },
                generateAddEditForm: function(N) {
                    var K = LI({
                        "class": "manager indent_1"
                    });
                    K.is_manager = true;
                    var u = FORM();
                    if (N.submit_icon) {
                        N.submit_icon = q(N.submit_icon, 16, 16)
                    }
                    var C = g.createButton(N.submit_val);
                    $addClass(C, "amibutton_red");
                    $addClass(C, "submit_btn");
                    u.onsubmit = function() {
                        return false
                    };
                    $add(K, u);
                    var z = f({
                        tabIndex: 1,
                        autocomplete: "off",
                        withPlaceholders: N.withPlaceholders
                    });
                    z.proxySetValue(N.name_val);
                    if (N.placeholder) {
                        z.placeholder = N.placeholder
                    }
                    var x = $p(N.action, u);
                    u.submit_fn = x;
                    $AEV(C, ["click", "touchstart"], function(O) {
                        x(O);
                        return false
                    });
                    if (N.with_esc_cancel === undefined) {
                        N.with_esc_cancel = true
                    }
                    var F = this;
                    var M = function(Q) {
                        Q = Q || window.event;
                        ICE._setEventKey(Q);
                        if (Q.ctrl && Q.keyAscii == 77 && N.on_ctrl_m) {
                            $preventDefault(Q);
                            N.on_ctrl_m(Q);
                            return false
                        }
                        if (N.with_esc_cancel && Q.keyAscii == 27) {
                            if (window.AmiComplete && window.AmiComplete.shown()) {
                                return false
                            }
                            if (z.cancelInput && z.cancelInput(Q)) {
                                $preventDefault(Q);
                                return false
                            }
                            z.blur();
                            if (N.cancel) {
                                N.cancel.onclick()
                            }
                        }
                        if (Q.keyAscii == 8) {
                            if (z.cancelInput && z.cancelInput(Q)) {
                                $preventDefault(Q);
                                return false
                            }
                        }
                        if (N.onKeyPress) {
                            return N.onKeyPress(Q, K)
                        }
                        if (d(Q)) {
                            $preventDefault(Q);
                            u.submit_fn(function() {
                                z.blur();
                                F.showAddItem(true, true)
                            }, true);
                            return false
                        }
                        if (Q.keyAscii == 13 && Q.shift) {
                            $preventDefault(Q);
                            u.submit_fn(function() {
                                z.blur();
                                F.showAddItem(true, false)
                            }, true);
                            return false
                        } else {
                            if (Q.keyAscii == 13) {
                                if (window.AmiComplete && window.AmiComplete.shown()) {
                                    return false
                                }
                                $preventDefault(Q);
                                z.blur();
                                u.submit_fn(null, true);
                                return false
                            } else {
                                if (Q.keyAscii == 9 && !Q.ctrl) {
                                    var O = $f(u, "due_date");
                                    if (O && !i.shown()) {
                                        var S = $eventElm(Q);
                                        if (S && !$hasClass(S, "due_date")) {
                                            $preventDefault(Q);
                                            O.select();
                                            return false
                                        }
                                    }
                                }
                            }
                        } if (Q.ctrl && Q.keyAscii == 37 && !Q.shift) {
                            $preventDefault(Q);
                            F.incIndent(K, -1);
                            return false
                        }
                        if (Q.ctrl && Q.keyAscii == 39 && !Q.shift) {
                            $preventDefault(Q);
                            F.incIndent(K, 1);
                            return false
                        }
                        var R = function(T) {
                            if (F.current_mode == "edit") {
                                F.saveItem(F.state_manager.current_form, T, true)
                            } else {
                                F.addItem(F.state_manager.current_form, T, true)
                            }
                        };
                        if (Q.ctrl && Q.keyAscii == 38 && !Q.shift) {
                            $preventDefault(Q);
                            R(F.editPrevItem);
                            return false
                        }
                        if (Q.ctrl && Q.keyAscii == 40 && !Q.shift) {
                            $preventDefault(Q);
                            R(F.editNextItem);
                            return false
                        }
                    };
                    var J = TABLE({
                        width: "100%"
                    });
                    var s = TBODY();
                    $add(J, s);
                    var v;
                    var L;
                    var H = TABLE(TBODY(v = TR(L = TD({
                        c: "text_box_holder"
                    }, z))));
                    $AEV(L, "click", function(O) {
                        var Q = $eventElm(O);
                        if (Q && $nodeName(Q) == "input") {
                            return true
                        }
                        z.proxyFocus()
                    });
                    var t = TD({
                        colSpan: 2,
                        "class": "form_content"
                    }, H);
                    var y = TR(t);
                    $add(s, y);
                    if (N.indent_arrows) {
                        var D = TD({
                            rowSpan: 2,
                            "class": "indent_arrows"
                        });
                        $add(y, D);
                        this.addIndentArrows(D, K)
                    }
                    var E = TD({
                        align: "left",
                        c: "td_submit"
                    });
                    var G = TD({
                        align: "right",
                        c: "td_extra"
                    });
                    $add(E, C, N.cancel);
                    if (N.td_extra) {
                        $add(G, N.td_extra)
                    }
                    $add(u, J);
                    $add(u, TABLE(TBODY(TR(E, G))));
                    if (N.fn_extend_form) {
                        u = N.fn_extend_form(u, y, N)
                    }
                    var w = [z];
                    w = w.concat($all("input", null, u));
                    if (N.inputs) {
                        w = w.concat(N.inputs)
                    }
                    $map(w, function(O) {
                        p(O, M)
                    });
                    if (N.manager_reodering) {
                        K.json = {
                            id: r--,
                            manager_type: N.manager_type,
                            indent: 1
                        };
                        h.attach(K, {
                            trigger_mouse_over: true
                        })
                    }
                    return {
                        li_item: K,
                        form: u,
                        textarea: z,
                        text_box_holder: L,
                        duedate: $f(u, "due_date"),
                        form_content: t,
                        input_holders_tr: v
                    }
                },
                insertForm: function(t, u) {
                    var s = this.current_item;
                    if (s && u === true && t) {
                        $addBefore(t, s)
                    } else {
                        if (this.current_item) {
                            var v = s.nextSibling;
                            while (v && $isHidden(v)) {
                                v = v.nextSibling
                            }
                            if (v) {
                                $addAfter(t, v.previousSibling || s)
                            } else {
                                $add(this.current_list, t)
                            }
                        } else {
                            $add(this.current_list, t)
                        }
                    }
                    n.focus(t, null, 35)
                },
                saveCurrentItem: function(t) {
                    var s = this.state_manager.current_form;
                    if (s) {
                        if ($gc(s, null, "richtext_editor").proxyGetValue() === "") {
                            this.cancelCurrentEdit(true);
                            t()
                        } else {
                            if (this.current_mode == "add") {
                                this.addItem(s, t)
                            } else {
                                this.saveItem(s, t)
                            }
                        }
                    } else {
                        t()
                    }
                },
                editPrevItem: function() {
                    l.mark("GenericManager/editPrevItem");
                    var s = this.current_item.previousSibling;
                    while (s && $isHidden(s)) {
                        s = s.previousSibling
                    }
                    if ($hasClass(s, "reorder_item")) {
                        s = null
                    }
                    if (s) {
                        this.current_item = s;
                        this.editCurrentItem(true)
                    } else {
                        try {
                            if (!this.isFormFirst()) {
                                this.showAddItem(true, true)
                            }
                        } catch (t) {
                            this.showAddItem(true, true)
                        }
                    }
                },
                editNextItem: function() {
                    l.mark("GenericManager/editNextItem");
                    var s = this.current_item.nextSibling;
                    while (s && $isHidden(s)) {
                        s = s.nextSibling
                    }
                    if (s) {
                        this.current_item = s;
                        this.editCurrentItem(true)
                    } else {
                        try {
                            if (!this.isFormLast()) {
                                this.showAddItem(true, false)
                            }
                        } catch (t) {
                            this.showAddItem(true, false)
                        }
                    }
                },
                showAddItem: function() {
                    l.mark("GenericManager/showAddItem");
                    this.setCurrentItemViaMenu();
                    this.current_mode = "add";
                    this.removeEmpty();
                    this.cancelCurrentEdit()
                },
                editCurrentItem: function() {
                    this.setCurrentItemViaMenu();
                    this.current_mode = "edit";
                    l.mark("GenericManager/editCurrentItem");
                    this.cancelCurrentEdit();
                    $hide(this.current_item)
                },
                incIndent: function(v, t) {
                    var u = b.getIndent(v) + t;
                    if (u < 1) {
                        u = 1
                    }
                    if (u > this.max_indent) {
                        u = this.max_indent
                    }
                    var w;
                    if (this.current_mode == "add") {
                        w = v.previousSibling
                    } else {
                        w = v.previousSibling.previousSibling
                    } if (w && $hasClass(w, "reorder_item")) {
                        w = null
                    }
                    if (w) {
                        var s = b.getIndent(w);
                        if (u > s) {
                            u = s + 1
                        }
                    }
                    b.setIndent(v, u)
                },
                alterChildIndent: function(y, s, v, w) {
                    var t = this;
                    var u = y.json.indent != s;
                    if (u && ((y.json.collapsed == 1) || w)) {
                        v = v || b.getChildren(y);
                        var x = s - y.json.indent;
                        $map(v, function(D) {
                            var z = D.json.indent + x;
                            if (z > 4) {
                                z = 4
                            }
                            var C = D.json.id;
                            t.data_model.update(C, {
                                indent: z
                            });
                            D.json.indent = z
                        });
                        return v
                    }
                    return []
                },
                empty_text: "No items",
                isEmpty: function() {
                    return this.getAllRenrededItems().length === 0
                },
                renderEmpty: function() {
                    return LI({
                        "class": "empty"
                    }, this.empty_text)
                },
                checkEmpty: function() {
                    if (this.isEmpty()) {
                        $remove($all("li", "empty", this.current_list));
                        var s = this.renderEmpty();
                        if (s) {
                            o.attachClick(s, this.showAddItem);
                            s.is_empty = true;
                            $add(this.current_list, s)
                        }
                        return true
                    } else {
                        this.removeEmpty()
                    }
                    return false
                },
                removeEmpty: function() {
                    $remove($all("li", "empty", this.current_list))
                },
                saveOrder: function(v) {
                    var s = $all("li", null, this.current_list);
                    var t = 0;
                    var u = {};
                    $map(s, function(w) {
                        if (w.json && w.json.id) {
                            t++;
                            w.json.item_order = t;
                            u[w.json.id] = [t, w.json.indent]
                        }
                    });
                    if (this.data_model.updateOrdersIndents) {
                        this.data_model.updateOrdersIndents(u)
                    }
                    if ($isFunction(v)) {
                        v(s)
                    }
                    return false
                },
                incNextSiblings: function(w) {
                    var v = w.json.item_order;
                    var u = w.nextSibling;
                    var t = {};
                    var s = 0;
                    while (u) {
                        if (u.json && u.json && u.json.id) {
                            v++;
                            u.json.item_order = v;
                            t[u.json.id] = [v, u.json.indent]
                        }
                        u = u.nextSibling;
                        s++
                    }
                    if (s > 0 && this.data_model.updateOrdersIndents) {
                        this.data_model.updateOrdersIndents(t)
                    }
                },
                setCurrentItemViaMenu: function() {
                    var s = this.menu;
                    if (s.shown && s.current_holder) {
                        this.current_item = s.current_holder;
                        this.menu.hide(null, true)
                    }
                },
                cancelCurrentEdit: function() {
                    var s = this.state_manager.current_cancel;
                    if (s) {
                        s.onclick();
                        this.state_manager.current_cancel = null
                    }
                }
            });
            var a = navigator.userAgent.indexOf("Macintosh") != -1 && $isMozilla();

            function d(s) {
                return (s.keyAscii == 13 && s.ctrl && !s.shift || a && s.keyAscii == 77 && s.ctrl && !s.shift)
            }
            c.exports = k
        }, {
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../items_utils/ItemForms.js": 39,
            "../misc/Util.js": 55,
            "../richtext_editor/.coffee.RichTextEditor.js": 92,
            "./GenericManagerUtils.js": 31
        }
    ],
    31: [
        function(d, f, c) {
            var b = d("../action_perfomed/.coffee.ActionPerformed.js");
            var a = {
                getChildren: function(k, l) {
                    var g = l && [k] || [];
                    var h = k.json.indent;
                    var j = k.nextSibling;
                    var i = k.json.project_id;
                    while (j) {
                        if ($hasClass(j, "manager") || $hasClass(j, "reorder_item")) {
                            j = j.nextSibling;
                            continue
                        }
                        if (!j.json || !j.json.indent || j.json.indent <= h) {
                            break
                        }
                        if (i != j.json.project_id) {
                            break
                        }
                        g.push(j);
                        j = j.nextSibling
                    }
                    return g
                },
                showHideChildren: function(k, o) {
                    var p = [];
                    if (o && o.json) {
                        p.push(o)
                    }
                    p = p.concat(k);
                    var q = {};
                    for (var n = 0; n < p.length; n++) {
                        var r = p[n];
                        var l = r.json;
                        if (!l) {
                            continue
                        }
                        for (var m = n + 1; m < p.length; m++) {
                            var h = p[m];
                            var g = h.json;
                            if (!g) {
                                break
                            }
                            if (g.indent <= l.indent) {
                                break
                            }
                            q[g.id] = l
                        }
                    }
                    $map(p, function(t) {
                        var s = t.json;
                        if (!s) {
                            return
                        }
                        var i = true;
                        var j = s;
                        while (true) {
                            j = q[j.id];
                            if (!j) {
                                break
                            }
                            if (j.collapsed) {
                                i = false;
                                break
                            }
                        }
                        if (i) {
                            $show(t)
                        } else {
                            $hide(t)
                        }
                    })
                },
                getParent: function(h) {
                    var i = h.json.indent;
                    var g = h.previousSibling;
                    while (g) {
                        if (!g.json) {
                            g = g.previousSibling
                        } else {
                            if (g.json.indent < i) {
                                return g
                            }
                            g = g.previousSibling
                        }
                    }
                    return null
                },
                imgOnMouseOver: function(g, i, h) {
                    $AEV(g, "mouseover", function() {
                        $removeClass(g, i);
                        $addClass(g, h)
                    });
                    $AEV(g, "mouseout", function() {
                        $removeClass(g, h);
                        $addClass(g, i)
                    })
                },
                getMenuEditIcon: function() {
                    var g = DIV({
                        "class": "icon menu cmp_menu_on gear_menu"
                    });
                    g.is_menu_icon = true;
                    return g
                },
                getIndent: function(i) {
                    if (!i) {
                        return 1
                    }
                    var h = 1;
                    var g = i.className.match(/indent_(\d)/);
                    if (g) {
                        return parseInt(g[1])
                    }
                    return h
                },
                setIndent: function(i, g, h) {
                    if (!h) {
                        b.mark("GenericManagerUtils/setIndent");
                        $map([1, 2, 3, 4, 5], function(j) {
                            $removeClass(i, "indent_" + j)
                        })
                    }
                    $addClass(i, "indent_" + g);
                    if (i.json) {
                        i.indent = g;
                        i.json.indent = g
                    }
                }
            };
            f.exports = a
        }, {
            "../action_perfomed/.coffee.ActionPerformed.js": 2
        }
    ],
    32: [
        function(f, b, i) {
            var a = window.Signals;
            var d = window.MiniCal;
            var k = window.imageSprite;
            var c = window.track;
            var l = f("../../models/.coffee.ItemsModel.js");
            var n = f("../../menus/.coffee.MenuPriorities.js");
            var m = f("../items_utils/.coffee.ItemCommonEdits.js");
            var h = f("../action_perfomed/.coffee.ActionPerformed.js");
            var j = f("../project_selecter/.coffee.ProjectSelecter.js");
            var g = {
                init: function() {
                    $AEV(window, "resize", this.resize);
                    a.connect("action_performed project_editor_manager_reset", function() {
                        g.deselectAll()
                    });
                    a.connect("menu_priority_changed", function(p) {
                        var o = $all("li", "selected");
                        if (o.length === 0) {
                            return
                        }
                        $map(o, function(q) {
                            m.updatePriority(q, p)
                        });
                        a.sendSignal("refresh_interface", null, true);
                        g.hideSelecta();
                        n.get().hide(null, true)
                    })
                },
                selectClick: function(o) {
                    $AEV(o, "contextmenu", function(p) {
                        if ($isMac()) {
                            if (p.meta) {
                                $preventDefault(p)
                            }
                        } else {
                            if (p.ctrl) {
                                $preventDefault(p)
                            }
                        }
                    });
                    $AEV(o, "mousedown", function(p) {
                        var q = $eventElm(p);
                        if (q && ($hasClass(q, "amicheckbox") || $hasClass(q, "amicheckbox_img")) && p.shift) {
                            return true
                        }
                        if (($isMac() && p.meta) || (!$isMac() && p.ctrl) || p.shift) {
                            $preventDefault(p);
                            return g._selectClick(q)
                        }
                    })
                },
                _selectClick: function(p) {
                    if (p && ($hasClass(p, "amicheckbox") || $hasClass(p, "amicheckbox_img"))) {
                        return false
                    }
                    var o = $parent(p, "li");
                    g.toggle(o);
                    if (document.selection && document.selection.empty) {
                        document.selection.empty()
                    } else {
                        $body().focus()
                    }
                    return false
                },
                showSelector: function() {
                    var o = $all("li", "selected");
                    if (o.length === 0) {
                        this.hideSelecta()
                    } else {
                        this.showSelecta()
                    }
                },
                hideSelecta: function() {
                    $fx.fadeOut($("item_commander"), {
                        duration: 100,
                        onComplete: function() {
                            $remove($("item_commander"))
                        }
                    })
                },
                showSelecta: function() {
                    if (!$("item_commander")) {
                        var r, p, s, q, o;
                        $addToTop($body(), DIV({
                            id: "item_commander"
                        }, this.scheldue = q = A({
                            href: "#",
                            c: "dp_icon fixed_pos"
                        }, _("Schedule")), s = A({
                            href: "#"
                        }, _("Move to project")), this.priority = o = A({
                            href: "#",
                            c: "fixed_pos menu_icon"
                        }, _("Priority")), p = A({
                            href: "#"
                        }, _("Delete")), r = A({
                            href: "#",
                            id: "deselect_items"
                        }, k("cmp_small_close", 16, 16))));
                        $fx.fadeIn($("item_commander"), {
                            duration: 100
                        });
                        $AEV(r, "click", $b(this.deselectAll, this));
                        $AEV(q, "click", $b(this.showScheldue, this));
                        $AEV(p, "click", $b(this.deleteItems, this));
                        $AEV(s, "click", $p($b(this.moveItems, this), s));
                        $AEV(o, "click", $b(this.showChangePriority, this))
                    }
                    this.resize()
                },
                enableAll: function() {
                    $map($all("li", "task_item"), function(o) {
                        o.disabled = false
                    })
                },
                deselectAll: function() {
                    if (h.get() != "ItemSelecter/toggle") {
                        $removeClass($all("li", "selected"), "selected");
                        this.hideSelecta()
                    }
                    return false
                },
                toggle: function(o) {
                    h.mark("ItemSelecter/toggle");
                    if ($hasClass(o, "selected")) {
                        $removeClass(o, "selected")
                    } else {
                        $addClass(o, "selected")
                    }
                    this.showSelector();
                    return false
                },
                resize: function() {
                    var o = $("item_commander");
                    var p = $("top_bar");
                    if (o) {
                        $setLeft(o, p.offsetLeft);
                        $setWidth(o, p.offsetWidth)
                    }
                },
                getProjectItems: function(o) {
                    var q = {};
                    var p = {};
                    $map(o, function(s) {
                        if (!s.json || q[s.json.id]) {
                            return
                        }
                        s.disabled = true;
                        var r = s.json.project_id;
                        if (!p[r]) {
                            p[r] = []
                        }
                        p[r].push(s.json.id);
                        $map(l.getChildren(s.json, false), function(t) {
                            if (!q[t.id]) {
                                p[r].push(t.id);
                                q[t.id] = true
                            }
                        })
                    });
                    return p
                },
                deleteItems: function() {
                    var o = $all("li", "selected");
                    m.deleteItems(o);
                    g.deselectAll();
                    g.enableAll();
                    return false
                },
                moveItems: function(q, p) {
                    var o = $all("li", "selected");
                    g.showMoveItems(q, o, p);
                    return false
                },
                showMoveItems: function(r, o, p) {
                    var q = g.getProjectItems(o);
                    j.showTooltip(r, {
                        no_swap: true,
                        top_offset: 28,
                        onSelect: function(s) {
                            var t = s.id;
                            if (t) {
                                m.moveItems(q, t)
                            }
                            g.enableAll();
                            if (p && $isFunction(p)) {
                                p()
                            }
                            c("Tasks", "MoveToProject");
                            return false
                        }
                    });
                    g.enableAll();
                    return false
                },
                showChangePriority: function(o) {
                    var p = n.get();
                    var q = $eventElm(o);
                    p.show(q, o, {
                        pos_y_offset: 3
                    });
                    return false
                },
                showScheldue: function(p) {
                    var q = $eventElm(p);
                    var o = $all("li", "selected");
                    if (o.length === 0) {
                        alert("You must select some tasks");
                        return false
                    }
                    d.offset_x = 100;
                    d.arrow_left = true;
                    d.offset_y = -7;
                    d.show_recurring_help = false;
                    d.with_arrow_top = true;
                    d.onSelect = function(r) {
                        m.updateItemsToDate(o, r);
                        if ($all("li", "selected").length === 0) {
                            g.hideSelecta()
                        }
                        d.remove();
                        g.hideSelecta()
                    };
                    d.create(q);
                    return false
                }
            };
            b.exports = g
        }, {
            "../../menus/.coffee.MenuPriorities.js": 111,
            "../../models/.coffee.ItemsModel.js": 137,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../items_utils/.coffee.ItemCommonEdits.js": 34,
            "../project_selecter/.coffee.ProjectSelecter.js": 77
        }
    ],
    33: [
        function(f, h, c) {
            var a, g, d, b;
            a = window.AmiCheckbox;
            d = f("./.coffee.ItemUtils.js");
            b = f("../../models/.coffee.StateModel.js");
            g = (function() {
                function i() {}
                i.prototype.create = function(j, l, m) {
                    var k;
                    if (m === void 0) {
                        m = j.json.checked
                    }
                    k = a.genereate();
                    $AEV(k, ["click", "touchend"], function(n) {
                        if (k.disabled || n.ctrl || b.get("drag_and_drop_mode") === b.DragMode.reordering) {
                            return false
                        } else {
                            return l(j, n)
                        }
                    });
                    if (!d.isBulletItem(j.json)) {
                        a.setChecked(k, m)
                    }
                    return k
                };
                i.prototype.update = function(o, n, l, m) {
                    var k, j;
                    if (m == null) {
                        m = true
                    }
                    if (!o) {
                        return
                    }
                    if (n) {
                        if (m) {
                            o.json.checked = 1
                        }
                        $addClass(o, "checked")
                    } else {
                        if (m) {
                            o.json.checked = 0
                        }
                        $removeClass(o, "checked")
                    }
                    k = $all("div", "amicheckbox", o)[0];
                    j = this.create(o, l, n);
                    $swap(k, j);
                    return j
                };
                return i
            })();
            h.exports = new g()
        }, {
            "../../models/.coffee.StateModel.js": 149,
            "./.coffee.ItemUtils.js": 36
        }
    ],
    34: [
        function(f, c, h) {
            var g, o, i, p, n, l, b, m, d, k, a, j = function(q, r) {
                    return function() {
                        return q.apply(r, arguments)
                    }
                };
            a = window.Signals;
            p = window.Dateist;
            n = window.DateistDateHelpers;
            i = window.DateUtils;
            o = f("../../components/agenda/.coffee.AgendaUtils.js");
            m = f("../../models/.coffee.ItemsModel.js");
            d = f("../../models/.coffee.ModelUndo.js");
            b = f("../generic_manager/GenericManagerUtils.js");
            k = f("../notifier/Notifier.js");
            g = f("../action_perfomed/.coffee.ActionPerformed.js");
            l = (function() {
                function q() {
                    this.updateItems = j(this.updateItems, this);
                    this.updateItemsToDate = j(this.updateItemsToDate, this);
                    this.showUndo = j(this.showUndo, this);
                    this.markForUndo = j(this.markForUndo, this);
                    this._setPriority = j(this._setPriority, this);
                    this.updatePriority = j(this.updatePriority, this);
                    a.connect("mark_for_undo", this.markForUndo)
                }
                q.prototype.updatePriority = function(w, u) {
                    var v, t, y, s, x, r;
                    g.mark("ItemCommonEdits/updatePriority");
                    a.sendSignal("update_priority", w, u);
                    if (w.json) {
                        x = m.update(w.json.id, {
                            priority: u
                        }), w = x[0], t = x[1];
                        r = $all("li", "item_" + w.id);
                        for (y = 0, s = r.length; y < s; y++) {
                            v = r[y];
                            $update(v.json, w);
                            this._setPriority(v)
                        }
                        return a.sendSignal("update_counters")
                    }
                };
                q.prototype._setPriority = function(v) {
                    var s, u, r, t;
                    t = [1, 2, 3, 4];
                    for (u = 0, r = t.length; u < r; u++) {
                        s = t[u];
                        $removeClass(v, "priority_" + s)
                    }
                    return $addClass(v, "priority_" + v.json.priority)
                };
                q.prototype.deleteItems = function(y) {
                    var E, t, r, F, x, w, z, D, v, u, C, s;
                    D = {};
                    z = {};
                    E = function(H) {
                        var G;
                        if (!D[H.id]) {
                            G = z[H.project_id];
                            if (!G) {
                                G = z[H.project_id] = []
                            }
                            G.push(H.id);
                            return D[H.id] = H
                        }
                    };
                    for (v = 0, C = y.length; v < C; v++) {
                        F = y[v];
                        if (F.json) {
                            x = m.getChildren(F.json, true);
                            for (u = 0, s = x.length; u < s; u++) {
                                t = x[u];
                                E(t)
                            }
                            $remove(F)
                        }
                    }
                    for (w in z) {
                        r = z[w];
                        m.deleteItem(r, parseInt(w))
                    }
                    this.markForUndo($values(D), "delete", _("%s task(s) deleted"));
                    a.sendSignal("update_counters");
                    return a.sendSignal("refresh_interface", null, true)
                };
                q.prototype.markForUndo = function(r, s, t) {
                    d.markCheckpoint(r, s);
                    return this.showUndo(t)
                };
                q.prototype.showUndo = function(u) {
                    var t, s, r;
                    r = A({
                        href: "#"
                    }, _("Undo"));
                    $AEV(r, "click", function() {
                        d.restore();
                        k.hide();
                        a.sendSignal("refresh_interface", null, true);
                        return false
                    });
                    s = A({
                        href: "#",
                        c: "hide_link"
                    }, _("Hide"));
                    $AEV(s, "click", k.hide);
                    t = u.replace("%s", Math.abs(d.getCurrentCheckpoint().items.length));
                    return k.show(SPAN(t, r, s), true)
                };
                q.prototype.updateItemsToDate = function(D, t) {
                    var C, u, F, s, x, z, y, w, E, r, v;
                    if (t) {
                        z = _("Date updated")
                    } else {
                        z = _("Date removed")
                    }
                    x = [];
                    for (y = 0, E = D.length; y < E; y++) {
                        F = D[y];
                        if (F.json) {
                            x.push(F.json)
                        }
                    }
                    this.markForUndo(x, "postpone", z);
                    v = [];
                    for (w = 0, r = D.length; w < r; w++) {
                        F = D[w];
                        s = F.json;
                        if (!s) {
                            continue
                        }
                        C = {};
                        if (!t) {
                            C.due_date = null;
                            C.date_string = ""
                        } else {
                            if (s.due_date) {
                                C.due_date = n.inherit_date(t, s.due_date);
                                if (!p.is_recurring(s.date_string, {
                                    lang: s.date_lang
                                })) {
                                    C.date_string = i.format(C.due_date);
                                    C.date_lang = window.DATEIST_LANG || "en"
                                }
                            } else {
                                u = i.dateistResultFromDate(t);
                                if (u.due_date) {
                                    C.due_date = u.due_date;
                                    C.date_string = u.date_string;
                                    C.date_lang = u.date_lang
                                }
                            }
                        }
                        m.update(s.id, C);
                        v.push(this.updateItems([F], true, false))
                    }
                    return v
                };
                q.prototype.updateItems = function(y, D, w) {
                    var C, x, s, u, t, z, r, v;
                    for (u = 0, z = y.length; u < z; u++) {
                        x = y[u];
                        if (x.json) {
                            v = $all("li", "item_" + x.json.id);
                            for (t = 0, r = v.length; t < r; t++) {
                                C = v[t];
                                if (C.render_opts.renderCls) {
                                    s = C.render_opts.renderCls.renderItem(C.json, C.render_opts)
                                } else {
                                    s = o.renderItem(C.json, C.render_opts)
                                }
                                s.disabled = false;
                                if (w) {
                                    $ATT($parent(C, "ul"), s);
                                    $remove(C)
                                } else {
                                    $swap(C, s)
                                }
                            }
                        }
                    }
                    if (o.getQuery().length > 0) {
                        o.refresh()
                    }
                    return a.sendSignal("update_counters")
                };
                q.prototype.moveItems = function(r, s) {
                    var t;
                    g.mark("ItemCommonEdits/moveItems");
                    m.moveMultiple(r, s);
                    t = $keys(r);
                    t.push(s);
                    a.sendSignal("projects.rerender", t);
                    a.sendSignal("refresh_interface", null, true);
                    return a.sendSignal("hide_editor_menu")
                };
                return q
            })();
            c.exports = new l()
        }, {
            "../../components/agenda/.coffee.AgendaUtils.js": 6,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ModelUndo.js": 140,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../notifier/Notifier.js": 63
        }
    ],
    35: [
        function(k, a, F) {
            var q, s, x, c, y, i, b, D, h, z, r, w, m, u, o, p, v, g, C, j, E, f, t, n, l, d = function(G, H) {
                    return function() {
                        return G.apply(H, arguments)
                    }
                };
            n = window.Signals;
            y = window.Dateist;
            c = window.DateUtils;
            o = window.MouseHover;
            l = window.imageSprite;
            C = k("../../components/people_assigner/.coffee.PeopleAssigner.js");
            j = k("../../components/project_editor/.coffee.ProjectEditorManager.js");
            w = k("../../components/labels/Labels.js");
            f = k("../../components/reminders/Reminders.js");
            v = k("../notes/Notes.js");
            g = k("../notes/.coffee.NotesAddTooltip.js");
            x = k("../../mini/.coffee.ContentTransformers.js").ContentTransformers;
            E = k("../../models/.coffee.ProjectsModel.js");
            r = k("../../models/.coffee.ItemsModel.js");
            s = k("../../models/.coffee.Collaborators.js");
            t = k("../../models/.coffee.Reminders.js").RemindersModel;
            q = k("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            u = k("../../menus/.coffee.MenuPriorities.js");
            m = k("../../menus/.coffee.MenuItemEditMore.js");
            h = k("../../menus/HelperMenuAnnotations.js");
            D = k("../generic_manager/GenericManagerUtils.js");
            i = k("../drag_and_drop/.coffee.DragAndDrop.js");
            p = k("../richtext_editor/.coffee.NatrualLanguageParsing.js");
            z = k("./ItemForms.js");
            b = (function() {
                G.prototype.current_priority = 4;

                function G() {
                    this.parseFormData = d(this.parseFormData, this);
                    this.menuIndentGeneric = d(this.menuIndentGeneric, this);
                    this.annotateMoreButton = d(this.annotateMoreButton, this);
                    this.annotateNoteButton = d(this.annotateNoteButton, this);
                    this.menuPriorityUpdated = d(this.menuPriorityUpdated, this);
                    this.annotatePrioirtyButton = d(this.annotatePrioirtyButton, this);
                    this.annotateReminderButton = d(this.annotateReminderButton, this);
                    this.genericSaveItem = d(this.genericSaveItem, this);
                    this.genericAddItem = d(this.genericAddItem, this);
                    this.genericCancelEdit = d(this.genericCancelEdit, this);
                    this.onShowContent = d(this.onShowContent, this);
                    this.onSaveContent = d(this.onSaveContent, this);
                    this.generateForm = d(this.generateForm, this);
                    n.connect("menu_priority_changed", this.menuPriorityUpdated);
                    n.connect("menu_indent_left", $p(this.menuIndentGeneric, -1));
                    n.connect("menu_indent_right", $p(this.menuIndentGeneric, 1));
                    n.connect("focus_current_item_input", function() {
                        var J, H;
                        J = $("editor");
                        if (J) {
                            H = $child(J, null, "richtext_editor");
                            if (H) {
                                try {
                                    return H.proxyFocus()
                                } catch (K) {
                                    return null
                                }
                            }
                        }
                    })
                }
                G.prototype.generateForm = function(H, Y) {
                    var R, N, K, X, V, L, Q, S, O, ah, W, ad, aa, ab, ag, af, ae, M, Z, ac, U, J, T;
                    R = (T = H.current_item) != null ? T.json : void 0;
                    if (H.name_val) {
                        x.setupByContent(H.name_val);
                        if (x.type) {
                            H.name_val = x.onContentShow(H.name_val)
                        }
                    }
                    Q = z.createDueInput(H);
                    if (H.due_date) {
                        if (R) {
                            ah = R.date_lang
                        } else {
                            ah = window.DATEIST_LANG || "en"
                        }
                        S = y.is_recurring(H.date_string, {
                            lang: ah
                        });
                        if (S) {
                            Q.value = H.date_string
                        } else {
                            Q.value = c.format(H.due_date)
                        }
                    }
                    H.inputs = [Q];
                    X = H.td_extra = SPAN({
                        c: "form_icon_holder"
                    }, O = SPAN(), ac = SPAN(), ae = SPAN(), ad = SPAN(), W = SPAN());
                    aa = function() {
                        if ($hasClass(X, "force_form_show")) {
                            return
                        }
                        return $addClass(X, "form_icon_holder_shown")
                    };
                    ab = function() {
                        if ($hasClass(X, "force_form_show")) {
                            return
                        }
                        return $removeClass(X, "form_icon_holder_shown")
                    };
                    o.attach(X, "form_icon_holder", aa, ab, {
                        timeout: 1500
                    });
                    N = j.current_editor;
                    if (!N) {
                        N = j.createEditorInstance()
                    }
                    H.withPlaceholders = true;
                    K = N.generateAddEditForm(H);
                    if (x.type && !$hasClass(K.text_box_holder, "has_content_icon")) {
                        x.annotateWithIcon(K.textarea)
                    }
                    if (H.name_val) {
                        p.truncate_links = true
                    } else {
                        p.truncate_links = false
                    }
                    L = false;
                    if (H.name_val && H.name_val.length > 0) {
                        L = true
                    }
                    p.attach(K.textarea, L);
                    $add(K.input_holders_tr, J = TD({
                        c: "due_date_holder minical_holder"
                    }, Q));
                    $AEV(J, "click", function(ai) {
                        var aj;
                        aj = $eventElm(ai);
                        if ($nodeName(aj) !== "a") {
                            return Q.focus()
                        }
                    });
                    K.duedate = Q;
                    Z = (R != null ? R.project_id : void 0) || N.project_id;
                    q.current_project_id = Z;
                    M = E.get(Z);
                    if (M && s.isProjectShared(M.id)) {
                        if (H.current_item) {
                            C.current_uid = void 0
                        }
                        ag = C.render(R, Z);
                        K.people_assigner = ag;
                        $add(K.input_holders_tr, TD({
                            c: "people_assigner_holder"
                        }, ag));
                        $add(K.input_holders_tr, TD({
                            c: "menu"
                        }))
                    } else {
                        $add(K.input_holders_tr, TD({
                            c: "people_assigner_holder"
                        }))
                    } if (H.no_indent) {
                        K.form.no_indent = true
                    }
                    U = K.textarea;
                    if (H.current_item) {
                        U.proxySetValue(w.textFormat(H.name_val, H.current_item.json.labels));
                        V = D.getIndent(H.current_item);
                        D.setIndent(K.li_item, V)
                    }
                    w.annotateFormArea(U, O);
                    q.reset();
                    ac = this.annotateReminderButton(ac, H);
                    this.annotateNoteButton(ad, H, Z);
                    if (this.note_button) {
                        H.on_ctrl_m = (function(ai) {
                            return function() {
                                return ai.note_button.onclick()
                            }
                        })(this)
                    }
                    if (H.no_indent) {
                        $remove(W)
                    } else {
                        this.annotateMoreButton(W, H, K.li_item)
                    }
                    af = 4;
                    if (H.priority) {
                        af = 5 - H.priority
                    }
                    this.current_priority = af;
                    ae = this.annotatePrioirtyButton(ae, af);
                    if (Y && Y.fixed_pos) {
                        $addClass([U, Q, ae, ac, O, W], "fixed_pos")
                    }
                    K.form.old_date = K.duedate.value;
                    return K
                };
                G.prototype.onSaveContent = function(H) {
                    if (x.type) {
                        return x.onContentSave(H)
                    } else {
                        return H
                    }
                };
                G.prototype.onShowContent = function(H) {
                    if (x.type) {
                        return x.onContentShow(H)
                    } else {
                        return H
                    }
                };
                G.prototype.genericCancelEdit = function() {
                    g.reset();
                    return x.onContollerHide()
                };
                G.prototype.genericAddItem = function(J, K) {
                    var H;
                    H = x;
                    if (H.type) {
                        K.content = H.onContentSave(K.content);
                        H.onContollerHide()
                    }
                    if (C.current_uid !== void 0) {
                        K.responsible_uid = C.current_uid;
                        return C.current_uid = void 0
                    }
                };
                G.prototype.genericSaveItem = function(R, H) {
                    var M, O, J, U, T, N, K, V, W, L, S, Q;
                    T = $parent(H, "li");
                    O = $f(H, "due_date");
                    J = O.value;
                    M = z.parseDueDate(O);
                    if (M === false) {
                        return false
                    }
                    V = 5 - this.current_priority;
                    L = {
                        id: R.json.id,
                        content: this.onSaveContent($gc(H, null, "richtext_editor").proxyGetValue()),
                        priority: V
                    };
                    if (C.current_uid !== void 0) {
                        if (R.json.responsible_uid !== C.current_uid) {
                            L.responsible_uid = C.current_uid
                        }
                        C.current_uid = void 0
                    }
                    if (H.no_indent !== true) {
                        N = D.getIndent(T);
                        L.indent = N;
                        U = j.current_editor;
                        if (!U) {
                            U = j.createEditorInstance()
                        }
                        U.alterChildIndent(R, N)
                    }
                    if (H.old_date !== J) {
                        L.due_date = M.due_date;
                        L.date_string = M.date_string;
                        L.date_lang = M.date_lang
                    }
                    $addAfter(R, T);
                    $remove(T);
                    W = $gc(H, null, "richtext_editor");
                    L = p.annotateFormData(W, L);
                    Q = r.update(R.json.id, L), K = Q[0], S = Q[1];
                    this.current_priority = 4;
                    this.priority_button = null;
                    if (x.type) {
                        x.onContollerHide()
                    }
                    return {
                        item: K,
                        is_updated: S
                    }
                };
                G.prototype.annotateReminderButton = function(L, M) {
                    var J, K, H;
                    K = M.current_item;
                    if (K && t.hasReminders(K.json.id)) {
                        H = "cmp_reminders_on";
                        $addClass(L.parentNode, "force_form_show")
                    } else {
                        H = "cmp_reminders"
                    }
                    J = l(H, 22, 16);
                    J.id = "reminders_icon";
                    $addClass(J, "form_action_icon menu_icon");
                    $AEV(J, "click", function(N) {
                        $addClass(J.parentNode, "force_form_show");
                        f.showTooltip(K, J, N);
                        return false
                    });
                    $swap(L, J);
                    return J
                };
                G.prototype.annotatePrioirtyButton = function(H, K) {
                    var J;
                    if (K == null) {
                        K = 4
                    }
                    J = l("cmp_priority" + K, 22, 16);
                    if (K !== 4) {
                        $addClass(H.parentNode, "force_form_show")
                    }
                    $AEV(J, "click", (function(L) {
                        return function(M) {
                            var N;
                            N = u.get();
                            N.show(J, M);
                            h.selectPriority(N, 5 - L.current_priority);
                            $addClass(J.parentNode, "force_form_show");
                            return false
                        }
                    })(this));
                    $addClass(J, "form_action_icon menu_icon");
                    $swap(H, J);
                    this.priority_button = J;
                    return J
                };
                G.prototype.menuPriorityUpdated = function(H) {
                    if (this.priority_button) {
                        H = 5 - H;
                        this.current_priority = H;
                        u.get().hide(null, true);
                        this.annotatePrioirtyButton(this.priority_button, H);
                        n.sendSignal("focus_current_item_input")
                    }
                    return false
                };
                G.prototype.annotateNoteButton = function(L, M, K) {
                    var J, H;
                    if (M.current_item || !v.isPremium(K)) {
                        $remove(L);
                        return
                    }
                    J = l("cmp_comment_on", 15, 14);
                    H = function(N) {
                        $addClass(J.parentNode, "force_form_show");
                        g.showTooltip(J, N);
                        return false
                    };
                    J.onclick = H;
                    $addClass(J, "form_action_icon menu_icon");
                    $swap(L, J);
                    this.note_button = J;
                    return J
                };
                G.prototype.annotateMoreButton = function(J, K, L) {
                    var H;
                    H = l("cmp_menu_on", 22, 16);
                    $AEV(H, "click", function(M) {
                        var N;
                        N = m.get();
                        N.show(H, M);
                        return false
                    });
                    $addClass(H, "form_action_icon menu_icon");
                    $swap(J, H);
                    this.more_button = H;
                    this.more_button.li_item = L;
                    return H
                };
                G.prototype.menuIndentGeneric = function(J) {
                    var H;
                    H = j.current_editor;
                    if (H && this.more_button) {
                        H.incIndent(this.more_button.li_item, J)
                    }
                    m.get().hide(true, null);
                    return n.sendSignal("focus_current_item_input")
                };
                G.prototype.parseFormData = function(H) {
                    var M, J, R, S, N, K, L, O, T, Q;
                    S = $parent(H, "li");
                    if (S) {
                        L = S.previousSibling;
                        K = L && L.json && L.json.item_order + 1 || 1
                    } else {
                        K = null
                    }
                    R = $f(H, "due_date");
                    J = z.parseDueDate(R);
                    if (J === false) {
                        return false
                    }
                    O = 5 - this.current_priority;
                    Q = $gc(H, null, "richtext_editor");
                    M = $strip(Q.proxyGetValue());
                    T = {
                        content: M,
                        project_id: j.current_project_id,
                        indent: S && D.getIndent(S) || 1,
                        priority: O,
                        item_order: K,
                        due_date: J.due_date,
                        date_string: J.date_string,
                        date_lang: J.date_lang
                    };
                    N = g.getValue();
                    if (N.length > 0) {
                        T.note = N;
                        g.reset()
                    }
                    T = p.annotateFormData(Q, T);
                    return T
                };
                G.prototype.removeItemInList = function(H) {
                    var J;
                    J = H.nextSibling;
                    while (true) {
                        if (!J) {
                            break
                        }
                        if ($isShown(J)) {
                            break
                        }
                        J = J.nextSibling
                    }
                    $addClass(H, "checked");
                    $addClass(H, "complete_animation");
                    setTimeout($p($remove, H), 140);
                    if (J) {
                        return i.attachHandler(J)
                    }
                };
                return G
            })();
            a.exports = new b()
        }, {
            "../../components/labels/Labels.js": 44,
            "../../components/people_assigner/.coffee.PeopleAssigner.js": 65,
            "../../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../../components/reminders/Reminders.js": 88,
            "../../menus/.coffee.MenuItemEditMore.js": 109,
            "../../menus/.coffee.MenuPriorities.js": 111,
            "../../menus/HelperMenuAnnotations.js": 115,
            "../../mini/.coffee.ContentTransformers.js": 124,
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.Reminders.js": 147,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../notes/.coffee.NotesAddTooltip.js": 57,
            "../notes/Notes.js": 61,
            "../richtext_editor/.coffee.NatrualLanguageParsing.js": 91,
            "./ItemForms.js": 39
        }
    ],
    36: [
        function(b, c, a) {
            var d;
            d = new RegExp("^s*\\*");
            a.isBulletItem = function(f) {
                var g;
                if (f && f.json) {
                    g = f.json.content
                } else {
                    g = f
                }
                return d.test(g)
            };
            a.handleTextShortcuts = function(h) {
                var i, f, g;
                g = /[ ]*![pP]([1234])|!!([1234])/;
                f = h.content.match(g);
                if (f) {
                    i = f[1] || f[2];
                    h.priority = Math.abs(parseInt(i) - 5);
                    h.content = h.content.replace(g, "")
                }
                return h
            }
        }, {}
    ],
    37: [
        function(l, c, F) {
            var a, r, d, w, o, h, x, f, C, s, y, b, p, q, v, u, E, z, i, j, k, D, t, n, m, g = function(G, H) {
                    return function() {
                        return G.apply(H, arguments)
                    }
                };
            w = window.Dateist;
            o = window.DateistDateHelpers;
            d = window.DateUtils;
            u = window.MenuRightClick;
            n = window.Signals;
            m = window.imageSprite;
            a = l("../agenda/.coffee.AgendaUtils.js");
            z = l("../people_assigner/.coffee.PeopleAssigner.js");
            v = l("../labels/Labels.js");
            E = l("../notes/.coffee.NotesUtils.js");
            b = l("../item_selecter/ItemSelecter.js");
            h = l("../drag_and_drop/.coffee.DragAndDrop.js");
            C = l("../generic_manager/GenericManagerUtils.js");
            j = l("../project_editor/.coffee.ProjectEditorManager.js");
            k = l("../project_list/.coffee.ProjectListUtils.js");
            i = l("../project_list/.coffee.ProjectColors.js");
            x = l("../formatter/Formatter.js");
            q = l("../../models/.coffee.ItemsModel.js");
            D = l("../../models/.coffee.ProjectsModel.js");
            t = l("../../models/.coffee.Reminders.js").RemindersModel;
            r = l("../../models/.coffee.Collaborators.js");
            p = l("./.coffee.ItemUtils.js");
            s = l("./.coffee.ItemCheckbox.js");
            y = l("./ItemDueDates.js");
            f = (function() {
                function G() {
                    this.createProjectItem = g(this.createProjectItem, this);
                    this.getMenuEditIcon = g(this.getMenuEditIcon, this);
                    this.renderItem = g(this.renderItem, this)
                }
                G.prototype.renderItem = function(ag, T) {
                    var J, O, ad, X, L, ae, ac, ab, W, S, K, Z, N, Q, H, af, V, M, aa, R, Y, U;
                    N = D.get(ag.project_id);
                    if (ag.due_date && $isString(ag.due_date)) {
                        q.convertToDateObject(ag)
                    }
                    S = LI({
                        c: "task_item item_" + ag.id,
                        id: "item_" + ag.id
                    });
                    S.json = ag;
                    if (ag.checked) {
                        $addClass(S, "checked")
                    }
                    $add(S, W = TABLE({
                        cellpadding: 0,
                        cellspacing: 0
                    }, H = TBODY()));
                    S.td_checker = V = TD({
                        c: "checker"
                    });
                    if (!p.isBulletItem(ag.content) && T.no_checkbox !== true) {
                        if (ag.is_archived) {
                            O = function() {
                                alert(_("This project is archived. Unarchive it to be able to edit it."));
                                s.update(S, ag.checked, O);
                                return true
                            }
                        } else {
                            if (ag.checked) {
                                O = T.fn_undo_complete_item
                            } else {
                                O = T.fn_complete_item
                            }
                        }
                        $add(V, J = s.create(S, O))
                    } else {
                        S.td_checker = V = TD()
                    }
                    aa = null;
                    if (T.with_time) {
                        Y = "40px";
                        if (window.Settings.AMPM) {
                            Y = "67px"
                        }
                        if (o.has_time(ag.due_date)) {
                            L = DIV({
                                "class": "div_time"
                            }, SPAN(d.getHourAndMin(ag.due_date)));
                            L.style.minWidth = Y;
                            if (o.is_overdue(new Date(), ag.due_date)) {
                                $addClass(L, "time_overdue")
                            }
                            aa = TD({
                                "class": "time task_content_item"
                            }, L)
                        }
                    }
                    M = null;
                    if (T.with_project) {
                        S.td_project = M = TD({
                            "class": "project task_content_item"
                        }, this.createProjectItem(ag));
                        if (!T.with_due_date) {
                            y.updateAlarmIcon(M, t.hasReminders(ag.id))
                        }
                        if (!T.with_due_date && w.is_recurring(ag.date_string, {
                            lang: ag.date_lang
                        })) {
                            $ATT(M, m("cmp_recurring", 12, 11))
                        }
                    }
                    af = null;
                    if (N && r.isProjectShared(N.id)) {
                        Q = function(ah) {
                            q.update(ag.id, {
                                responsible_uid: ah
                            });
                            n.sendSignal("people_assigner_person_changed");
                            return ag
                        };
                        ab = function() {
                            return ag.responsible_uid
                        };
                        Z = {
                            select_fn: Q,
                            get_current_fn: ab
                        };
                        af = TD({
                            c: "assign_user task_content_item"
                        }, z.render(ag, N.id, Z))
                    } else {
                        $addClass(S, "not_shared")
                    }
                    $ATT(S, DIV({
                        c: "invisible_space"
                    }));
                    X = null;
                    if (T.with_due_date) {
                        X = DIV({
                            c: "text_cursor div_due_date"
                        }, ae = y.create(ag))
                    }
                    U = x.format(ag.content);
                    U = U.replace(/^\*\s+/g, "");
                    R = $setHTML(SPAN({
                        c: "text"
                    }), U);
                    E.annotate(ag, R, S);
                    $add(R, $setHTML(DIV(), v.format("", ag)));
                    S.content = ad = TD({
                        c: "text_cursor content task_content_item"
                    }, X, R);
                    S.td_menu = K = null;
                    ac = true;
                    if (ag.is_archived || T.not_editable) {
                        ac = false
                    }
                    if (ac) {
                        S.td_menu = K = TD({
                            c: "menu"
                        });
                        $add(K, this.getMenuEditIcon(S, T.fn_toggle_menu, S.td_menu));
                        new u(S, $p(T.fn_toggle_menu, S, {
                            id: ag.id
                        }, ag.id));
                        b.selectClick(S);
                        if (!T.no_drag_and_drop) {
                            h.attach(S)
                        }
                    }
                    if (!T.no_indent) {
                        C.setIndent(S, ag.indent, true)
                    }
                    $addClass(S, "priority_" + ag.priority);
                    if (aa) {
                        $add(H, TR(V, aa, ad, M, af, K))
                    } else {
                        $add(H, TR(V, ad, M, af, K))
                    }
                    S.render_opts = T;
                    return S
                };
                G.prototype.getMenuEditIcon = function(H, K, J) {
                    var L;
                    L = C.getMenuEditIcon();
                    $AEV(J, ["click", "touchend"], $p(K, H, L, H.json.id));
                    H.menu_icon = L;
                    return L
                };
                G.prototype.createProjectItem = function(N, O) {
                    var L, K, M, J, H;
                    if (O == null) {
                        O = null
                    }
                    if (!O) {
                        O = D.get(N.project_id)
                    }
                    if (!O) {
                        O = D.temporary_projects[N.project_id]
                    }
                    if (!O) {
                        O = {
                            name: _("Undefined"),
                            id: null,
                            color: null
                        }
                    }
                    L = O.name;
                    L = L.replace(/^-\s*/, "");
                    L = $trim(L, 30);
                    J = SPAN({
                        c: "agenda_project_color"
                    }, "");
                    H = SPAN({
                        c: "clickable project_item"
                    });
                    $add(H, $setHTML(SPAN({
                        c: "pname"
                    }), x.format(L)));
                    $add(H, J);
                    K = O.color || 0;
                    if (O.inbox_project) {
                        K = 7
                    }
                    M = i.get();
                    J.style.backgroundColor = M[K] || "#dddddd";
                    J.style.color = M[K] || "#dddddd";
                    $AEV(H, "click", function(Q) {
                        if (Q.ctrl || Q.shift) {
                            return false
                        }
                        if (O.id) {
                            k.setCurrentById(O.id, N.id)
                        }
                        return false
                    });
                    return H
                };
                return G
            })();
            c.exports = new f()
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.Reminders.js": 147,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../formatter/Formatter.js": 27,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../item_selecter/ItemSelecter.js": 32,
            "../labels/Labels.js": 44,
            "../notes/.coffee.NotesUtils.js": 59,
            "../people_assigner/.coffee.PeopleAssigner.js": 65,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../project_list/.coffee.ProjectColors.js": 74,
            "../project_list/.coffee.ProjectListUtils.js": 76,
            "./.coffee.ItemCheckbox.js": 33,
            "./.coffee.ItemUtils.js": 36,
            "./ItemDueDates.js": 38
        }
    ],
    38: [
        function(d, c, f) {
            var l = window.Dateist;
            var k = window.DateistDateHelpers;
            var g = window.DateUtils;
            var h = window.AmiTooltip;
            var j = window.imageSprite;
            var b = d("../../components/smart_scheduler/.coffee.QuickDayShow.js");
            var i = d("../../models/.coffee.Reminders.js").RemindersModel;
            var a = {
                create: function(x, n) {
                    if (x.due_date) {
                        var q = SPAN({
                            "class": "date"
                        });
                        var v = l.is_recurring(x.date_string, {
                            lang: x.date_lang
                        });
                        var m = new Date();
                        var w = new Date();
                        w.setDate(w.getDate() + 1);
                        var r = k.is_overdue(m, x.due_date);
                        var o = k.day_diff(new Date(), x.due_date);
                        var s = g.humanizeDayDiff(o, x.due_date);
                        var p = o <= 7 && o >= -7;
                        if (p) {
                            $addClass(q, "date_future")
                        }
                        if (!n && window.AmiTooltip) {
                            h.showTooltip(q, $p(a._createTooltipContent, x))
                        }
                        $add(q, s);
                        if (k.is_same_date(x.due_date, m)) {
                            $addClass(q, "date_today")
                        } else {
                            if (k.is_same_date(x.due_date, w)) {
                                $addClass(q, "date_tom")
                            } else {
                                if (r) {
                                    $addClass(q, "date_overdue")
                                }
                            }
                        } if (v) {
                            $ATT(q, j("cmp_recurring", 12, 11, "recurring_icon"))
                        }
                        this.updateAlarmIcon(q, i.hasReminders(x.id));
                        return q
                    }
                    var u = SPAN({
                        "class": "date empty"
                    });
                    var t = this.updateAlarmIcon(u, i.hasReminders(x.id));
                    if (t) {
                        t.style.marginRight = "0px"
                    }
                    return u
                },
                _createTooltipContent: function(x) {
                    var m = new Date();
                    var r = k.is_overdue(m, x.due_date);
                    var n = k.day_diff(new Date(), x.due_date);
                    var p = n <= 7 && n >= -7;
                    var v = l.is_recurring(x.date_string, {
                        lang: x.date_lang
                    });
                    var u = g.formatView(x.due_date, !p || r);
                    var t;
                    var o = false;
                    if (n > 0) {
                        t = (n == 1 || n == -1) && _("day left") || _("days left")
                    } else {
                        if (n < 0) {
                            n = Math.abs(n);
                            t = (n == 1 || n == -1) && _("day ago") || _("days ago");
                            o = true
                        }
                    } if (n !== 0) {
                        var s = "<span>" + n + "</span> ";
                        u += "<br /><small>" + s + t + "</small>"
                    }
                    if (v) {
                        var w = x.date_string;
                        u += "<br /><small> " + w + "</small>"
                    }
                    if (window.User.is_premium && x.due_date) {
                        u = $setHTML(SPAN({
                            c: "date_tooltip"
                        }), u);
                        var q = b.show(x.due_date);
                        $add(u, q)
                    }
                    return u
                },
                updateAlarmIcon: function(p, m) {
                    var n = $all("img", "alarm_icon", p);
                    if (n.length > 0) {
                        $remove(n[0])
                    }
                    var o;
                    if (m) {
                        $addToTop(p, o = j("cmp_alarm", 16, 16, "alarm_icon"))
                    }
                    return o
                },
                updateDueDate: function(m) {
                    var o = $all("div", "div_due_date", m)[0];
                    if (o) {
                        var n = a.create(m.json);
                        $replace(o, n);
                        $fx.highlight($gc(m, "span", "date"), {
                            duration: 600
                        })
                    }
                },
                showDateInsert: function() {
                    window.open("/Help/DatesTimes");
                    return false
                }
            };
            c.exports = a
        }, {
            "../../components/smart_scheduler/.coffee.QuickDayShow.js": 94,
            "../../models/.coffee.Reminders.js": 147
        }
    ],
    39: [
        function(g, b, h) {
            var d = window.MiniCal;
            var f = window.AmiComplete;
            var c = window.AmiButton;
            var l = window.DateistDateHelpers;
            var i = window.DateUtils;
            var k = window.DummyText;
            var a = g("./ItemDueDates.js");
            var j = {
                attachClick: function(n, m) {
                    $AEV(n, "mousedown", function(p) {
                        if (p.button == 2) {
                            return false
                        }
                        var q = $eventElm(p);
                        if ($hasClass(q, "clickable")) {
                            return true
                        }
                        if (document.selection) {
                            var o = document.selection.createRange().text;
                            if (o) {
                                return true
                            }
                        }
                        if ($nodeName(q) == "input") {
                            return true
                        }
                        if (p.ctrl || p.shift) {
                            return true
                        }
                        if (q && $nodeName(q) != "a" && !$hasClass(q, "label")) {
                            return m(p)
                        }
                        return true
                    })
                },
                createDueInput: function(n) {
                    var o = INPUT({
                        type: "text",
                        c: "input_due_date dp_icon",
                        name: "due_date",
                        tabIndex: 2,
                        autocomplete: "off",
                        placeholder: _("Schedule")
                    });
                    var p = function() {
                        o.date_string = "";
                        o.no_date = true;
                        d.reset();
                        o.value = ""
                    };
                    var m = function(q) {
                        if (!q) {
                            o.value = "";
                            o.date_string = ""
                        } else {
                            if (l.has_time(n.due_date)) {
                                q = l.inherit_date(q, n.due_date)
                            } else {
                                q = l.date_max(q)
                            }
                            o.value = i.format(q);
                            o.date_string = i.jsonFormat(q);
                            d.setCurrentNoRender(q)
                        }
                        o.no_date = false;
                        o.use_custom = false;
                        if ($isIe() && o.value) {
                            $removeClass(o, "dummy_text")
                        }
                        window.SHOULD_HIDE = true;
                        setTimeout(function() {
                            window.SHOULD_HIDE = false
                        }, 15);
                        try {
                            o.focus()
                        } catch (r) {}
                        try {
                            $remove($all("span", "error", $f($parent(o, "form"))))
                        } catch (r) {}
                        d.remove()
                    };
                    if (n && n.due_date) {
                        m(new Date(n.due_date), true)
                    } else {
                        p()
                    }
                    $AEV(o, "keydown", function(q) {
                        o.use_custom = true;
                        if (q.keyAscii == 13) {
                            d.remove();
                            return false
                        } else {
                            if (q.keyAscii == 9 && !f.shown()) {
                                d.remove();
                                setTimeout(function() {
                                    var r = $child($parent(o.parentNode, "table"), null, "assign_icon");
                                    if (n.due_date_focus) {
                                        n.due_date_focus()
                                    } else {
                                        if (r) {
                                            r.showTooltip()
                                        } else {
                                            $gc($parent(o, "form"), null, "richtext_editor").proxyPlaceCursor()
                                        }
                                    }
                                }, 10);
                                return false
                            } else {
                                if (q.keyAscii == 27) {
                                    if (d.shown) {
                                        return false
                                    }
                                    $preventDefault(q);
                                    $child($parent(o, "form"), "a", "cancel").onclick();
                                    return false
                                }
                            }
                        }
                    });
                    $AEV(o, "keypress", function(s) {
                        if (s.keyAscii == 9) {
                            return true
                        }
                        var r = $gp(o, "table");
                        var q;
                        if (r) {
                            q = $gc(r, "div", "richtext_editor")
                        }
                        if (q) {
                            if (o.value === "") {
                                q.dateist_disabled = false
                            } else {
                                q.dateist_disabled = true
                            }
                            q.save_position = false;
                            if (q.onchanged) {
                                q.onchanged()
                            }
                            o.focus()
                        }
                    });
                    $AEV(o, ["focus", "click"], function() {
                        if (window.SHOULD_HIDE || f.shown()) {
                            return
                        }
                        setTimeout(function() {
                            if (d.click_elm != o) {
                                d.create(o)
                            }
                        }, 2)
                    });
                    d.onSelect = m;
                    d.noDate = p;
                    d.show_recurring_help = true;
                    d.with_arrow_top = true;
                    d.offset_x = -30;
                    d.arrow_left = false;
                    d.offset_y = 0;
                    d.close_fn_eval = null;
                    k.attach(o, [o], _("Schedule"));
                    return o
                },
                genCancel: function(m, r, o, p) {
                    p = p || _("Cancel");
                    var q = A({
                        "class": "cancel",
                        href: "",
                        tabIndex: 4
                    }, p);
                    var n = function(s) {
                        var t = $parent(q, m);
                        $remove(t);
                        o.current_form = null;
                        o.current_cancel = null;
                        if ($isFunction(r)) {
                            r(s)
                        }
                        return false
                    };
                    q.onclick = n;
                    return q
                },
                parseDueDate: function(o) {
                    var m = null;
                    if (o.value !== "") {
                        m = i.parse(o.value);
                        if (m.error || !m.due_date) {
                            this.flashDateError(o);
                            var n = $request("/API/v6/mark_invalid_date");
                            n.addErrback(function() {});
                            n.sendReq({
                                date_string: o.value,
                                lang: window.LANG,
                                translated: "dateist"
                            });
                            return false
                        }
                        return m
                    } else {
                        return {
                            date_string: "",
                            due_date: null,
                            date_lang: "en"
                        }
                    }
                },
                flashDateError: function(q) {
                    var p = $parent(q, "form");
                    var m = q.parentNode;
                    $remove($all("span", "error", m));
                    var o = A({
                        href: "#"
                    }, _("Help"));
                    $AEV(o, "click", a.showDateInsert);
                    var n = SPAN({
                        c: "error",
                        s: "padding: 2px"
                    }, _("Invalid date"), o);
                    $ATT(m, n);
                    c.enable($child(p, "a", "submit_btn"));
                    d.create(q.parentNode)
                }
            };
            b.exports = j
        }, {
            "./ItemDueDates.js": 38
        }
    ],
    40: [
        function(d, c, h) {
            var a = window.Signals;
            var i = d("../../components/labels/Labels.js");
            var g = d("../action_perfomed/.coffee.ActionPerformed.js");
            var j = d("../project_editor/.coffee.ProjectEditorManager.js");
            var k = d("../items_utils/.coffee.ItemCommonEdits.js");
            var f = d("../../models/.coffee.Collaborators.js");
            var b = {
                sortBy: function(n, m) {
                    var l = j.current_editor;
                    if (!l) {
                        return false
                    }
                    l.saveCurrentItem(function() {
                        g.mark("ItemsSortBy/sortBy");
                        var p = $AF(l.current_list.childNodes);
                        var o = [];
                        $map(p, function(s) {
                            if (s.json) {
                                o.push(s.json)
                            }
                        });
                        k.markForUndo(o, "reorder_project_editor", _("Order changed"));
                        var q = b._sortListBy(p, 1, n, m);
                        var r = UL({
                            c: "items"
                        });
                        $map(q, function(s) {
                            r.appendChild(s)
                        });
                        $swap(l.current_list, r);
                        l.current_list = r;
                        l.saveOrder();
                        l.arrows.updateArrows();
                        a.sendSignal("sort_by_done")
                    });
                    return false
                },
                _sortListBy: function(p, m, t, o) {
                    var u = [];
                    var s = [];
                    var n;
                    var r;
                    var l = {};
                    $map(p, function(y) {
                        var w = y.json;
                        if (w && w.indent == m) {
                            if (o(w)) {
                                r = u
                            } else {
                                r = s
                            }
                            r.push(y);
                            n = w.id;
                            l[n] = []
                        } else {
                            if (w) {
                                var x = l[n];
                                if (x) {
                                    x.push(y)
                                } else {
                                    s.push(y)
                                }
                            }
                        }
                    });
                    u = u.sort(t);
                    var q;
                    q = u.concat(s);
                    var v = [];
                    $map(q, function(y) {
                        v.push(y);
                        if (y.json) {
                            var w = l[y.json.id];
                            if (w && w.length > 0) {
                                var x = b._sortListBy(w, w[0].json.indent, t, o);
                                v = v.concat(x)
                            }
                        }
                    });
                    return v
                },
                sortByDate: function() {
                    b.sortBy(b._sortByDate, function(l) {
                        return l.date_string !== "" && l.due_date
                    })
                },
                sortByPriority: function() {
                    b.sortBy(b._sortByPriority, function(l) {
                        return l.priority != 1
                    })
                },
                sortByResponsible: function() {
                    b.sortBy(b._sortByResponsible, function(l) {
                        return l.responsible_uid != null
                    })
                },
                sortByName: function() {
                    b.sortBy(b._sortByName, function(l) {
                        return l.content != null
                    })
                },
                _sortByDate: function(m, l) {
                    var o = m.json.due_date.getTime();
                    var n = l.json.due_date.getTime();
                    if (o < n) {
                        return -1
                    } else {
                        if (o > n) {
                            return 1
                        }
                    } if (o == n) {
                        if (m.json.priority != l.json.priority) {
                            return -(m.json.priority - l.json.priority)
                        }
                        return m.json.item_order - l.json.item_order
                    }
                },
                _sortByPriority: function(m, l) {
                    var o = m.json.priority;
                    var n = l.json.priority;
                    if (o == n) {
                        return m.json.item_order - l.json.item_order
                    }
                    if (o > n) {
                        return -1
                    } else {
                        return 1
                    }
                },
                _sortByResponsible: function(m, l) {
                    var q = m.json.responsible_uid;
                    var p = l.json.responsible_uid;
                    if (q == p) {
                        return m.json.item_order - l.json.item_order
                    }
                    var s = f.getUserById(q);
                    var r = f.getUserById(p);
                    if (s && r) {
                        var o = s.full_name.toLowerCase();
                        var n = r.full_name.toLowerCase();
                        if (o == n) {
                            return m.json.item_order - l.json.item_order
                        }
                        if (o < n) {
                            return -1
                        } else {
                            return 1
                        }
                    }
                    if (q > p) {
                        return -1
                    } else {
                        return 1
                    }
                },
                _sortByName: function(m, l) {
                    var o = m.json.content.toLowerCase();
                    var n = l.json.content.toLowerCase();
                    o = $strip(o.replace(i.re_labels, ""));
                    n = $strip(n.replace(i.re_labels, ""));
                    if (o == n) {
                        return m.json.item_order - l.json.item_order
                    }
                    if (o < n) {
                        return -1
                    } else {
                        return 1
                    }
                }
            };
            c.exports = b
        }, {
            "../../components/labels/Labels.js": 44,
            "../../models/.coffee.Collaborators.js": 130,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../items_utils/.coffee.ItemCommonEdits.js": 34,
            "../project_editor/.coffee.ProjectEditorManager.js": 69
        }
    ],
    41: [
        function(f, b, i) {
            var d = window.AmiButton;
            var a = window.GB_hide;
            var l = window.Indicator;
            var j = window.GB_showHTML;
            var c = f("../../models/.coffee.SyncEngine.js");
            var k = f("../../models/.coffee.ItemsModel.js");
            var g = f("../../models/.coffee.ProjectsModel.js");
            var h = f("../../models/.coffee.TemporaryIds.js");
            i.show = function(o) {
                o = k.getById(o.id);
                var n = d.createButton(_("Ok"), null, "red");
                $AEV(n, "click", function() {
                    a();
                    return false
                });
                var q = DIV(l.imgSmall(), BR());
                var m = DIV({
                    c: "holder_unique_link"
                }, q, n);
                j(_("Link to task"), m, 200, 250);
                var p = function(v) {
                    var u = {
                        id: v.id
                    };
                    if (v.sync_id) {
                        u.sync_id = v.sync_id
                    }
                    var t = "https://todoist.com/showTask?" + $encode(u);
                    var s = INPUT({
                        type: "text",
                        value: t
                    });
                    $replace(q, s);
                    s.select()
                };
                var r = function(t) {
                    var t = k.getById(t.id);
                    var u = g.get(t.project_id);
                    if (u && u.shared && !t.sync_id) {
                        var s = $requestJSON("/API/v6/get_item");
                        s.addCallback(function(v) {
                            p(v.item)
                        });
                        s.sendReq({
                            item_id: t.id,
                            token: window.User.token
                        })
                    } else {
                        p(t)
                    }
                };
                if (h.isTemporary(o.id)) {
                    c.sync({
                        onSuccess: $p(r, o)
                    }, true)
                } else {
                    r(o)
                }
                return false
            }
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.SyncEngine.js": 152,
            "../../models/.coffee.TemporaryIds.js": 155
        }
    ],
    42: [
        function(c, b, d) {
            var a, f, j, i, h, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            a = window.GB_hide;
            f = window.GB_showHTML;
            h = window.imageSprite;
            i = c("../../models/.coffee.NotificationsModel.js");
            j = (function() {
                function k() {
                    this.show = g(this.show, this);
                    this.showFromModel = g(this.showFromModel, this)
                }
                k.prototype.canPromote = function(m) {
                    var l;
                    l = i.noti_model["karma_level_" + m];
                    if (l) {
                        return true
                    }
                    return false
                };
                k.prototype.getIcon = function(l) {
                    switch (l) {
                        case 1:
                            return "icon-karmaprofile2";
                        case 2:
                            return "icon-karmaprofile3";
                        case 3:
                            return "icon-karmaprofile4";
                        case 4:
                            return "icon-karmaprofile5";
                        case 5:
                            return "icon-karmaprofile6";
                        case 6:
                            return "icon-karmaprofile7";
                        case 7:
                            return "icon-karmaprofile8"
                    }
                };
                k.prototype.showFromModel = function(m) {
                    var l;
                    l = i.noti_model["karma_level_" + m];
                    if (l) {
                        this.show(l, m, this.getIcon(m), false)
                    }
                    return false
                };
                k.prototype.show = function(r, t, u, q) {
                    var s, x, n, v, p, m, l, w, o;
                    if (q == null) {
                        q = true
                    }
                    x = window.User.completed_count;
                    if (t === 1) {
                        w = _("Novice Level");
                        p = _("You keep progressing- great work!");
                        m = _("With 500 points, you've reached the Novice Todoist Karma level.");
                        o = _("My @Todoist Karma gets better everyday :) With 500 points, I'm now a Novice!");
                        n = _("My Todoist Karma gets better everyday :) With 500 points, I'm now a Novice. What about you?")
                    } else {
                        if (t === 2) {
                            w = _("Intermediate Level");
                            p = _("Congratulations, you completed a total of %s tasks!").replace("%s", x);
                            m = _("Be proud, your productivity is increasing every day! Keep it up and achieve anything.");
                            o = _("I've completed %s tasks to reach Intermediate @Todoist Karma!").replace("%s", x);
                            n = _("I've completed %s tasks to reach Todoist Karma's Intermediate level! Try Todoist and become more productive.").replace("%s", x)
                        } else {
                            if (t === 3) {
                                w = _("Professional Level");
                                p = _("You completed %s tasks last month").replace("%s", r.completed_last_month);
                                m = _("Feeling more productive than ever? Don't quit now, you're nearly half way to Enlightened!");
                                o = _("In the last month, I completed %s tasks to reach @Todoist Karma's Professional level!").replace("%s", r.completed_last_month);
                                n = _("Last month, I completed %s tasks and reached Todoist Karma's Professional level. Don't stop me now!").replace("%s", r.completed_last_month)
                            } else {
                                if (t === 4) {
                                    w = _("Expert Level");
                                    p = _("Your productivity truly has no bounds");
                                    m = _("Stay focused, be productive and keep progressing. You'll be Enlightened in no time!");
                                    o = _("I've completed %s tasks, and now I'm a productivity @Todoist Expert!").replace("%s", x);
                                    n = _("Last month, I completed %s tasks and reached Todoist Karma's Professional level. Don't stop me now!")
                                } else {
                                    if (t === 5) {
                                        w = _("Master Level");
                                        p = _("We salute you, Master Todoist user!");
                                        m = _("You've reached an important threshold– over 10,000 impressive karma points.");
                                        o = _("With more than 10,000 points, I'm now a @Todoist Karma Master! #ProductivityMaster");
                                        n = _("With more than 10,000 points, I'm now a Todoist Karma Master! #ProductivityMaster")
                                    } else {
                                        if (t === 6) {
                                            w = _("Grandmaster Level");
                                            p = _("You're just one level from Enlightenment");
                                            m = _("Be proud- your Karma has skyrocketed to over 20,000 points after completing %s tasks.").replace("%s", x);
                                            o = _("I'm the #productivity Grandmaster– with over 20k @Todoist Karma points!");
                                            n = _("I'm the #productivity Grandmaster– with over 20k Todoist Karma points and %s completed tasks!").replace("%s", x)
                                        } else {
                                            if (t === 7) {
                                                w = _("Enlightened Level");
                                                p = _("You did it. You're now in the exclusive %s% of Todoist users!").replace("%s", r.top_procent);
                                                m = _("You've completed an impressive total of %s tasks!").replace("%s", x);
                                                o = _("I have joined the exclusive %s of Todoist users! Reaching @Todoist Karma Enlightenment!").replace("%s", r.top_procent);
                                                n = _("I have joined the exclusive %s of Todoist users! Reaching Todoist Karma Enlightenment!").replace("%s", r.top_procent)
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    u = SPAN({
                        c: "karma-icon " + u
                    });
                    s = DIV({
                        c: "btn_continue"
                    }, _("Continue"));
                    $AEV(s, "click", a);
                    l = DIV({
                        c: "share_icons"
                    }, this._genButton("twitter", o, w, r, t), this._genButton("facebook", n, w, r, t), this._genButton("gplus", n, w, r, t));
                    if (q) {
                        p = H2(p);
                        m = H3(m)
                    } else {
                        p = H2();
                        m = null
                    }
                    v = DIV({
                        c: "karma_promo"
                    }, DIV({
                        c: "icon"
                    }, u), H1(w), p, m, DIV({
                        c: "bottom_holder"
                    }, l, DIV({
                        c: "btn_holder"
                    }, s)), A({
                        href: "/karma",
                        c: "karma_help",
                        target: "_blank"
                    }, _("Todoist Karma Help")));
                    $addClass(v, "karma_cls_" + t);
                    f("", v, 500, 450);
                    return false
                };
                k.prototype._genButton = function(m, r, q, p, l) {
                    var s, o, n;
                    s = "https://" + location.host + "/karma/" + window.LANG + "/" + l + "/2";
                    if (m === "twitter") {
                        n = r + " " + s;
                        n = $urlencode(n);
                        n = "https://twitter.com/home?status=" + n
                    } else {
                        if (m === "facebook") {
                            n = "https://www.facebook.com/sharer.php?u=" + s
                        } else {
                            if (m === "gplus") {
                                n = "https://plus.google.com/share?url=" + s
                            }
                        }
                    }
                    o = A({
                        href: n,
                        target: "_blank"
                    }, h("cmp_k_" + m, 37, 37));
                    return o
                };
                return k
            })();
            b.exports = new j()
        }, {
            "../../models/.coffee.NotificationsModel.js": 142
        }
    ],
    43: [
        function(c, b, d) {
            var h = c("../project_editor/.coffee.ProjectEditorManager.js");
            var g = c("../quick_add/.coffee.QuickAdd.js");
            var j = c("../quick_find/.coffee.QuickFind.js");
            var a = c("../items_utils/ItemsSortBy.js");
            var f = c("../opener/WindowOpener.js");

            function i(o) {
                var n = o.target || o.srcElement;
                if (n) {
                    var l = $nodeName(n);
                    if (l == "textarea" || l == "input" || l == "select") {
                        return true
                    }
                    if ($hasClass(n, "amibutton") || $hasClass(n, "richtext_editor")) {
                        return true
                    }
                }
                var m = o.keyAscii;
                var k = h.current_editor;
                if ($isIn(m, [97, 65])) {
                    if (k) {
                        k.addNewItem(m == 65)
                    }
                    $preventDefault(o);
                    return false
                } else {
                    if (!o.ctrl && (m == 47 || m == 102)) {
                        j.focus();
                        j.select();
                        $preventDefault(o);
                        return false
                    } else {
                        if ((m == 81 || m == 113) && !o.ctrl) {
                            $preventDefault(o);
                            g.toggle();
                            return false
                        } else {
                            if (m == 115) {
                                a.sortByDate();
                                $preventDefault(o);
                                return false
                            } else {
                                if (m == 112) {
                                    a.sortByPriority();
                                    $preventDefault(o);
                                    return false
                                } else {
                                    if (o.ctrl && $isIn(m, [38, 40])) {
                                        if (k && !h.current_form) {
                                            k.addNewItem(m == 40);
                                            $preventDefault(o)
                                        }
                                        return false
                                    } else {
                                        if (m == 63) {
                                            return f.showKeyboardShortcuts()
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            d.init = function() {
                $AEV(document, "keypress", i)
            }
        }, {
            "../items_utils/ItemsSortBy.js": 40,
            "../opener/WindowOpener.js": 64,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../quick_add/.coffee.QuickAdd.js": 79,
            "../quick_find/.coffee.QuickFind.js": 82
        }
    ],
    44: [
        function(d, b, f) {
            var a = window.Signals;
            var l = window.LibEdit;
            var c = window.AmiComplete;
            var h = window.imageSprite;
            var k = d("../agenda/.coffee.AgendaUtils.js");
            var g = d("../../models/.coffee.LabelsModel.js");
            var j = d("../promotion_overlay/.coffee.PromotionOverlay.js");
            var i = {
                re_labels: /(^|\s+)@([^\s,]+)/g,
                colors: ["#019412", "#a39d01", "#e73d02", "#e702a4", "#9902e7", "#1d02e7", "#0082c5", "#555555"],
                init: function() {
                    if (window.User.is_premium) {
                        this.colors = this.colors.concat(["#008299", "#03b3b2", "#ac193d", "#82ba00", "#111111"])
                    }
                },
                getLabels: function(m) {
                    var n = [];
                    m = m.replace(i.re_labels, function(r, p, o) {
                        o = o.toLowerCase();
                        var q = g.get(o);
                        if (q) {
                            n.push(q.id)
                        } else {
                            n.push(o)
                        }
                        return ""
                    });
                    return [m, n]
                },
                queryLabel: function(m) {
                    a.sendSignal("select_labels_tab");
                    k.query("@" + m.innerHTML)
                },
                format: function(q, p) {
                    if (!p.labels) {
                        return q
                    }
                    var m = {};
                    var r = [];
                    var n = function(s) {
                        if (!m[s.id]) {
                            r.push(s);
                            m[s.id] = true
                        }
                    };
                    $map(p.labels, function(t) {
                        var s = g.getById(t);
                        if (s) {
                            n(s);
                            q = q.replace(new RegExp("(^|s)@" + s), "$1")
                        }
                    });
                    var o = i.getLabels(q)[1];
                    $map(o, function(s) {
                        s = g.getById(s);
                        if (s) {
                            n(s);
                            q = q.replace(new RegExp("(^|s)@" + s), "$1")
                        }
                    });
                    return i._format(q, r)
                },
                _format: function(o, p) {
                    if (!p || p.length === 0) {
                        return o
                    }
                    p.sort(function(r, q) {
                        return r.item_order - q.item_order
                    });
                    var m = [];
                    var n = 0;
                    $map(p, function(s, t) {
                        if (s) {
                            var q = 'style="color: ' + (i.colors[s.color] || "#555555") + '"';
                            var r = $xssStrip(s.name);
                            m.push('<a class="label" onclick="Labels.queryLabel(this)" ' + q + ">" + r + "</a>");
                            n++;
                            o = o.replace(new RegExp("(^|s)@" + s, "ig"), "")
                        }
                        var u = p[t + 1];
                        if (u) {
                            m.push('<a class="label label_sep">,</a>')
                        }
                    });
                    if (n > 0) {
                        m.push('<a class="label label_sep"> </a>')
                    }
                    var p = m.join("");
                    return o + '<div class="labels_holder">' + p + "</div>"
                },
                formatByContent: function(o) {
                    var n = i.getLabels(o);
                    o = n[0];
                    var p = n[1];
                    if (p.length === 0) {
                        return o
                    } else {
                        var m = [];
                        $map(p, function(q) {
                            var r;
                            if ($isNumber(q)) {
                                r = g.getById(q)
                            } else {
                                r = {
                                    name: q,
                                    color: 0
                                }
                            } if (r) {
                                m.push(r)
                            }
                        });
                        return i._format(o, m)
                    }
                },
                jsonFormat: function(m) {
                    m = m.replace(i.re_labels, function(p, o, n) {
                        var q = function(r) {
                            return "\\" + r
                        };
                        n = n.replace(/\*|\+/g, q);
                        return p.replace(new RegExp(o + "@" + n, "g"), "")
                    });
                    return $strip(m)
                },
                textFormat: function(o, p) {
                    var n = {};
                    var m = [];
                    if (p) {
                        $map(p, function(t) {
                            var r = g.getById(t);
                            if (r && !n[r.id]) {
                                var q = "@" + r.name;
                                var s = new RegExp("(^|s)@" + c.escapeReqExpSepcails(r.name), "ig");
                                if (o.match(s) == null) {
                                    m.push(q);
                                    n[r.id] = true
                                }
                            }
                        })
                    }
                    m = m.join(" ");
                    if (m.length > 0) {
                        m += " "
                    }
                    return m + $strip(o)
                },
                getCompletionLabels: function() {
                    var m = [];
                    $map(g.getAll(true), function(n) {
                        m.push({
                            name: n.name
                        })
                    });
                    return m
                },
                annotateFormArea: function(m, n) {
                    if (!window.User.is_premium) {
                        return
                    }
                    c.attach(m, {
                        collection: function() {
                            return i.getCompletionLabels()
                        },
                        filterItem: function(p, o) {
                            return $setHTML(SPAN(), o)
                        },
                        position_item: $parent(m, "td", "text_box_holder"),
                        extra_width: 1,
                        support_paste: false
                    });
                    $AEV(m, "keydown", function(o) {
                        c.hide_manage = false;
                        if (o.keyAscii == 13 && !o.shift) {
                            if (c.shown()) {
                                return false
                            }
                        }
                        if (o.keyAscii == 27) {
                            if (c.shown()) {
                                return false
                            }
                        }
                    });
                    $swap(n, this._crateLabelButton(m))
                },
                showPremiumPromotion: function() {
                    return j.show(_("Labels are a premium only feature"), _("Labels let you easily add context to your tasks. For example, you can label all call tasks with a @call label."))
                },
                _crateLabelButton: function(m) {
                    var n = h("cmp_label", 16, 16);
                    $addClass(n, "form_action_icon");
                    $AEV(n, "click", function() {
                        if (window.User.is_premium) {
                            l.placeCaretAtEnd(m);
                            c.forceShow(m, true)
                        } else {
                            i.showPremiumPromotion()
                        }
                        return false
                    });
                    return n
                }
            };
            window.Labels = i;
            b.exports = i
        }, {
            "../../models/.coffee.LabelsModel.js": 138,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78
        }
    ],
    45: [
        function(f, c, g) {
            var o, b, d, i, k, m, h, j, n, l, a;
            a = window.Signals;
            b = window.AmiMenu;
            d = f("../drag_and_drop/.coffee.DragAndDrop.js");
            o = f("../agenda/.coffee.AgendaUtils.js");
            m = f("../labels/Labels.js");
            k = f("../generic_left_list/.coffee.GenericLeftList.js");
            h = f("../../models/.coffee.LabelsModel.js");
            l = f("../../models/.coffee.QueriesComplex.js");
            j = f("../../menus/.coffee.MenuLabelColors.js");
            n = f("../../menus/MenuLabelList.js");
            i = k.extend({
                initWithData: function() {
                    var p;
                    p = {
                        event_name: "Labels",
                        data_model: h,
                        default_color: 7,
                        icon: "icon-label",
                        empty_text: _("You have no labels"),
                        add_text: _("Add Label"),
                        placeholder: _("Label name"),
                        list_holder: "labels_list_man",
                        DragAndDrop: d,
                        with_color: true,
                        with_arrows: false,
                        with_indent: false,
                        with_ordering: true,
                        fn_create_counter: this.createCounter,
                        fn_get_all: function() {
                            return h.getAll(true)
                        },
                        fn_on_click: (function(q) {
                            return function(r) {
                                q.setCurrent(r);
                                return window.scroll(0, 0)
                            }
                        })(this),
                        fn_show_items: function(r) {
                            var q;
                            q = h.getById(r[0]);
                            if (q) {
                                return o.query("@" + q.name)
                            }
                        },
                        fn_on_delete: (function(q) {
                            return function(r) {
                                $remove(r);
                                return q.deselectCurrent()
                            }
                        })(this),
                        fn_editing_done: (function(q) {
                            return function() {
                                if (q.current_item) {
                                    return q.setCurrent(q.current_item)
                                } else {
                                    return a.sendSignal("refresh_interface")
                                }
                            }
                        })(this),
                        fn_parse_form: (function(q) {
                            return function(u, w) {
                                var t, s, v, r;
                                s = h.get(w.name);
                                t = (v = q.current_item) != null ? (r = v.json) != null ? r.id : void 0 : void 0;
                                if (s && s.id !== t) {
                                    alert(_("You already have a label with that name."), function() {
                                        return $child(u, "textarea").focus()
                                    });
                                    w.name = "";
                                    w.is_changed = false
                                }
                                return w
                            }
                        })(this),
                        fn_get_selected: function() {
                            var r, t, q, s;
                            q = {};
                            s = m.getLabels(o.getQuery()), r = s[0], t = s[1];
                            if (t.length === 1) {
                                q[t[0]] = true
                            }
                            return q
                        }
                    };
                    $bindMethods(this);
                    a.connect("labels_updated", this.reRender);
                    p.fn_create_color = this.createColor;
                    p.menu_colors = j.init(m);
                    p.menu = n.init(this);
                    return this.parent(p)
                },
                createCounter: function(q) {
                    var r, p;
                    r = q.count;
                    if (r === void 0) {
                        q.count = l.getByLabels([q.id], true)
                    }
                    if (r === 0 || !r) {
                        r = ""
                    }
                    p = DIV({
                        c: "counter_count",
                        id: "label_count_" + q.id
                    }, "" + r);
                    return p
                },
                createColor: function(p) {
                    return this.createColorDiv("label_color_" + p.id, p.color, m.colors)
                },
                getCurrentSelect: (function(p) {
                    return function() {
                        return $gc(p.current_list, "li", "current")
                    }
                })(this)
            });
            window.LabelList = c.exports = new i()
        }, {
            "../../menus/.coffee.MenuLabelColors.js": 110,
            "../../menus/MenuLabelList.js": 119,
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.QueriesComplex.js": 144,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../generic_left_list/.coffee.GenericLeftList.js": 28,
            "../labels/Labels.js": 44
        }
    ],
    46: [
        function(d, b, f) {
            var c, h, a, j, i, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            a = window.Signals;
            c = window.AmiComplete;
            i = window.imageSprite;
            j = d("../themes/.coffee.Themes.js");
            h = (function() {
                k.prototype.offset_top = 50;

                function k() {
                    this.resizeLeftMenu = g(this.resizeLeftMenu, this);
                    this.resizeOverlay = g(this.resizeOverlay, this);
                    this.toggle = g(this.toggle, this);
                    this.hide = g(this.hide, this);
                    this.show = g(this.show, this);
                    this.toggleIcon = g(this.toggleIcon, this);
                    this.render = g(this.render, this);
                    $AEV(window, "resize", this.resizeLeftMenu);
                    a.connect("theme_changed", (function(l) {
                        return function() {
                            return j.replaceImageClass(l.icon_menu_toggle, j.getMenuToggleIcon())
                        }
                    })(this))
                }
                k.prototype.render = function() {
                    var l;
                    l = A({
                        href: "#",
                        id: "close_menu"
                    }, i("cmp_menu_close", 14, 14), _("Close menu"));
                    $AEV(l, "click", this.hide);
                    $replace($("close_menu_holder"), l);
                    return $ATT($("top_bar_inner"), this.toggleIcon())
                };
                k.prototype.toggleIcon = function() {
                    var l;
                    l = A({
                        href: "#",
                        c: "left_menu_toggle"
                    }, this.icon_menu_toggle = i(j.getMenuToggleIcon(), 20, 15));
                    $AEV(l, "click", this.toggle);
                    return l
                };
                k.prototype.isShown = function() {
                    return $hasClass($body(), "left_menu_show")
                };
                k.prototype.show = function() {
                    var l;
                    l = $body();
                    $addClass(l, "left_menu_show");
                    this.resizeLeftMenu();
                    $add(l, this.overlay = DIV({
                        c: "left_menu_overlay"
                    }));
                    $AEV(this.overlay, "click", this.hide);
                    $AEV(window, "resize", this.resizeOverlay);
                    this.resizeOverlay();
                    return false
                };
                k.prototype.hide = function() {
                    $removeClass($body(), "left_menu_show");
                    $remove($all("div", "left_menu_overlay"));
                    $REV(window, "resize", this.resizeOverlay);
                    return false
                };
                k.prototype.toggle = function() {
                    c.hide();
                    if ($hasClass($body(), "mini_version")) {
                        if (this.isShown()) {
                            this.hide()
                        } else {
                            this.show()
                        }
                    }
                    return false
                };
                k.prototype.resizeOverlay = function() {
                    var m, l, n;
                    l = this.overlay;
                    m = $("left_menu");
                    n = $winSize().w - m.offsetWidth;
                    $setWidth(l, n);
                    $setHeight(l, m.offsetHeight);
                    return $setLeft(l, m.offsetWidth)
                };
                k.prototype.resizeLeftMenu = function() {
                    var l;
                    l = $("left_menu");
                    if ($hasClass($body(), "mini_version")) {
                        l.style.height = ($winSize().h) + "px"
                    } else {
                        l.style.height = ($winSize().h - this.offset_top) + "px"
                    }
                    return this.resizeOverlay()
                };
                return k
            })();
            b.exports = new h()
        }, {
            "../themes/.coffee.Themes.js": 101
        }
    ],
    47: [
        function(f, d, g) {
            var b, h, c, l, j, k, m, a, i = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            b = f("../../models/.coffee.Storage.js").$storage;
            a = window.Signals;
            m = f("../project_list/.coffee.ProjectList.js");
            l = f("../labels/Labels.js");
            j = f("../labels_list/.coffee.LabelsList.js");
            h = f("../filters_list/.coffee.FiltersList.js");
            k = f("./.coffee.LeftMenu.js");
            c = (function() {
                function n() {
                    this.setCurrentTab = i(this.setCurrentTab, this);
                    this.getCurrentTab = i(this.getCurrentTab, this);
                    this.genericCancel = i(this.genericCancel, this);
                    this.showFilters = i(this.showFilters, this);
                    this.showLabels = i(this.showLabels, this);
                    this.showProjects = i(this.showProjects, this);
                    this.render = i(this.render, this);
                    this.showDefault = i(this.showDefault, this);
                    a.connect("update_project_count item_updated labels_updated", (function(o) {
                        return function() {
                            if (o.getCurrentTab() === "labels") {
                                return j.reRender()
                            }
                        }
                    })(this));
                    a.connect("select_labels_tab", this.showLabels);
                    a.connect("select_projects_tab", this.showProjects);
                    a.connect("select_filters_tab", this.showFilters)
                }
                n.prototype.showDefault = function() {
                    var o;
                    o = this.getCurrentTab();
                    if (o === "labels") {
                        return this.showLabels()
                    } else {
                        if (o === "filters") {
                            return this.showFilters()
                        } else {
                            return this.showProjects()
                        }
                    }
                };
                n.prototype.render = function() {
                    var q, r, p, o;
                    o = DIV({
                        id: "left_menu_tabs"
                    }, TABLE(TBODY(TR(p = TD({
                        c: "control projects",
                        width: "33%"
                    }, _("Projects")), r = TD({
                        c: "control labels",
                        width: "33%"
                    }, _("Labels")), q = TD({
                        c: "control filters",
                        width: "33%"
                    }, _("Filters"))))));
                    $AEV(p, "click", this.showProjects);
                    $AEV(r, "click", this.showLabels);
                    $AEV(q, "click", this.showFilters);
                    return o
                };
                n.prototype.showProjects = function() {
                    this.genericCancel();
                    return this.genericShow("project_list_holder", "show_projects", "projects", m.reRender)
                };
                n.prototype.showLabels = function() {
                    if (!window.User.is_premium) {
                        l.showPremiumPromotion();
                        return false
                    }
                    this.genericCancel();
                    return this.genericShow("labels_list_holder", "show_labels", "labels", j.reRender)
                };
                n.prototype.showFilters = function() {
                    this.genericCancel();
                    return this.genericShow("filters_list_holder", "show_filters", "filters", h.reRender)
                };
                n.prototype.genericCancel = function() {
                    if (m.current_cancel) {
                        m.current_cancel.onclick()
                    }
                    if (h.current_cancel) {
                        h.current_cancel.onclick()
                    }
                    if (j.current_cancel) {
                        return j.current_cancel.onclick()
                    }
                };
                n.prototype.genericShow = function(o, p, r, q) {
                    m.current_selected = null;
                    j.current_selected = null;
                    $hide($("labels_list_holder"), $("filters_list_holder"), $("project_list_holder"));
                    $show($(o));
                    $("left_menu_tabs").className = "";
                    $addClass($("left_menu_tabs"), p);
                    this.setCurrentTab(r);
                    q();
                    k.resizeLeftMenu();
                    return false
                };
                n.prototype.getCurrentTab = function() {
                    return b("current_tab").get() || "projects"
                };
                n.prototype.setCurrentTab = function(o) {
                    return b("current_tab").set(o)
                };
                return n
            })();
            d.exports = new c()
        }, {
            "../../models/.coffee.Storage.js": 150,
            "../filters_list/.coffee.FiltersList.js": 26,
            "../labels/Labels.js": 44,
            "../labels_list/.coffee.LabelsList.js": 45,
            "../project_list/.coffee.ProjectList.js": 75,
            "./.coffee.LeftMenu.js": 46
        }
    ],
    48: [
        function(c, b, f) {
            var l, i, k, m, d, h, a, j, g = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            a = window.Signals;
            j = window.imageSprite;
            m = c("../project_list/.coffee.ProjectListUtils.js");
            l = c("../agenda/.coffee.AgendaUtils.js");
            d = c("../../models/.coffee.ProjectsModel.js");
            k = c("../../models/.coffee.ItemsModel.js");
            h = c("../../models/.coffee.QueriesItems.js");
            i = (function() {
                n.prototype.filter_elms = {};
                n.prototype.counter_elms = {};

                function n() {
                    this.execTeamInboxLogic = g(this.execTeamInboxLogic, this);
                    this.updateCounters = g(this.updateCounters, this);
                    this.setAsCurrent = g(this.setAsCurrent, this);
                    this.render = g(this.render, this);
                    this.query7days = g(this.query7days, this);
                    this.queryToday = g(this.queryToday, this);
                    this.getTeamInbox = g(this.getTeamInbox, this);
                    this.getInbox = g(this.getInbox, this);
                    a.connect("countsUpdated", this.updateCounters);
                    a.connect("user_updated", (function(o) {
                        return function() {
                            return o.execTeamInboxLogic()
                        }
                    })(this))
                }
                n.prototype.getInbox = function() {
                    return this.filter_elms.inbox
                };
                n.prototype.getTeamInbox = function() {
                    var o, p;
                    o = this.filter_elms.team_inbox;
                    if (!o) {
                        return null
                    }
                    p = d.get(window.User.team_inbox);
                    o.json = p;
                    return o
                };
                n.prototype.queryToday = function() {
                    l.query("overdue, today");
                    this.setAsCurrent("today");
                    window.scroll(0, 0);
                    return false
                };
                n.prototype.query7days = function() {
                    l.query("overdue, 7 days");
                    this.setAsCurrent("7_days");
                    window.scroll(0, 0);
                    return false
                };
                n.prototype.render = function() {
                    var s, t, q, r, p, o;
                    s = (function(u) {
                        return function(y, z, x) {
                            var w, v;
                            w = u.counter_elms[x] = SPAN({
                                c: "counter"
                            }, "");
                            v = LI({
                                c: "filter"
                            }, j(z, 20, 18), y, w);
                            u.filter_elms[x] = v;
                            return v
                        }
                    })(this);
                    if (window.User.team_inbox) {
                        r = _("My Inbox")
                    } else {
                        r = _("Inbox")
                    }
                    t = s(r, "cmp_filter_inbox", "inbox");
                    t.id = "filter_inbox";
                    t.json = d.getInbox();
                    $AEV(t, "click", function() {
                        m.setCurrentById(window.User.inbox_project);
                        return false
                    });
                    p = s(_("Team Inbox"), "cmp_filter_team_inbox", "team_inbox");
                    p.id = "filter_team_inbox";
                    $AEV(p, "click", function() {
                        m.setCurrentById(window.User.team_inbox);
                        return false
                    });
                    this.execTeamInboxLogic();
                    o = s(_("Today"), "cmp_filter_today", "today");
                    $AEV(o, "click", this.queryToday);
                    q = s(_("Next 7 days"), "cmp_filter_days", "7_days");
                    $AEV(q, "click", this.query7days);
                    return UL({
                        id: "top_filters"
                    }, t, p, o, q)
                };
                n.prototype.setAsCurrent = function(o) {
                    m.deselectCurrent();
                    return $addClass(this.filter_elms[o], "current")
                };
                n.prototype.updateCounters = function(t) {
                    var u, r, s, p, o, q;
                    o = function(w, v) {
                        if (v === 0) {
                            return $setHTML(w, "")
                        } else {
                            return $setHTML(w, v)
                        }
                    };
                    r = k.getAllOwn();
                    q = window.User;
                    u = k.getItemCount(q.inbox_project);
                    o(this.counter_elms.inbox, u);
                    if (q.team_inbox) {
                        p = k.getItemCount(q.team_inbox);
                        o(this.counter_elms.team_inbox, p)
                    }
                    o(this.counter_elms.today, t.today + t.overdue);
                    s = h.getNextXdays(true, 6, r).length;
                    s += h.getOverdue(r).length;
                    o(this.counter_elms["7_days"], s);
                    if (t.overdue > 0) {
                        return $addClass(this.counter_elms.today, "overdue_color")
                    } else {
                        return $removeClass(this.counter_elms.today, "overdue_color")
                    }
                };
                n.prototype.execTeamInboxLogic = function() {
                    var o;
                    o = this.filter_elms.team_inbox;
                    if (window.User.team_inbox) {
                        $addClass($body(), "has_team_inbox");
                        return $show(o)
                    } else {
                        $removeClass($body(), "has_team_inbox");
                        return $hide(o)
                    }
                };
                return n
            })();
            b.exports = new i()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.QueriesItems.js": 145,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    49: [
        function(b, c, a) {
            var d = {
                show: function() {
                    var g = this.loading = $("loading");
                    var f = $winSize();
                    $setHeight(g, f.h)
                },
                hide: function() {
                    if (this.loading) {
                        $remove(this.loading);
                        this.loading = null
                    }
                }
            };
            window.Loading = d;
            c.exports = d
        }, {}
    ],
    50: [
        function(d, c, f) {
            var j, b, g, i, a, h = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                }, k = [].indexOf || function(o) {
                    for (var n = 0, m = this.length; n < m; n++) {
                        if (n in this && this[n] === o) {
                            return n
                        }
                    }
                    return -1
                };
            a = window.Signals;
            j = window.$static_path;
            b = d("../../models/.coffee.Storage.js").$storage;
            i = d("../notifications/.coffee.Notifications.js");
            g = (function() {
                l.prototype.connected = false;

                function l() {
                    this.connect = h(this.connect, this);
                    if (window.Notification) {
                        this.connect()
                    }
                }
                l.prototype.connect = function() {
                    if (this.connected) {
                        return
                    }
                    a.connect("notify", (function(m) {
                        return function(q) {
                            var n, r, w, s, u, t, x, o, p;
                            if (window.MacBridge && window.MacBridge.bridge) {
                                null
                            } else {
                                if (b("LocalNotifications").get() === "denied") {
                                    return
                                }
                            }
                            try {
                                p = i.renderNotification(q, 0, true), o = p[0], t = p[1], r = p[2], w = p[3], n = p[4]
                            } catch (v) {
                                s = v;
                                $log(s);
                                return
                            }
                            if (t) {
                                x = $setHTML(SPAN(), t);
                                x = x.textContent || x.innerText;
                                u = o && o.avatar_big || null;
                                if (r) {
                                    r = $trim(r, 200)
                                }
                                if (window.MacBridge && window.MacBridge.bridge) {
                                    return a.sendSignal("mac_notify", x, r, n)
                                } else {
                                    return m.notify(x, r, w, o.avatar_big, q.notification_key)
                                }
                            }
                        }
                    })(this));
                    return this.connected = true
                };
                l.prototype.notify = function(r, m, p, q, o) {
                    var n;
                    if (p == null) {
                        p = null
                    }
                    if (q == null) {
                        q = null
                    }
                    if (o == null) {
                        o = null
                    }
                    if (!q) {
                        q = "https://d3ptyyxy2at9ui.cloudfront.net/6ce261ea57f349ecda22ead2b73fc767.png"
                    }
                    n = function() {
                        var t, s;
                        s = {
                            icon: q
                        };
                        if (m) {
                            s.body = m
                        }
                        if (o) {
                            s.tag = o
                        }
                        t = new window.Notification(r, s);
                        t.onclick = function() {
                            window.focus();
                            if (p) {
                                return p()
                            }
                        };
                        return t
                    };
                    if (window.Notification.permission === "granted") {
                        return n()
                    } else {
                        if (window.Notification.permission !== "denied") {
                            return window.Notification.requestPermission(function(s) {
                                var t;
                                t = k.call(window.Notification, "permission") >= 0;
                                if (!t) {
                                    window.Notification.permission = s
                                }
                                if (s === "granted") {
                                    return n()
                                }
                            })
                        }
                    }
                };
                return l
            })();
            c.exports = new g()
        }, {
            "../../models/.coffee.Storage.js": 150,
            "../notifications/.coffee.Notifications.js": 62
        }
    ],
    51: [
        function(f, c, h) {
            var b, g, k, d, l, j, a, i = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            a = window.Signals;
            b = f("../../models/.coffee.Storage.js").$storage;
            l = f("../notes/.coffee.NotesUtils.js");
            k = f("../../models/.coffee.ItemsModel.js");
            j = f("../../models/.coffee.Reminders.js").RemindersModel;
            d = f("../local_notifications/.coffee.LocalNotifications.js");
            g = (function() {
                m.prototype.connected = false;

                function m() {
                    this.loopReminders = i(this.loopReminders, this);
                    this.connect = i(this.connect, this);
                    if (window.Notification) {
                        this.connect()
                    }
                }
                m.prototype.connect = function() {
                    if (this.connected) {
                        return
                    }
                    a.connect("remind", function(o) {
                        var n;
                        n = k.getById(o.item_id);
                        if (!n) {
                            return
                        }
                        if (n.is_deleted || n.checked || n.in_history) {
                            return
                        }
                        if (window.MacBridge && window.MacBridge.bridge) {
                            return a.sendSignal("mac_remind", n)
                        } else {
                            if (window.Notification) {
                                if (b("LocalReminders").get() === "denied") {
                                    return
                                }
                                return d.notify(n.content, _("Todoist Reminder"), function() {
                                    return l.show(n.id)
                                }, "reminder_" + n.id)
                            }
                        }
                    });
                    setInterval(this.loopReminders, 10000);
                    return this.connected = true
                };
                m.prototype.loopReminders = function() {
                    var r, u, v, w, s, n, o, p, t, q;
                    w = (new Date()).getTime();
                    r = false;
                    q = j.getAllReminders();
                    for (p = 0, t = q.length; p < t; p++) {
                        s = q[p];
                        o = s.time;
                        if (s.type === "relative") {
                            n = k.getById(s.item_id);
                            if (n && n.time) {
                                o = n.time - (s.minute_offset * 60 * 1000)
                            }
                        }
                        if (!o || s.lprocessed || s.is_deleted) {
                            continue
                        }
                        v = s.notify_uid;
                        if (v && v !== window.User.id) {
                            continue
                        }
                        u = Math.abs((w - o) / 1000);
                        if (u >= 0 && u < 120) {
                            s.lprocessed = true;
                            a.sendSignal("remind", s);
                            r = true
                        }
                    }
                    if (j.loaded && r) {
                        return j.syncCachedData()
                    }
                };
                return m
            })();
            c.exports = new g()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.Reminders.js": 147,
            "../../models/.coffee.Storage.js": 150,
            "../local_notifications/.coffee.LocalNotifications.js": 50,
            "../notes/.coffee.NotesUtils.js": 59
        }
    ],
    52: [
        function(f, c, i) {
            var a = window.Signals;
            var p = f("../../components/project_list/.coffee.ProjectListUtils.js");
            var n = f("../../components/project_editor/.coffee.ProjectExtraActions.js");
            var b = f("../../components/completed_history/.coffee.CompletedHistory.js");
            var l = f("../../components/completed_history/.coffee.CompletedQuickVisualize.js");
            var k = f("../../components/quick_add/.coffee.QuickAdd.js");
            var o = f("../../components/agenda/.coffee.AgendaUtils.js");
            var h = f("../../components/notes/Notes.js");
            var g = f("../../models/.coffee.TemporaryIds.js");
            var d = f("../../models/.coffee.SyncEngine.js");
            var j = f("../opener/WindowOpener.js");
            var m = {
                init: function() {
                    setInterval(this.locationPolling, 500);
                    g.listenAll(function(r, q) {
                        var s = m;
                        if (s.cur_location.indexOf(r) != -1) {
                            s.updateLocation(s.cur_location.replace(r, "" + q))
                        }
                    });
                    a.connect("change_location", function(q) {
                        m.updateLocation(q)
                    });
                    g.listenAll(function(r, q) {
                        var s = m.getHash();
                        if (s.indexOf(r) != -1) {
                            s = s.replace(r, q);
                            m.updateLocation(s)
                        }
                    })
                },
                getHash: function() {
                    return $urldecode(window.location.hash.replace("#", ""))
                },
                getCurrentLocation: function() {
                    return m.cur_location
                },
                setHash: function(q) {
                    window.location.hash = $urlencode(q.replace("#", ""))
                },
                updateLocation: function(r) {
                    var q = m;
                    if (r.indexOf("#") == -1) {
                        r = "#" + r
                    }
                    if (q.cur_location != r) {
                        m.setHash(r);
                        q.cur_location = r
                    }
                },
                refreshView: function() {
                    var q = (location.href.split("#")[1] || "");
                    m.updateView(q);
                    return false
                },
                updateView: function(u) {
                    if (window.isEditingOn()) {
                        setTimeout($p(m.updateView, u), 400);
                        return
                    }
                    u = u.replace("#", "");
                    u = u;
                    if (u.indexOf("project/") === 0) {
                        var v = parseInt(u.split("/")[1]);
                        if (v) {
                            p.setCurrentById(v, false)
                        }
                    } else {
                        if (u.indexOf("task/") === 0) {
                            var s = u.split("/");
                            var t = parseInt(s[1]);
                            var q;
                            if (s[2]) {
                                q = parseInt(s[2])
                            }
                            if (t) {
                                o.query("today");
                                h.loadAndShow(t, null, q)
                            }
                        } else {
                            if (u.indexOf("email_tasks/") === 0) {
                                var v = parseInt(u.split("/")[1]);
                                if (v) {
                                    p.setCurrentById(v, false);
                                    n.showEmails(v)
                                }
                            } else {
                                if (u.indexOf("agenda/") === 0) {
                                    var r = u.split("/")[1];
                                    if (r) {
                                        o.query(r, false)
                                    }
                                } else {
                                    if (u.indexOf("completed_visual") != -1) {
                                        b.showHistory(true)
                                    } else {
                                        if (u.indexOf("karma_info") != -1) {
                                            l.show($("completed_items"))
                                        } else {
                                            if (u.indexOf("completed") != -1) {
                                                b.showHistory()
                                            } else {
                                                if (u.indexOf("quickAdd") != -1) {
                                                    k.toggle();
                                                    u = m.cur_location;
                                                    m.setHash(u)
                                                } else {
                                                    if (u.indexOf("updateCount") != -1) {
                                                        u = m.cur_location;
                                                        if (u.indexOf("#updateCount") != -1) {
                                                            m.setHash("#start")
                                                        } else {
                                                            m.setHash(u)
                                                        }
                                                    } else {
                                                        if (u.indexOf("sync") != -1) {
                                                            d.sync(null, true);
                                                            u = m.cur_location;
                                                            m.setHash(u)
                                                        } else {
                                                            if (u.indexOf("openOutlook") != -1 || u.indexOf("openThunderbird") != -1) {
                                                                null
                                                            } else {
                                                                if (u == "upgrade_to_premium") {
                                                                    u = "windowPref/premium"
                                                                }
                                                                if (u == "invite_friends") {
                                                                    u = "windowPref/invite_friends"
                                                                }
                                                                if (u.indexOf("windowPref/") === 0) {
                                                                    j.showPrefs($last(u.split("/")))
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return "#" + u
                },
                locationPolling: function() {
                    var q = m;
                    var r = q.getHash();
                    if (q.cur_location && q.cur_location.replace("#", "") != r.replace("#", "")) {
                        m.setHash(r);
                        r = q.updateView(r);
                        q.cur_location = r
                    }
                }
            };
            window.LocationManager = m;
            c.exports = m
        }, {
            "../../components/agenda/.coffee.AgendaUtils.js": 6,
            "../../components/completed_history/.coffee.CompletedHistory.js": 16,
            "../../components/completed_history/.coffee.CompletedQuickVisualize.js": 17,
            "../../components/notes/Notes.js": 61,
            "../../components/project_editor/.coffee.ProjectExtraActions.js": 71,
            "../../components/project_list/.coffee.ProjectListUtils.js": 76,
            "../../components/quick_add/.coffee.QuickAdd.js": 79,
            "../../models/.coffee.SyncEngine.js": 152,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../opener/WindowOpener.js": 64
        }
    ],
    53: [
        function(d, g, c) {
            var i, b, f, a, h;
            i = window.AmiTooltip;
            h = window.imageSprite;
            b = d("../items_utils/ItemDueDates.js");
            a = d("../../components/smart_scheduler/.coffee.SmartScheduler.js");
            f = d("../../components/smart_scheduler/.coffee.QuickDayShow.js");
            c.init = function() {
                var j;
                if (window.MiniCal) {
                    j = window.MiniCal;
                    j.annotateInner = function(k) {
                        var m, l, n;
                        n = DIV({
                            c: "minical_scheduler"
                        });
                        l = {
                            no_more: true,
                            no_help_text: true,
                            with_month: true,
                            with_someday: true
                        };
                        a.annotate(n, null, function(o) {
                            i.hide();
                            return j.onSelect(o)
                        }, l);
                        $ATT(k, n);
                        if (j.show_recurring_help) {
                            m = A({
                                href: "#"
                            }, _("Recurring dates and more..."));
                            $AEV(m, "click", b.showDateInsert);
                            $add(k, DIV({
                                c: "dp_no_due dp_help"
                            }, m))
                        }
                        return $add(k, f.renderHolder())
                    };
                    return j.annotateDate = function(l, k) {
                        return $AEV(l, "mouseover", function() {
                            var m;
                            m = f.show(k);
                            return $replace($("quick_day_show"), m)
                        })
                    }
                }
            }
        }, {
            "../../components/smart_scheduler/.coffee.QuickDayShow.js": 94,
            "../../components/smart_scheduler/.coffee.SmartScheduler.js": 95,
            "../items_utils/ItemDueDates.js": 38
        }
    ],
    54: [
        function(c, f, b) {
            function g() {
                if (window.User && window.User.karma > 550) {
                    return false
                }
                if (location.hostname.indexOf("mac_store") === 0) {
                    return true
                }
                return false
            }

            function d() {
                return location.hostname.indexOf("mac") === 0
            }

            function a() {
                return window.LANG == "ja" || window.LANG == "ko" || window.LANG.indexOf("zh") === 0
            }
            f.exports = {
                isMacStore: g,
                isMacApp: d,
                isAsianLang: a
            }
        }, {}
    ],
    55: [
        function(d, c, g) {
            var j = {};

            function a(l, m) {
                l(m.shift());
                if (m.length > 0) {
                    window.setTimeout($partial(a, l, m), 5)
                }
            }

            function i(l, m) {
                if ($isIe() || $isSafari(true)) {
                    $AEV(l, "keydown", m)
                } else {
                    $AEV(l, "keypress", m)
                }
            }

            function f(o, l, m) {
                var n = j[o];
                if (n) {
                    clearTimeout(n)
                }
                j[o] = setTimeout(m, l)
            }

            function b(n, l) {
                try {
                    n.postMessage(l, "*")
                } catch (m) {}
            }

            function h(l) {
                return l.indexOf("@") != -1 && l.indexOf(".") != -1
            }

            function k() {
                function m(o) {
                    return l((Math.random() * (1 << (o << 2))) ^ Date.now()).slice(-o)
                }

                function l(o) {
                    return (o | 0).toString(16)
                }
                return [m(4) + m(4), m(4), "4" + m(3), l(8 | (Math.random() * 4)) + m(3), Date.now().toString(16).slice(-10) + m(2)].join("-")
            }
            c.exports = {
                forceLiveRendering: a,
                attachKeyDown: i,
                delayAjaxUpdate: f,
                checkEmail: h,
                postMessageToWindow: b,
                UUID: k
            }
        }, {}
    ],
    56: [
        function(c, b, d) {
            var m, i, k, a, g, l, f, j, h = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            g = window.GB_showImage;
            k = window.GB_getLast;
            a = window.GB_hide;
            i = window.GB_CURRENT;
            f = window.PlayManager;
            j = window.imageSprite;
            m = c("../formatter/Formatter.js");
            l = (function() {
                function n() {
                    this.audioAttachment = h(this.audioAttachment, this);
                    this.iconAttachment = h(this.iconAttachment, this);
                    this.render = h(this.render, this)
                }
                n.prototype.canPlayAudio = function(o) {
                    var p;
                    p = document.createElement("audio");
                    if (p.canPlayType && p.canPlayType(o).replace(/no/, "")) {
                        return true
                    } else {
                        return false
                    }
                };
                n.prototype.render = function(r) {
                    var v, o, t, q, w, y, x, s, u, p;
                    v = r.file_attachment;
                    if (v && !r.is_buffer_obj) {
                        t = v.file_underlying_type || v.file_type || "";
                        o = v.file_name.toLowerCase();
                        if (v.file_url && t.indexOf("image/") === 0 && (v.tn_s || v.tn_m || v.tn_l)) {
                            if (v.tn_s) {
                                u = v.tn_s
                            } else {
                                if (v.tn_m) {
                                    u = v.tn_m
                                } else {
                                    u = v.tn_l
                                }
                            }
                            p = 96;
                            x = this.scaleSize(96, 96, u[1] || p, u[2] || p);
                            y = A({
                                href: v.file_url,
                                target: "_blank",
                                c: "file_attachment"
                            }, IMG({
                                src: u[0],
                                width: x[0],
                                height: x[1],
                                c: "preview"
                            }));
                            $AEV(y, "click", $p(this.showImage, y.href, y.href, y));
                            return y
                        } else {
                            if (v.file_url && t.indexOf("audio/") !== -1 && this.canPlayAudio(t)) {
                                return this.audioAttachment(v)
                            } else {
                                if (t.indexOf("text/") === 0) {
                                    return this.iconAttachment(v, "ft_text")
                                } else {
                                    if (t.indexOf("pdf") !== -1) {
                                        return this.iconAttachment(v, "ft_pdf")
                                    } else {
                                        if (o.indexOf(".xl") !== -1 || t.indexOf("spreadsheet") !== -1) {
                                            return this.iconAttachment(v, "ft_excel")
                                        } else {
                                            if (o.indexOf(".doc") !== -1 || t.indexOf("document") !== -1) {
                                                return this.iconAttachment(v, "ft_word")
                                            } else {
                                                if (o.indexOf(".pp") !== -1) {
                                                    return this.iconAttachment(v, "ft_pp")
                                                } else {
                                                    if (o.indexOf(".zip") !== -1) {
                                                        return this.iconAttachment(v, "ft_zip")
                                                    } else {
                                                        if (t.indexOf("td/hyperlink") === 0) {
                                                            return this.iconAttachment(v, "ft_link")
                                                        } else {
                                                            if (t.indexOf("td/") === 0) {
                                                                return this.iconAttachment(v, "ft_email")
                                                            } else {
                                                                return this.iconAttachment(v, "ft_generic")
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    w = r.link_data;
                    if (w) {
                        w = $values(w)[0];
                        if (w) {
                            s = null;
                            q = null;
                            if (w.thumbnail_url) {
                                x = this.scaleSize(96, 96, w.thumbnail_width || 96, w.thumbnail_height || 96);
                                q = IMG({
                                    src: w.thumbnail_url,
                                    width: x[0],
                                    height: x[1]
                                });
                                if (w.title) {
                                    s = SPAN({
                                        c: "text"
                                    }, $trim(w.title, 50))
                                }
                            }
                            if (q && s) {
                                return DIV({
                                    c: "file_attachment"
                                }, A({
                                    href: w.matched_url,
                                    target: "_blank"
                                }, q, s))
                            }
                        }
                    }
                };
                n.prototype.iconAttachment = function(s, v) {
                    var r, t, q, p, w, o, u;
                    if (v === "ft_email") {
                        r = DIV({
                            c: "file_attachment link_attachment"
                        });
                        u = m.format(s.file_url);
                        $setHTML(r, u);
                        return r
                    }
                    o = null;
                    if (s.upload_state === "pending") {
                        o = _("Pending")
                    }
                    if (s.upload_state === "canceled") {
                        o = _("Canceled")
                    }
                    if (o) {
                        o = SPAN({
                            c: "status"
                        }, o)
                    }
                    if (v === "ft_link") {
                        t = "file_attachment link_attachment";
                        q = j("cmp_attachment icon", 16, 16)
                    } else {
                        t = "file_attachment";
                        q = j("cmp_" + v + " icon", 22, 30)
                    }
                    w = DIV({
                        c: t
                    }, p = A({
                        href: s.file_url,
                        target: "_blank"
                    }, q, SPAN({
                        c: "text"
                    }, $trim(s.file_name, 50)), o));
                    if (o) {
                        $addClass(p, "no_action");
                        p.onclick = function() {
                            return false
                        }
                    }
                    return w
                };
                n.prototype.showImage = function(t, p, v, s) {
                    var u, q, r, o;
                    if (p.indexOf("dropbox.com") !== -1) {
                        return true
                    }
                    if (window.FLUID_MINI) {
                        return true
                    }
                    $preventDefault(s);
                    g("", t);
                    k().setZindex(10000000);
                    u = $last(i);
                    o = p;
                    if (o.length > 40) {
                        o = o.substring(0, 40) + "..."
                    }
                    r = DIV({
                        c: "orginal_link"
                    }, A({
                        href: p,
                        target: "_blank"
                    }, _("View full size in another window")));
                    $addAfter(r, u.iframe);
                    q = j("cmp_small_close", 16, 16);
                    $AEV(q, "click", a);
                    $addBefore(q, u.iframe);
                    return false
                };
                n.prototype.audioAttachment = function(r) {
                    var v, q, p, u, s, o, t;
                    v = document.createElement("audio");
                    v.controls = false;
                    v.src = r.file_url;
                    v.volume = 1;
                    $AEV(v, "error", function() {
                        return v.error_loading = true
                    });
                    q = A({
                        href: "#"
                    }, p = j("cmp_play", 16, 16));
                    u = A({
                        href: r.file_url,
                        target: "_blank",
                        c: "attachment_link"
                    }, j("cmp_attachment", 16, 16));
                    o = DIV({
                        c: "audio_player"
                    }, v, q, t = SPAN({
                        c: "timer"
                    }, "00:00"), u);
                    s = v.duration || r.file_duration;
                    if (s) {
                        f.timerFormat(t, s)
                    }
                    f.attach(q, v, t, function(w) {
                        if (w === "play") {
                            return $setClass(p, "cmp_stop")
                        } else {
                            if (w === "stop") {
                                return $setClass(p, "cmp_play")
                            }
                        }
                    });
                    return o
                };
                n.prototype.scaleSize = function(s, o, p, r) {
                    var q;
                    q = r / p;
                    if (p >= s && q <= 1) {
                        p = s;
                        r = p * q
                    } else {
                        if (r >= o) {
                            r = o;
                            p = r / q
                        }
                    }
                    return [p, r]
                };
                return n
            })();
            b.exports = new l()
        }, {
            "../formatter/Formatter.js": 27
        }
    ],
    57: [
        function(d, f, b) {
            var g, h, a, c = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            h = window.Signals;
            a = window.TooptipWin;
            g = (function() {
                function i() {
                    this.getValue = c(this.getValue, this);
                    this.reset = c(this.reset, this)
                }
                i.prototype.current_note = "";
                i.prototype.reset = function() {
                    return this.current_note = ""
                };
                i.prototype.getValue = function() {
                    return $strip(this.current_note)
                };
                i.prototype.showTooltip = function(l) {
                    var o, k, m, j, n;
                    k = DIV(j = TEXTAREA({
                        placeholder: _("Content")
                    }));
                    if (this.current_note) {
                        j.value = this.current_note
                    }
                    $AEV(j, "keyup", (function(p) {
                        return function() {
                            p.current_note = j.value;
                            if (p.current_note.length > 0) {
                                $addClass(l, "cmp_comment_red");
                                return $removeClass(l, "cmp_comment_on")
                            } else {
                                $removeClass(l, "cmp_comment_red");
                                return $addClass(l, "cmp_comment_on")
                            }
                        }
                    })(this));
                    o = $position(l);
                    m = {
                        fn_left_offset: function() {
                            return o.x - 270
                        },
                        fn_top_offset: function() {
                            return o.y + 25
                        },
                        fn_arrow_left: function() {
                            return o.x
                        },
                        fixed_pos: $hasClass(l, "fixed_pos"),
                        fn_on_hide: function() {
                            return h.sendSignal("focus_current_item_input")
                        }
                    };
                    n = a.show(_("Quick Comment"), k, 210, 300, m);
                    $addClass(n.g_window, "notes_add_tooltip");
                    j.focus();
                    return false
                };
                return i
            })();
            f.exports = new g()
        }, {}
    ],
    58: [
        function(d, h, b) {
            var g, a, f, i, c = function(j, k) {
                    return function() {
                        return j.apply(k, arguments)
                    }
                };
            i = window.Signals;
            g = window.ElementStore;
            f = d("../../models/.coffee.NotesModel.js");
            a = (function() {
                function j() {
                    this.fileStatusChange = c(this.fileStatusChange, this);
                    this.addNotes = c(this.addNotes, this);
                    this.getNoteUploads = c(this.getNoteUploads, this)
                }
                j.prototype.note_uploads = [];
                j.prototype.getNoteUploads = function() {
                    return this.note_uploads
                };
                j.prototype.addNotes = function(n, r, m, q) {
                    var p, o, l, k;
                    if (q.length === 0) {
                        return [f.addNote(n, r, m)]
                    } else {
                        o = function(w, u) {
                            var s, v, t;
                            s = {};
                            if (w.file_server_info) {
                                s.file_server_info = w.file_server_info;
                                v = false
                            } else {
                                s.file_server_info = {
                                    file_name: w.file.name,
                                    file_type: w.file.type,
                                    file_size: w.file.size,
                                    upload_state: "pending"
                                };
                                v = true
                            }
                            t = f.addNote(n, u, m, s);
                            t.is_buffer_obj = v;
                            g.set(t, "file", w);
                            return t
                        };
                        k = [];
                        while (true) {
                            p = q.shift();
                            if (!p) {
                                break
                            }
                            if (k.length === 0) {
                                r = r
                            } else {
                                r = ""
                            }
                            l = o(p, r);
                            this.note_uploads.push(l);
                            p.addCallback($p(this.fileStatusChange, l));
                            k.push(l)
                        }
                        return k
                    }
                };
                j.prototype.fileStatusChange = function(k, l) {
                    var m;
                    if (!l.file) {
                        this.note_uploads = $arrayRemove(this.note_uploads, k);
                        return g.remove(k, "file")
                    } else {
                        if (l.success) {
                            if (!l.instant) {
                                m = l.file_server_info;
                                m.upload_state = "completed";
                                f.updateNote(k.id, k.item_id, null, m)
                            }
                            i.sendSignal("refresh_interface");
                            this.note_uploads = $arrayRemove(this.note_uploads, k);
                            g.remove(k, "file");
                            if (k.is_buffer_obj) {
                                return delete k.is_buffer_obj
                            }
                        } else {
                            return i.sendSignal("upload_error", k, l)
                        }
                    }
                };
                return j
            })();
            h.exports = new a()
        }, {
            "../../models/.coffee.NotesModel.js": 141
        }
    ],
    59: [
        function(c, f, a) {
            var b, h, d, g;
            g = window.imageSprite;
            b = c("../../models/.coffee.Collaborators.js");
            d = c("../../models/.coffee.NotesModel.js");
            a.Deps = h = {
                Notes: null
            };
            a.show = function(j, k, i, l) {
                return h.Notes.loadAndShow(j, k, i, l)
            };
            a.annotate = function(i, j) {
                return h.Notes.annotate(i, j)
            };
            a.shortName = function(i) {
                var j;
                j = i.full_name.split(" ");
                if (j.length > 1) {
                    return j[0] + " " + j[1].substring(0, 1) + "."
                } else {
                    return j[0]
                }
            };
            a.renderIcon = function(p) {
                var i, l, o, j, k, m, n;
                i = "cmp_comment";
                l = "cmp_comment_on";
                j = g(i + " clickable", 15, 14);
                o = SPAN({
                    c: "clickable note_icon"
                }, j);
                $AEV(o, ["click", "touchend"], $p(h.Notes.loadAndShow, p.task_id || p.id, p.sync_id, null));
                $AEV(o, "mouseover", function() {
                    return $setClass(j, l + " clickable")
                });
                $AEV(o, "mouseout", function() {
                    return $setClass(j, i + " clickable")
                });
                if (p.notes) {
                    $map(p.notes, function(q) {
                        return d.model_data[q.id] = q
                    })
                }
                k = p.task_id || p.id;
                m = d.getNotes(k);
                if (p.notes) {
                    m = p.notes
                }
                if (m.length > 0) {
                    n = SPAN({
                        c: "clickable note_count"
                    });
                    if (m.length > 0) {
                        $setHTML(n, "" + m.length)
                    }
                    $add(o, n)
                } else {
                    $addClass(o, "note_icon_hidden")
                }
                return o
            }
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.NotesModel.js": 141
        }
    ],
    60: [
        function(c, a, f) {
            var b, d, j, g, i, h = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            g = c("../../models/.coffee.NotesModel.js");
            d = c("../../models/.coffee.Collaborators.js");
            b = c("../avatars/.coffee.Avatars.js");
            i = c("../notes/.coffee.NotesUtils.js");
            j = (function() {
                function k() {
                    this.renderMultiSelecter = h(this.renderMultiSelecter, this);
                    this.reRender = h(this.reRender, this);
                    this.setInitialSelected = h(this.setInitialSelected, this);
                    this.renderCheckmark = h(this.renderCheckmark, this);
                    this.getUidsToNotify = h(this.getUidsToNotify, this);
                    this.render = h(this.render, this);
                    this.reset = h(this.reset, this)
                }
                k.prototype.reset = function() {
                    this.task = null;
                    this.collaborators = null;
                    this.thread_uids = null;
                    this.input = null;
                    this.current_selected = null;
                    return this.holder = null
                };
                k.prototype.render = function(m, t) {
                    var w, y, v, o, s, u, z, r, q, p, x, l;
                    this.reset();
                    y = m.project_id;
                    u = window.User.id;
                    w = [];
                    for (q = 0, x = t.length; q < x; q++) {
                        r = t[q];
                        if (r.id !== u) {
                            w.push(r)
                        }
                    }
                    t = w;
                    s = g.getNotes(m.id);
                    z = {};
                    for (p = 0, l = s.length; p < l; p++) {
                        o = s[p];
                        if (o.posted_uid !== u) {
                            z[o.posted_uid] = o.posted_uid
                        }
                    }
                    this.task = m;
                    this.collaborators = t;
                    this.thread_uids = z;
                    this.holder = v = DIV({
                        c: "who_to_notify"
                    });
                    if (t.length === 1) {
                        $add(v, this.renderCheckmark(m, z, t))
                    } else {
                        if (t.length > 1) {
                            this.setInitialSelected(m, z, t, s);
                            $add(v, this.renderMultiSelecter())
                        }
                    }
                    return v
                };
                k.prototype.getUidsToNotify = function() {
                    var t, r, s, o, n, q, l, p, m;
                    s = window.User.id;
                    t = [];
                    if (this.input && this.input.checked) {
                        if (this.collaborators.length === 1) {
                            p = this.collaborators;
                            for (o = 0, q = p.length; o < q; o++) {
                                r = p[o];
                                if (r.id !== s) {
                                    t.push(r.id)
                                }
                            }
                        }
                    }
                    if (this.current_selected) {
                        m = $values(this.current_selected);
                        for (n = 0, l = m.length; n < l; n++) {
                            s = m[n];
                            t.push(s)
                        }
                    }
                    return t
                };
                k.prototype.renderCheckmark = function(m, v, r) {
                    var n, u, t, q, l, o, s, p;
                    l = "";
                    p = $values(r);
                    for (o = 0, s = p.length; o < s; o++) {
                        n = p[o];
                        if (n.id !== window.User.id) {
                            l = n.full_name.split(" ")[0];
                            break
                        }
                    }
                    t = LABEL({
                        "for": "notify_person"
                    }, _("Notify %s about my comment").replace("%s", l));
                    this.input = u = INPUT({
                        type: "checkbox",
                        value: "notify_person",
                        id: "notify_person"
                    });
                    q = false;
                    if ($keys(v).length === 1) {
                        q = true
                    }
                    if (m.assigned_by_uid !== window.User.id) {
                        q = true
                    }
                    if (m.responsible_uid && m.responsible_uid !== window.User.id) {
                        q = true
                    }
                    if (q) {
                        u.checked = true
                    }
                    return SPAN(u, t)
                };
                k.prototype.setInitialSelected = function(n, D, x, u) {
                    var v, z, y, w, l, s, r, q, p, C, m, t, o;
                    y = window.User.id;
                    this.current_selected = {};
                    r = {};
                    t = d.getAll(n.project_id);
                    for (q = 0, C = t.length; q < C; q++) {
                        s = t[q];
                        if (s.id !== y) {
                            r[s.id] = s
                        }
                    }
                    v = (function(E) {
                        return function(F) {
                            if (r[F]) {
                                return E.current_selected[F] = F
                            }
                        }
                    })(this);
                    if (u.length === 0) {
                        v(n.assigned_by_uid);
                        if (n.responsible_uid) {
                            return v(n.responsible_uid)
                        }
                    } else {
                        z = $last(u);
                        v(z.posted_uid);
                        l = z.uids_to_notify;
                        if (l) {
                            if ($isString(l)) {
                                l = $eval(l)
                            }
                            o = [];
                            for (p = 0, m = l.length; p < m; p++) {
                                w = l[p];
                                o.push(v(w))
                            }
                            return o
                        }
                    }
                };
                k.prototype.reRender = function() {
                    var l, m;
                    m = this.mutli_selecter;
                    l = this.renderMultiSelecter();
                    return $swap(m, l)
                };
                k.prototype.renderMultiSelecter = function() {
                    var D, E, s, z, n, u, o, w, q, v, J, x, y, m, G, C, p, t, H, l, F, r;
                    s = $values(this.current_selected);
                    if (s.length === 0) {
                        t = _("Notify <b>Nobody</b> about my comment")
                    } else {
                        if (s.length === this.collaborators.length) {
                            t = _("Notify <b>Everybody</b> about my comment")
                        } else {
                            if (s.length === 1) {
                                H = d.getUserById(s[0]);
                                J = i.shortName(H);
                                t = _("Notify <b>%s</b> about my comment").replace("%s", J)
                            } else {
                                t = _("Notify <b>%s people</b> about my comment").replace("%s", s.length)
                            }
                        }
                    }
                    E = A({
                        href: "#",
                        c: "change"
                    }, _("Change"));
                    $AEV(E, "click", (function(K) {
                        return function() {
                            $addClass(K.holder, "expanded");
                            return false
                        }
                    })(this));
                    q = LABEL({
                        "for": "notify_toggle"
                    }, _("Notify following people"), ":");
                    o = INPUT({
                        type: "checkbox",
                        value: "notify_toggle",
                        id: "notify_toggle"
                    });
                    if (s.length > 0) {
                        o.checked = true
                    }
                    $AEV(o, "change", (function(K) {
                        return function() {
                            var N, L, M;
                            if (o.checked) {
                                M = K.collaborators;
                                for (N = 0, L = M.length; N < L; N++) {
                                    H = M[N];
                                    K.current_selected[H.id] = H.id
                                }
                            } else {
                                K.current_selected = {}
                            }
                            return K.reRender()
                        }
                    })(this));
                    m = DIV({
                        c: "people people_holder"
                    });
                    r = this.collaborators;
                    for (l = 0, F = r.length; l < F; l++) {
                        H = r[l];
                        x = "notify_" + H.id;
                        D = b.renderAvatar(H, "small");
                        v = LABEL(D, SPAN({
                            c: "truncated"
                        }, i.shortName(H)));
                        w = INPUT({
                            type: "checkbox",
                            value: x
                        });
                        y = (function(K) {
                            return function(M, L) {
                                if (K.current_selected[L]) {
                                    delete K.current_selected[L]
                                } else {
                                    K.current_selected[L] = L
                                }
                                return K.reRender()
                            }
                        })(this);
                        if (this.current_selected[H.id]) {
                            w.checked = true
                        }
                        $add(m, z = DIV({
                            c: "user"
                        }, w, v));
                        n = $p(y, w, H.id);
                        $AEV(z, "click", n)
                    }
                    p = DIV({
                        c: "selecter"
                    }, SPAN({
                        c: "top_selecter"
                    }, o, q), m);
                    C = DIV({
                        c: "save_holder"
                    }, G = A({
                        href: "#"
                    }, _("Hide")));
                    $AEV(G, "click", (function(K) {
                        return function() {
                            $removeClass(K.holder, "expanded");
                            return false
                        }
                    })(this));
                    this.mutli_selecter = u = DIV({
                        c: "mutli_selecter"
                    }, C, $setHTML(SPAN({
                        c: "desc_text"
                    }), t), E, p);
                    return u
                };
                return k
            })();
            a.exports = new j()
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.NotesModel.js": 141,
            "../avatars/.coffee.Avatars.js": 14,
            "../notes/.coffee.NotesUtils.js": 59
        }
    ],
    61: [
        function(l, j, N) {
            var G = window.Signals;
            var L = window.LibEdit;
            var f = window.PlayManager;
            var S = window.FilesManager;
            var u = window.RecordManager;
            var O = window.GFile;
            var c = window.GFileView;
            var k = window.GB_hide;
            var i = window.GB_showHTML;
            var n = window.GB_getLast;
            var d = window.Indicator;
            var o = window.Alerts;
            var r = window.AmiButton;
            var K = window.AmiTooltip;
            var J = window.DateUtils;
            var C = window.ElementStore;
            var b = window.Emoticons;
            var X = window.TextAreaHolder;
            var H = window.FocusElm;
            var t = window.$isTouchDeviceOnly;
            var h = window.imageSprite;
            var s = window.track;
            var W = l("../misc/Misc.js").isMacStore;
            var R = l("../resizing_text_area/ResizingTextArea.js");
            var g = l("../items_utils/.coffee.ItemCheckbox.js");
            var v = l("../agenda/.coffee.AgendaUtils.js");
            var z = l("../project_editor/.coffee.ProjectEditorManager.js");
            var m = l("../project_list/.coffee.ProjectListUtils.js");
            var Y = l("../promotion_overlay/.coffee.PromotionOverlay.js");
            var w = l("../avatars/.coffee.Avatars.js");
            var M = l("../../mini/.coffee.ContentTransformers.js").ContentTransformers;
            var y = l("../formatter/Formatter.js");
            var U = l("../../models/.coffee.TemporaryIds.js");
            var q = l("../../models/.coffee.Collaborators.js");
            var Z = l("../../models/.coffee.NotesModel.js");
            var V = l("../../models/.coffee.ItemsModel.js");
            var p = l("../../models/.coffee.ProjectsModel.js");
            var a = l("../../models/.coffee.NotificationsModel.js");
            var E = l("../../models/.coffee.ModelUndo.js");
            var x = l("./.coffee.WhoToNotify.js");
            var Q = l("./.coffee.NoteMedia.js");
            var F = l("./.coffee.NotesBuffer.js");
            var T = l("./.coffee.NotesUtils.js");
            var D = {
                current_task: null,
                current_project: null,
                restore_project: null,
                restore_items: null,
                init: function() {
                    $AEV(window, "load", function() {
                        U.listenAll(function(ab, aa) {
                            var ac = $("note_" + ab);
                            if (ac) {
                                ac.id = "note_" + aa
                            }
                        })
                    });
                    G.connect("notes_updated", function(ac) {
                        if (D.current_task) {
                            var ab = D.current_task.id;
                            var aa = $map(ac, function(ad) {
                                if (ad.item_id == ab) {
                                    return true
                                }
                            });
                            if (f.state == "play") {
                                setTimeout(function() {
                                    G.sendSignal("notes_updated", ac)
                                }, 1000)
                            } else {
                                if (aa) {
                                    D.renderNotes(D.current_task, D.div_notes, D.holder)
                                }
                            }
                        }
                    });
                    G.connect("external_service_annotation", this.externalServicesAnnotation);
                    G.connect("upload_error", function(ab, ac) {
                        var ad = D.current_task;
                        if (ad && ad.id == ab.item_id) {
                            return true
                        }
                        var aa = _('Uploading "%s" failed.').replace("%s", ac.file.name);
                        o.confirm(aa, function(ae) {
                            if (ae) {
                                D.loadAndShow(ab.item_id, ab.id, ab.sync_id)
                            }
                        }, _("View upload"))
                    });
                    G.connect("note_buffer_commit", function(aa, ab) {
                        var ac = $("note_" + aa.id);
                        if (ac) {
                            $swap(ac, D.renderNote(ab))
                        }
                    });
                    G.connect("people_assigner_person_changed", function() {
                        if (D.current_task) {
                            G.sendSignal("refresh_interface")
                        }
                    })
                },
                isPremium: function(aa) {
                    if (window.User.is_premium) {
                        return true
                    }
                    if (aa && q.isProjectShared(aa)) {
                        return true
                    }
                    return false
                },
                annotate: function(ab, ad, ac) {
                    if (W() && !D.isPremium(ab && ab.project_id)) {
                        return false
                    }
                    var aa = T.renderIcon(ab, ac);
                    $add(ad, aa)
                },
                loadAndShow: function(aj, ai, ak, ae) {
                    if (ae && (ae.ctrl || ae.shift)) {
                        return false
                    }
                    if (D.current_task) {
                        k(function() {
                            D.loadAndShow(aj, ai, ak)
                        });
                        return false
                    }
                    if (z.current_form) {
                        var ad = z.current_editor;
                        if (ad) {
                            return ad.saveCurrentItem(function() {
                                D.loadAndShow(aj, ai, ak)
                            })
                        }
                    }
                    D.note_to_focus = ai;
                    var af = DIV({
                        c: "notes_holder notes_loading"
                    }, d.cssSpinner());
                    var aa = D.getDimension();
                    aj = U.getRealId(aj);
                    var ah;
                    if (ak) {
                        var ak = parseInt(ak);
                        if (ak) {
                            ah = V.getBySyncId(ak)
                        }
                    }
                    if (!ah) {
                        ah = V.getById(aj)
                    }
                    var ag = _("Comments");
                    var ac = document.title;
                    var ab = i(ag, af, aa.height, aa.width, {
                        close_validator_fn: function() {
                            var am = $("note_textarea");
                            if (!am) {
                                return true
                            }
                            var al = function() {
                                x.reset();
                                D.holder = null;
                                D.current_task = null;
                                D.submit_fn = null;
                                D.current_project = null;
                                D.attach_button = null;
                                D.files_view = null;
                                S.reset();
                                u.reset();
                                f.reset();
                                document.title = ac
                            };
                            var an = $strip(am.value);
                            if (an.length !== 0) {
                                o.confirmYesNo(_("Are you sure you want to cancel your current input?"), function(ao) {
                                    if (ao) {
                                        k(null, false);
                                        al()
                                    } else {
                                        am.focus()
                                    }
                                });
                                return false
                            }
                            al();
                            return true
                        }
                    });
                    $addClass(ab.g_window, "notes_gb_window");
                    if (ah && !ah.is_archived && !ah.in_history) {
                        D.renderItemAndNotes(af, ah)
                    } else {
                        D.fetchNotesViaAjax(af, aj, ak)
                    }
                    return false
                },
                fetchNotesViaAjax: function(ad, ac, ab, ae) {
                    var af = function(ah) {
                        if (ah.item == null) {
                            k();
                            alert(_("The task was not found, could be deleted."));
                            return
                        }
                        D.temp_project = ah.project;
                        var ag = V.model_data[ah.item.id] = ah.item;
                        ag.all_notes_fetched = true;
                        $map(ah.notes, function(aj) {
                            Z.model_data[aj.id] = aj
                        });
                        V.clearCache();
                        Z.clearCache();
                        V.syncCachedData();
                        Z.syncCachedData();
                        D.renderItemAndNotes(ad, ag);
                        var ai = p.get(D.temp_project.id);
                        if (ai) {
                            G.sendSignal("refresh_interface", [D.temp_project])
                        }
                        if ($isFunction(ae)) {
                            ae(ag)
                        }
                    };
                    var aa = function(ag) {
                        k();
                        if (ag && ag.indexOf("ITEM_NOT_FOUND") != -1) {
                            alert(_("The task was not found, could be deleted or moved."))
                        } else {
                            alert(_("An unknown error happened") + ". " + _("Please try again later. We're sorry for the trouble."))
                        }
                    };
                    Z.ajaxGetNotesData(ac, ab, af, aa)
                },
                renderItemAndNotes: function(ac, ad) {
                    document.title = ad.content + ": Todoist";
                    G.sendSignal("change_location", "task/" + ad.id);
                    var ab = Z.getNotes(ad.id);
                    if (ab.length > 0 || D.isPremium(ad && ad.project_id)) {
                        D.current_task = ad;
                        D.current_project = D.getProject(ad.project_id);
                        var ae = D.renderHolder(ad);
                        $swap(ac, ae);
                        D.renderNotes(ad, D.div_notes, ae);
                        var aa = $("note_textarea");
                        if (!t()) {
                            aa.focus()
                        }
                        D.attachNoteKeyboardShortcuts(aa)
                    } else {
                        k();
                        D.showPromo()
                    }
                    return false
                },
                renderHolder: function(ak) {
                    var ah = q.isProjectShared(ak.project_id);
                    var af = _("Add Comment");
                    var aa, ab, ad;
                    var aa = r.createButton(af, null, "red");
                    var ac = D.renderExtraInfo(ak);
                    var al = D.renderTextareaHolder(false);
                    var ai = this.current_project && q.getAll(this.current_project.id) || [];
                    var ae = x.render(ak, ai);
                    var aj = DIV({
                        c: "notes_holder"
                    }, DIV({
                        c: "note_item"
                    }, UL({
                        c: "items"
                    }, D.renderItem(ak)), ac), this.div_notes = ad = DIV({
                        c: "note_notes",
                        id: "current_notes"
                    }), DIV({
                        c: "note_submit"
                    }, ab = FORM(al.holder, DIV({
                        c: "btn_area"
                    }, TABLE({
                        width: "100%"
                    }, TBODY(TR(TD({
                        width: "30%"
                    }, aa), TD({
                        s: "text-align: right"
                    }, ae))))))));
                    if (ah) {
                        $addClass(aj, "notes_shared")
                    }
                    $add(ad, d.cssSpinner());
                    var ag = $p(D.addNote, ak, ab);
                    ab.submit_fn = ag;
                    $AEV(ab, "submit", ag);
                    $AEV(aa, "click", ag);
                    D.holder = aj;
                    D.submit_fn = ag;
                    D.externalServicesAnnotation(window.CURRENT_EXERNAL_SERVICE);
                    return aj
                },
                renderExtraInfo: function(af) {
                    if (!af.date_added) {
                        return null
                    }
                    var ae = DIV({
                        c: "note_extra_info"
                    });
                    if (af.date_added) {
                        D.resolveDate(af, "date_added");
                        var ad = SPAN(J.formatView(af.date_added));
                        var ab = function(aj) {
                            var ai = A({
                                href: "#project/" + aj.id
                            }, aj.name);
                            $AEV(ai, "click", function() {
                                k();
                                if (n()) {
                                    k()
                                }
                                m.setCurrentById(aj.id, af.id);
                                return false
                            });
                            $add(ae, SPAN({
                                c: "sep"
                            }, " • "), ai)
                        };
                        var ag = this.current_project;
                        if (ag && q.isProjectShared(ag.id)) {
                            var aa = q.getUserById(af.assigned_by_uid);
                            if (aa) {
                                var ah = SPAN(_("Added by"), " ", T.shortName(aa));
                                $add(ae, ah);
                                K.showSimpleText(ah, SPAN(_("Time added"), " ", ad));
                                var ac = w.renderAvatar(aa, "small");
                                $ATT(ah, ac)
                            }
                            ab(ag)
                        } else {
                            if (ag) {
                                K.showSimpleText(ad, _("Time added"));
                                $add(ae, ad);
                                ab(ag)
                            }
                        }
                    }
                    return ae
                },
                renderItem: function(aa) {
                    var ab = v.renderItem(aa, {
                        with_due_date: true,
                        no_drag_and_drop: true,
                        with_project: false,
                        not_editable: false,
                        fn_complete_item: this.completeItem,
                        fn_undo_complete_item: this.uncompleteItem
                    });
                    $addClass(ab, "note_task");
                    return ab
                },
                renderTextareaHolder: function(ad) {
                    var ah = _("Content");
                    var af = TEXTAREA({
                        placeholder: ah,
                        id: "note_textarea"
                    });
                    new R(af, false);
                    D.attachNoteKeyboardShortcuts(af);
                    var ab;
                    var aa;
                    var ai;
                    var ac;
                    if (!ad) {
                        ac = S.generateUploadView();
                        D.files_view = ac;
                        ab = S.generateIcon(ac, af);
                        ai = u.generateIcon(ac, af);
                        aa = this.attach_button = r.createMiniButton(h("cmp_attachment_page", 16, 16), "attach_btn");
                        K.showSimpleText(aa, function() {
                            return aa.tooltip_text
                        })
                    }
                    var ae = [ab, ai, aa];
                    ae.push(b.getButton(af));
                    if (!window.User.is_premium && ai && ab) {
                        ab.onclick = D.showPromo;
                        ai.onclick = D.showPromo
                    }
                    var ag = X.create({
                        text_area: af,
                        buttons: ae
                    });
                    if (!ad) {
                        $addAfter(ac, af);
                        S.setDropArea(ac, ag)
                    }
                    return {
                        holder: ag,
                        textarea: af
                    }
                },
                showPromo: function() {
                    Y.show(_("Notes and file attachments are premium features"), _("With notes you can add as many details as you want. Or attach PDFs, spreadsheets or photos!"));
                    return false
                },
                completeItem: function(aa) {
                    V.complete(aa.json);
                    D._genericUpdateCheckbox(aa, true)
                },
                uncompleteItem: function(aa) {
                    V.uncomplete(aa.json);
                    D._genericUpdateCheckbox(aa, false);
                    var ab = $all("li", "item_" + aa.json.id);
                    $map(ab, function(ac) {
                        if ($hasClass(ac, "history_item")) {
                            $remove(ac)
                        }
                    })
                },
                _genericUpdateCheckbox: function(aa, ac) {
                    var ab = E.getCurrentCheckpoint();
                    g.update(aa, ac, function() {
                        E.restoreCustom(ab);
                        var ae;
                        if (ac) {
                            ae = $p(D.completeItem, aa)
                        } else {
                            ae = $p(D.uncompleteItem, aa)
                        }
                        g.update(aa, !ac, ae)
                    }, false);
                    var ad = D.getProject(aa.json.project_id);
                    if (ad) {
                        G.sendSignal("refresh_interface", [ad], true)
                    }
                },
                renderNote: function(ai) {
                    var ab = this.current_project && q.isProjectShared(this.current_project.id);
                    var ag = y.format(ai.content, {
                        as_html: true
                    });
                    var ac = h("cmp_trash", 10, 11);
                    var ak = h("cmp_pencil", 16, 16);
                    D.resolveDate(ai, "posted");
                    var al = J.formatView(ai.posted);
                    if (!ai.posted_uid) {
                        ai.posted_uid = window.User.id
                    }
                    var an = DIV({
                        c: "note_actions"
                    });
                    if (ai.posted_uid == window.User.id) {
                        if (ai.is_buffer_obj) {
                            $add(an, ac, " ")
                        } else {
                            $add(an, ak, " ", ac, " ")
                        }
                    }
                    $add(an, D.usersNotified(ai), " ");
                    var am = DIV({
                        c: "note_meta"
                    }, SPAN({
                        c: "time"
                    }, al), an);
                    var aa = DIV({
                        c: "note_text",
                        id: "note_" + ai.id
                    }, am, $setHTML(SPAN({
                        c: "note_content"
                    }), ag));
                    if (ab) {
                        var ae = q.getUserById(ai.posted_uid);
                        if (ae) {
                            var aj = w.renderAvatar(ae, "medium");
                            $addClass(aa, "has_avatar");
                            $ATT(aa, aj);
                            $ATT(am, SPAN({
                                c: "user_name"
                            }, T.shortName(ae)))
                        }
                    }
                    var af = Q.render(ai);
                    if (af) {
                        $add(aa, af)
                    }
                    $AEV(ac, "click", $p(D.deleteNote, ai, aa));
                    $AEV(ak, "click", $p(D.showEditNote, ai, aa));
                    var ah = C.get(ai, "file");
                    if (ai.is_buffer_obj && ah) {
                        $setOpacity(aa, 0.6);
                        var ad = new c(ah);
                        $add(aa, DIV({
                            c: "files_view"
                        }, ad.render(false)))
                    }
                    return aa
                },
                clearEmpty: function() {
                    $remove($all("div", "no_notes", $("current_notes")))
                },
                focusLatest: function(aa) {
                    $("current_notes").scrollTop = aa.offsetTop
                },
                usersNotified: function(ad) {
                    var ab = ad.uids_to_notify;
                    if (ab && ab.length > 0) {
                        var aa = h("cmp_dark_notifications clickable", 26, 16);
                        var ac = function() {
                            return -($("current_notes").scrollTop) || 0
                        };
                        K.showTooltip(aa, function() {
                            var ae = DIV({
                                c: "people_holder notified_people"
                            }, B(_("People notified")), BR());
                            $map(ab, function(ah) {
                                var af = q.getUserById(ah);
                                if (af) {
                                    var ag = w.renderAvatar(af, "small");
                                    var ai = DIV({
                                        c: "user"
                                    }, ag, SPAN(T.shortName(af)));
                                    $add(ae, ai, BR())
                                }
                            });
                            return ae
                        }, ac, 5);
                        return aa
                    }
                },
                showEditNote: function(ad, ac) {
                    D.current_note = ad;
                    var af = D.getDimension();
                    var aa;
                    aa = r.createButton(_("Update"), null, "red");
                    var ab = D.renderTextareaHolder(true);
                    var ae;
                    var ac = DIV({
                        c: "note_submit note_edit"
                    }, ae = FORM(ab.holder, DIV({
                        c: "btn_area"
                    }, aa)));
                    var ag = $p(D.saveNote, aa, ad, ab.textarea);
                    ae.submit_fn = ag;
                    $AEV(aa, "click", ag);
                    ab.textarea.value = ad.content;
                    i(_("Edit"), ac, af.height, af.width, {
                        close_validator_fn: function() {
                            var ah = ab.textarea;
                            if (!ah) {
                                return true
                            }
                            if (ah.value != ad.content) {
                                o.confirmYesNo(_("Are you sure you want to cancel your current input?"), function(ai) {
                                    if (ai) {
                                        k(null, false)
                                    } else {
                                        ah.focus()
                                    }
                                });
                                return false
                            }
                            return true
                        }
                    });
                    L.placeCursor(ab.textarea, ab.textarea.value.length);
                    return false
                },
                saveNote: function(ab, ad, aa) {
                    $hide(ab);
                    $addAfter(d.cssSpinner(), ab);
                    Z.updateNote(D.current_note.id, D.current_note.item_id, aa.value);
                    var af;
                    var ae = D.current_note;
                    if (ae) {
                        ae.content = aa.value;
                        var ac = $("note_" + ae.id);
                        if (ac) {
                            af = D.renderNote(ae);
                            $addClass(af, "note_updated");
                            $swap(ac, af)
                        }
                    }
                    s("Notes", "Edit");
                    k();
                    return false
                },
                renderNotes: function(aj, ah, ae) {
                    var ad = Z.getNotes(aj.id);
                    $replace(ah, null);
                    var ac = _("This task has no comments");
                    var ab = _("Fetch older comments");
                    var aa;
                    var af = D.note_to_focus;
                    if (ad.length === 0) {
                        $add(ah, DIV({
                            c: "no_notes"
                        }, ac))
                    } else {
                        var ai;
                        if (!aj.all_notes_fetched && ad.length >= 30) {
                            var ag;
                            $add(ah, ag = A({
                                c: "fetch_old",
                                href: "#"
                            }, ab));
                            $AEV(ag, "click", function() {
                                $replace(ag, d.cssSpinner());
                                D.fetchNotesViaAjax(ae, aj.id, aj.sync_id, function() {
                                    var ak = $child(ae, "div", "note_text");
                                    if (ak) {
                                        D.focusLatest(ak)
                                    }
                                });
                                return false
                            })
                        }
                        $map(ad, function(ak) {
                            $add(ah, ai = D.renderNote(ak));
                            if (af && ak.id == af) {
                                aa = ai
                            }
                        });
                        setTimeout(function() {
                            a.markNotesAsRead(ad)
                        }, 200);
                        if (aa) {
                            D.note_to_focus = null;
                            $("current_notes").scrollTop = aa.offsetTop - 100;
                            $addClass(aa, "note_added")
                        } else {
                            if (ai) {
                                D.focusLatest(ai)
                            }
                        }
                    }
                },
                addNote: function(af, ae) {
                    if (!D.isPremium(af && af.project_id)) {
                        D.showPromo();
                        return false
                    }
                    var aa = $child(ae, "textarea");
                    var ag = $strip(aa.value);
                    var ad = S.getFiles(D.files_view);
                    if (ag.length === 0 && ad.length === 0) {
                        return false
                    }
                    var ab = null;
                    if (D.current_project && q.isProjectShared(D.current_project.id)) {
                        ab = x.getUidsToNotify()
                    }
                    var ah = F.addNotes(af.task_id || af.id, aa.value, ab, ad);
                    aa.value = "";
                    if (!t()) {
                        aa.focus()
                    } else {
                        aa.blur()
                    } if (D.files_view) {
                        S.resetView(D.files_view)
                    }
                    u.reset();
                    if (aa.resize_textarea) {
                        aa.resize_textarea()
                    }
                    D.clearEmpty();
                    var ac;
                    $map(ah, function(ai) {
                        ac = D.renderNote(ai);
                        $addClass(ac, "note_added");
                        $add($("current_notes"), ac)
                    });
                    D.focusLatest(ac);
                    D.updateCount();
                    s("Notes", "Add");
                    return false
                },
                deleteNote: function(ab, aa) {
                    o.confirm(_("Are you sure you want to delete this?"), function(ac) {
                        if (ac) {
                            Z.deleteNote(ab.item_id, ab.task_id || ab.id);
                            $remove(aa);
                            D.updateCount();
                            s("Notes", "Delete")
                        }
                    })
                },
                updateCount: function() {
                    var ac = D.current_task;
                    var ab = $("item_" + (ac.task_id || ac.id));
                    var aa = $child(ab, "span", "note_icon");
                    if (aa) {
                        $swap(aa, T.renderIcon(ac, ab))
                    }
                },
                getDimension: function() {
                    var ae = $winSize();
                    var ad = 600;
                    var ab = 560;
                    var ac = Math.min(ae.w - 100, ad);
                    var aa = Math.min(ae.h - 30, ab);
                    return {
                        width: ac,
                        height: aa
                    }
                },
                resolveDate: function(ab, aa) {
                    if (!ab[aa]) {
                        return null
                    }
                    if (ab.ntime) {
                        ab[aa] = new Date(ab.ntime)
                    } else {
                        if ($isString(ab[aa])) {
                            ab[aa] = new Date(ab[aa])
                        } else {
                            ab.ntime = ab[aa].getTime()
                        }
                    }
                },
                attachNoteKeyboardShortcuts: function(aa) {
                    if (aa.note_keys_attached) {
                        return
                    }
                    $AEV(aa, "keydown", function(ad) {
                        var ac = $parent(aa, "form");
                        var ab = $child(ac, "a", "amibutton_red");
                        if (ab) {
                            setTimeout(function() {
                                H.focus(ab)
                            }, 5)
                        }
                        if (ad.ctrl && ad.keyAscii == 13) {
                            ac.submit_fn();
                            $preventDefault(ad);
                            return false
                        }
                    });
                    aa.note_keys_attached = true
                },
                externalServicesAnnotation: function(ab) {
                    var aa = D.attach_button;
                    if (ab && aa) {
                        var ac = ab.annotate_fn;
                        if (ab.is_email) {
                            aa.tooltip_text = _("Attach email to note")
                        } else {
                            aa.tooltip_text = _("Attach website to note")
                        }
                        aa.onclick = function() {
                            var ah = new O();
                            var ae = new TEXTAREA();
                            ac(ae);
                            var ak = ae.value;
                            var af = M.onContentSave(ak);
                            var ad;
                            var ag = M.type;
                            if (ag == "gmail_new") {
                                ad = "td/gmail"
                            } else {
                                if (ag == "outlook") {
                                    ad = "td/outlook"
                                } else {
                                    if (ag == "thunderbird") {
                                        ad = "td/thunderbird"
                                    } else {
                                        ad = "td/hyperlink";
                                        var aj = window.PluginVersion.getTitleAndUrl();
                                        ak = aj[0];
                                        af = aj[1]
                                    }
                                }
                            }
                            ah.setUploadContent({
                                file_url: af,
                                file_name: ak,
                                file_type: ad
                            });
                            var ai = new c(ah);
                            $add(D.files_view, ai.render());
                            K.hide();
                            $hide(aa);
                            setTimeout(function() {
                                $show(aa)
                            }, 20);
                            M.onContollerHide();
                            return false
                        };
                        $show(aa)
                    } else {
                        $hide(aa)
                    }
                },
                getProject: function(aa) {
                    var ac = p.get(aa);
                    if (ac) {
                        return ac
                    }
                    var ab = D.temp_project;
                    if (ab && ab.id == aa) {
                        return ab
                    }
                }
            };
            window.Notes = D;
            j.exports = D
        }, {
            "../../mini/.coffee.ContentTransformers.js": 124,
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ModelUndo.js": 140,
            "../../models/.coffee.NotesModel.js": 141,
            "../../models/.coffee.NotificationsModel.js": 142,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../avatars/.coffee.Avatars.js": 14,
            "../formatter/Formatter.js": 27,
            "../items_utils/.coffee.ItemCheckbox.js": 33,
            "../misc/Misc.js": 54,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../project_list/.coffee.ProjectListUtils.js": 76,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78,
            "../resizing_text_area/ResizingTextArea.js": 90,
            "./.coffee.NoteMedia.js": 56,
            "./.coffee.NotesBuffer.js": 58,
            "./.coffee.NotesUtils.js": 59,
            "./.coffee.WhoToNotify.js": 60
        }
    ],
    62: [
        function(f, a, v) {
            var p, u, m, c, t, o, j, h, q, s, d, w, i, k, n, r, g, l, b = function(x, y) {
                    return function() {
                        return x.apply(y, arguments)
                    }
                };
            i = window.Signals;
            p = window.AmiTooltip;
            c = window.ForcedScroll;
            j = window.Indicator;
            n = window.TooptipWin;
            t = window.GB_hide;
            r = window.format;
            l = window.track;
            g = window.imageSprite;
            u = f("../avatars/.coffee.Avatars.js");
            q = f("../notes/Notes.js");
            d = f("../project_list/.coffee.ProjectListUtils.js");
            h = f("../karma_promotion/.coffee.KarmaPromotion.js");
            k = f("../themes/.coffee.Themes.js");
            s = f("../../models/.coffee.NotificationsModel.js");
            m = f("../../models/.coffee.Collaborators.js");
            w = f("../../models/.coffee.ProjectsModel.js");
            o = (function() {
                function x() {
                    this.hideIndicator = b(this.hideIndicator, this);
                    this.showIndicator = b(this.showIndicator, this);
                    this.renderNotification = b(this.renderNotification, this);
                    this.renderNotifications = b(this.renderNotifications, this);
                    this.fetchData = b(this.fetchData, this);
                    this.showDropdown = b(this.showDropdown, this);
                    this.updateIcon = b(this.updateIcon, this);
                    this._renderImageCount = b(this._renderImageCount, this);
                    i.connect("notifications_updated", (function(y) {
                        return function() {
                            return y.updateIcon(s.getUnreadCount())
                        }
                    })(this));
                    i.connect("theme_changed", (function(y) {
                        return function() {
                            return y.updateIcon(s.getUnreadCount())
                        }
                    })(this));
                    i.connect("noti_updated", function(y) {
                        var z;
                        if (y.note_id && !s.isNoteUnread(y.note_id)) {
                            z = $("noti_" + y.notification_key);
                            if (z && $hasClass(z, "unread")) {
                                return $removeClass(z, "unread")
                            }
                        }
                    })
                }
                x.prototype.renderIcon = function() {
                    var z, y;
                    y = this._renderImageCount(null);
                    z = SPAN({
                        id: "notifications_counter"
                    }, y);
                    $AEV(z, "click", (function(C) {
                        return function() {
                            C.updateIcon(0);
                            return C.showDropdown(z)
                        }
                    })(this));
                    return z
                };
                x.prototype._renderImageCount = function(E) {
                    var z, C, y, D;
                    D = null;
                    z = k.getNotificationsIcon();
                    if (E && E > 0) {
                        D = SPAN({
                            c: "unread"
                        })
                    }
                    C = g(z, 22, 17);
                    y = SPAN({
                        c: "fixed_pos"
                    }, D, C);
                    return y
                };
                x.prototype.updateIcon = function(z) {
                    var y;
                    y = $("notifications_counter");
                    if (!y || this.cur_window) {
                        return this.timeout = setTimeout((function(C) {
                            return function() {
                                C.timeout = null;
                                return C.updateIcon(z)
                            }
                        })(this), 500)
                    }
                    return $replace(y, this._renderImageCount(z))
                };
                x.prototype.showDropdown = function(z) {
                    var y, C;
                    C = {
                        fn_left_offset: function() {
                            var D;
                            D = $position(z).x;
                            if (window.FLUID_MINI) {
                                return D - 220
                            } else {
                                return D - 180
                            }
                        },
                        fn_top_offset: function() {
                            return 40
                        },
                        fn_arrow_left: function() {
                            var D;
                            D = $position(z).x;
                            if (window.FLUID_MINI) {
                                return D + 19
                            } else {
                                return D + 28
                            }
                        },
                        fn_on_hide: (function(D) {
                            return function() {
                                D.cur_window = null;
                                return c.removeListener()
                            }
                        })(this),
                        fixed_pos: true
                    };
                    y = DIV({
                        id: "notifications_holder"
                    }, DIV({
                        c: "indicator"
                    }, j.imgMedium()));
                    c.attachListener(y, "notifications");
                    this.cur_window = n.show(_("Notifications"), y, 200, 340, C);
                    this.fetchData(y, null, true);
                    return l("Notifications", "Show")
                };
                x.prototype.fetchData = function(z) {
                    var y, C;
                    y = s.getNotifications();
                    if (y.length === 0) {
                        return $replace(z, CENTER(DIV({
                            c: "empty"
                        }, _("Notifications will be displayed here whenever something happens in one of your shared projects."))))
                    } else {
                        this.renderNotifications(z, y);
                        C = $first(y);
                        if (C) {
                            return s.markAsRead(C)
                        }
                    }
                };
                x.prototype.renderNotifications = function(D, C) {
                    var F, z, E, G, y;
                    $remove($all("div", "indicator", D));
                    if ($("more_button_noti")) {
                        $remove($("more_button_noti"))
                    }
                    E = UL();
                    F = s.getLastRead();
                    for (G = 0, y = C.length; G < y; G++) {
                        z = C[G];
                        $add(E, this.renderNotification(z, F))
                    }
                    return $add(D, E)
                };
                x.prototype.renderNotification = function(y, M, Q) {
                    var W, N, ac, O, H, R, G, K, S, Z, C, ab, ad, aa, ae, T, U, F, Y, X, V, z, E, af, J, L, D;
                    if (Q == null) {
                        Q = false
                    }
                    af = m.getUserById(y.from_uid);
                    U = y.notification_type;
                    if (!af) {
                        af = y.from_user
                    }
                    if (!af) {
                        if (U.indexOf("biz_") !== -1) {
                            af = {}
                        } else {
                            if (U.indexOf("karma_") !== -1) {
                                af = {}
                            } else {
                                return
                            }
                        }
                    }
                    if (af.full_name) {
                        ac = u.renderAvatar(af, "medium")
                    } else {
                        ac = null
                    }
                    N = null;
                    S = null;
                    Z = null;
                    K = false;
                    G = false;
                    R = false;
                    W = null;
                    if (Q === false) {
                        T = LI();
                        T.id = "noti_" + y.notification_key
                    }
                    F = y.project_name;
                    J = af.full_name;
                    J = "<b>" + ($xssStrip(J)) + "</b>";
                    F = "<b>" + ($xssStrip(F)) + "</b>";
                    V = null;
                    z = "";
                    O = null;
                    if (U === "note_added") {
                        Z = true;
                        V = r(_("%s added a comment"), J);
                        if (y.note_content) {
                            O = y.note_content
                        }
                        if (Q === false) {
                            z = $setHTML(SPAN(), V);
                            if (y.note_content) {
                                $add(z, BR(), SPAN({
                                    c: "desc"
                                }, y.note_content))
                            }
                        }
                    } else {
                        if (U.indexOf("item_") !== -1) {
                            Z = true;
                            C = null;
                            if (U === "item_assigned") {
                                V = r(_("%s assigned a task"), J, F)
                            } else {
                                if (U === "item_completed") {
                                    V = r(_("%s completed a task"), J, F);
                                    C = "completed"
                                } else {
                                    if (U === "item_uncompleted") {
                                        V = r(_("%s uncompleted a task"), J, F)
                                    }
                                }
                            } if (y.item_content) {
                                O = y.item_content
                            }
                            if (Q === false) {
                                z = $setHTML(SPAN(), V);
                                if (y.item_content) {
                                    $add(z, BR(), ab = SPAN({
                                        c: "desc"
                                    }, y.item_content));
                                    if (C) {
                                        $addClass(ab, C)
                                    }
                                }
                            }
                        } else {
                            if (U === "share_invitation_sent") {
                                if (y.state === "accepted") {
                                    ac = u.renderAvatar(window.User, "medium");
                                    V = r(_("You joined %s"), F);
                                    S = y.project_id;
                                    if (Q === false) {
                                        z = $setHTML(SPAN(), V)
                                    }
                                } else {
                                    if (y.state === "rejected") {
                                        ac = u.renderAvatar(window.User, "medium");
                                        V = r(_("You declined invitation to %s"), F);
                                        S = null;
                                        if (Q === false) {
                                            z = $setHTML(SPAN(), V)
                                        }
                                    } else {
                                        V = r(_("%s invited you to %s"), J, F);
                                        if (Q === false) {
                                            E = function(ah) {
                                                var ag;
                                                ag = r(_("Start collaborating on %s"), F);
                                                $swap(T, T = LI({
                                                    c: "accepted"
                                                }, _("Invitation accepted!"), BR(), $setHTML(SPAN(), ag)));
                                                return $AEV(T, "click", function() {
                                                    var aj, al, ai, ak;
                                                    t();
                                                    aj = null;
                                                    ak = w.getAll();
                                                    for (al = 0, ai = ak.length; al < ai; al++) {
                                                        F = ak[al];
                                                        if (F.name === ah.project_name) {
                                                            aj = F.id;
                                                            break
                                                        }
                                                    }
                                                    if (aj) {
                                                        d.setCurrentById(aj)
                                                    }
                                                    return false
                                                })
                                            };
                                            L = this.genericAccept(y, V, s.acceptInvitation, s.rejectInvitation, E), z = L[0], N = L[1]
                                        }
                                    }
                                }
                            } else {
                                if (U === "share_invitation_accepted") {
                                    V = r(_("%s joined project %s"), J, F);
                                    S = y.project_id;
                                    if (Q === false) {
                                        z = $setHTML(SPAN(), V)
                                    }
                                } else {
                                    if (U === "share_invitation_rejected") {
                                        V = r(_("%s rejected your invitation to project %s"), J, F);
                                        S = y.project_id;
                                        if (Q === false) {
                                            z = $setHTML(SPAN(), V)
                                        }
                                    } else {
                                        if (U === "user_left_project") {
                                            V = r(_("%s left project %s."), J, F);
                                            S = y.project_id;
                                            if (Q === false) {
                                                z = $setHTML(SPAN(), V)
                                            }
                                        } else {
                                            if (U === "user_removed_from_project") {
                                                if (y.removed_uid === window.User.id) {
                                                    V = r(_("%s removed you from %s."), J, F)
                                                } else {
                                                    X = m.getUserById(y.removed_uid) || {};
                                                    Y = X.full_name || "";
                                                    Y = Y.split(" ")[0];
                                                    V = r(_("%s removed %s from %s."), J, Y, F)
                                                }
                                                S = y.project_id;
                                                if (Q === false) {
                                                    z = $setHTML(SPAN(), V)
                                                }
                                            } else {
                                                if (U === "owner_left_project") {
                                                    V = r(_("%s (owner) left project %s"), J, F);
                                                    S = y.project_id;
                                                    if (Q === false) {
                                                        z = $setHTML(SPAN(), V)
                                                    }
                                                } else {
                                                    if (U === "karma_level") {
                                                        ae = y.karma_level;
                                                        V = z = (function() {
                                                            switch (ae) {
                                                                case 1:
                                                                    return _("Your journey towards higher productivity begins today! You're now a karma Novice.");
                                                                case 2:
                                                                    return _("Congrats! Reaching 2,500 points makes you a Todoist Karma Intermediate.");
                                                                case 3:
                                                                    return _("You're a Pro! High five on reaching the Professional level of Todoist Karma!");
                                                                case 4:
                                                                    return _("Pat yourself on the back– you're now an impressive Todoist Karma Expert!");
                                                                case 5:
                                                                    return _("Outstanding work! Achieving 10,000 points makes you a Todoist Karma Master.");
                                                                case 6:
                                                                    return _("One more level to go! You're now a revered Todoist Karma Grandmaster!");
                                                                case 7:
                                                                    return _("You did it! With over 50,000 points you've reached the top– Todoist Karma Enlightenment!")
                                                            }
                                                        })();
                                                        R = true;
                                                        if (Q === false) {
                                                            ad = h.getIcon(ae);
                                                            ac = SPAN({
                                                                c: "karma-icon " + ad
                                                            })
                                                        }
                                                    } else {
                                                        if (U === "biz_invitation_created") {
                                                            if (y.state === "invited") {
                                                                E = function() {
                                                                    return $swap(T, T = LI({
                                                                        c: "accepted"
                                                                    }, _("Invitation accepted!")))
                                                                };
                                                                V = r(_("%s invited you to %s"), J, y.account_name);
                                                                V = _("TD Business") + ": " + V;
                                                                if (Q === false) {
                                                                    D = this.genericAccept(y, V, s.acceptInvitationBiz, s.rejectInvitationBiz, E), z = D[0], N = D[1]
                                                                }
                                                            } else {
                                                                if (y.state === "accepted") {
                                                                    V = r(_("You joined %s"), y.account_name);
                                                                    V = _("TD Business") + ": " + V;
                                                                    if (Q === false) {
                                                                        z = $setHTML(SPAN(), V)
                                                                    }
                                                                } else {
                                                                    V = r(_("You rejected invitation to %s"), y.account_name);
                                                                    V = _("TD Business") + ": " + V;
                                                                    if (Q === false) {
                                                                        z = $setHTML(SPAN(), V)
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            if (U === "biz_invitation_accepted") {
                                                                V = r(_("%s joined %s"), J, y.account_name);
                                                                V = _("TD Business") + ": " + V;
                                                                K = true;
                                                                if (Q === false) {
                                                                    z = $setHTML(SPAN(), V)
                                                                }
                                                            } else {
                                                                if (U === "biz_invitation_rejected") {
                                                                    V = r(_("%s rejected your invitation to %s"), J, y.account_name);
                                                                    V = _("TD Business") + ": " + V;
                                                                    K = true;
                                                                    if (Q === false) {
                                                                        z = $setHTML(SPAN(), V)
                                                                    }
                                                                } else {
                                                                    if (U === "biz_policy_disallowed_invitation") {
                                                                        V = r(_("Team's permission settings don't allow you to share projects outside of your team. Add %s to your team or change the permission settings"), J);
                                                                        V = _("TD Business") + ": " + V;
                                                                        S = y.project_id;
                                                                        if (Q === false) {
                                                                            z = $setHTML(SPAN(), V)
                                                                        }
                                                                    } else {
                                                                        if (U === "biz_policy_rejected_invitation") {
                                                                            V = r(_("Team's permission don't allow user to join projects outside of their team. Ask %s to add yourself to their team or to change the permission settings"), J);
                                                                            V = _("TD Business") + ": " + V;
                                                                            S = y.project_id;
                                                                            if (Q === false) {
                                                                                z = $setHTML(SPAN(), V)
                                                                            }
                                                                        } else {
                                                                            if (U === "biz_trial_will_end") {
                                                                                V = _("This is a reminder that your trial will end in a few days. At that time, we will process your first payment to ensure uninterrupted service.");
                                                                                V = _("TD Business") + ": " + V;
                                                                                G = true;
                                                                                if (Q === false) {
                                                                                    z = $setHTML(SPAN(), V)
                                                                                }
                                                                            } else {
                                                                                if (U === "biz_trial_enter_cc") {
                                                                                    V = _("This is a reminder that your trial will end in a few days. Update your credit card information to keep using our service.");
                                                                                    V = _("TD Business") + ": " + V;
                                                                                    G = true;
                                                                                    if (Q === false) {
                                                                                        z = $setHTML(SPAN(), V)
                                                                                    }
                                                                                } else {
                                                                                    if (U === "biz_payment_failed") {
                                                                                        V = _("We failed to charge you. Please review and update your credit card information to avoid any disruption in service.");
                                                                                        V = _("TD Business") + ": " + V;
                                                                                        G = true;
                                                                                        if (Q === false) {
                                                                                            z = $setHTML(SPAN(), V)
                                                                                        }
                                                                                    } else {
                                                                                        if (U === "biz_account_disabled") {
                                                                                            V = _("Your business account was disabled. Upgrade now to continue using account.");
                                                                                            V = _("TD Business") + ": " + V;
                                                                                            G = true;
                                                                                            if (Q === false) {
                                                                                                z = $setHTML(SPAN(), V)
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    H = null;
                    W = null;
                    if (S) {
                        H = function() {
                            t();
                            d.setCurrentById(S);
                            return false
                        };
                        W = {
                            text: _("View"),
                            action: "view_project",
                            project_id: S,
                            put_in_focus: true
                        }
                    } else {
                        if (Z) {
                            H = function() {
                                q.loadAndShow(y.item_id, y.note_id);
                                return false
                            };
                            W = {
                                text: _("View"),
                                action: "view_task",
                                item_id: y.item_id,
                                note_id: y.note_id,
                                put_in_focus: true
                            }
                        } else {
                            if (K) {
                                H = function() {
                                    window.open("/business/users");
                                    return false
                                };
                                W = {
                                    text: _("View"),
                                    action: "view_business_users"
                                }
                            } else {
                                if (G) {
                                    H = function() {
                                        window.open("/business/accountAndBilling");
                                        return false
                                    };
                                    W = {
                                        text: _("View"),
                                        action: "view_business_billing"
                                    }
                                } else {
                                    if (R) {
                                        H = function() {
                                            h.show(y, ae, ad);
                                            return false
                                        };
                                        W = {
                                            text: _("View"),
                                            action: "view_karma"
                                        }
                                    }
                                }
                            }
                        }
                    } if (Q) {
                        return [af, V, O, H, W]
                    }
                    $add(T, DIV({
                        c: "avatar_holder"
                    }, ac), DIV({
                        c: "text_holder"
                    }, z, N));
                    if (H) {
                        $AEV(T, "click", H)
                    }
                    if (N) {
                        $addClass(T, "has_actions")
                    }
                    aa = false;
                    if (y.seq_no > M) {
                        aa = true
                    }
                    if (y.note_id && s.isNoteUnread(y.note_id)) {
                        aa = true
                    }
                    if (aa) {
                        $addClass(T, "unread")
                    }
                    return T
                };
                x.prototype.genericAccept = function(y, G, E, z, F) {
                    var C, D, J, H;
                    H = $setHTML(SPAN(), G);
                    D = DIV({
                        c: "actions"
                    }, C = A({
                        href: "#",
                        c: "accept"
                    }, _("Accept")), J = A({
                        href: "#",
                        c: "reject"
                    }, g("cmp_trash_small", 12, 12)));
                    $AEV(C, "click", (function(K) {
                        return function() {
                            var M, L;
                            K.showIndicator(D);
                            M = function() {
                                return F()
                            };
                            L = function(N) {
                                alert(N);
                                return K.hideIndicator(D)
                            };
                            E(y, M, L);
                            return false
                        }
                    })(this));
                    $AEV(J, "click", (function(K) {
                        return function() {
                            var M, L;
                            p.hide();
                            K.showIndicator(D);
                            M = function() {
                                return $remove($parent(D, "li"))
                            };
                            L = function(N) {
                                alert(N);
                                return K.hideIndicator(D)
                            };
                            z(y, M, L);
                            return false
                        }
                    })(this));
                    p.showSimpleText(J, _("Reject"));
                    return [H, D]
                };
                x.prototype.showIndicator = function(y) {
                    $hide($all("a", null, y));
                    return j.addToElm(y)
                };
                x.prototype.hideIndicator = function(y) {
                    j.removeFromElm(y);
                    return $show($all("a", null, y))
                };
                return x
            })();
            a.exports = new o()
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.NotificationsModel.js": 142,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../avatars/.coffee.Avatars.js": 14,
            "../karma_promotion/.coffee.KarmaPromotion.js": 42,
            "../notes/Notes.js": 61,
            "../project_list/.coffee.ProjectListUtils.js": 76,
            "../themes/.coffee.Themes.js": 101
        }
    ],
    63: [
        function(b, c, a) {
            var g = window.Signals;
            var f = b("../../models/.coffee.ModelUndo.js");
            var d = {
                shown: false,
                sticky: false,
                div_top: null,
                div_notifier: null,
                hide_link: A({
                    href: "#",
                    c: "hide_link",
                    s: "float: right"
                }, _("Hide")),
                init: function() {
                    $AEV(window, "resize", this.position);
                    $AEV(window, "scroll", this.position);
                    g.connect("action_performed", this.hideUnlessSticky);
                    this.hide_link.onclick = d.hide;
                    this.div_notifier = $("notifier");
                    $AEV(this.div_notifier, "mouseover", function() {
                        if (d.hideTimeout) {
                            clearTimeout(d.hideTimeout);
                            d.hideTimeout = null
                        }
                    });
                    this.div_top = $("top");
                    this.hide();
                    this.position();
                    $addToTop(this.div_notifier, this.hide_link)
                },
                position: function() {
                    var j = $("notifier");
                    if (j) {
                        var h = $winSize();
                        var i = (h.w - j.offsetWidth) / 2;
                        $setLeft(j, i)
                    }
                },
                hide: function() {
                    $hide($("notifier"));
                    d.shown = false;
                    f.clear();
                    return false
                },
                hideUnlessSticky: function() {
                    if (!d.sticky) {
                        d.hide()
                    }
                    return false
                },
                show: function(h, i) {
                    if ($isString(h)) {
                        $setHTML(this.div_notifier, h)
                    } else {
                        $replace(this.div_notifier, h)
                    } if (i !== true) {
                        i = false
                    }
                    this.sticky = i;
                    $setOpacity(this.div_notifier, 0);
                    $show(this.div_notifier);
                    this.position();
                    $setOpacity(this.div_notifier, 1);
                    this.position();
                    d.shown = true;
                    if (i) {
                        if (d.hideTimeout) {
                            clearTimeout(d.hideTimeout)
                        }
                        d.hideTimeout = setTimeout(d.hide, 12000)
                    }
                }
            };
            c.exports = d
        }, {
            "../../models/.coffee.ModelUndo.js": 140
        }
    ],
    64: [
        function(c, d, a) {
            var b = window.GB_show;
            var f = {
                init: function() {
                    $AEV(window, "message", function(g) {
                        if (g && g.data && g.data.indexOf("show_premium") != -1) {
                            f.showPrefs("premium")
                        }
                    })
                },
                showKeyboardShortcuts: function() {
                    window.open("/Help/KeyboardShortcuts");
                    return false
                },
                showPrefs: function(h, i) {
                    if (!h) {
                        h = "general"
                    }
                    if (!$isString(i)) {
                        i = _("Todoist Settings")
                    }
                    if (h == "premium") {
                        if (window.FLUID_MINI) {
                            window.open("https://" + window.location.host + "/premium")
                        } else {
                            top.location = "https://" + window.location.host + "/premium"
                        }
                        return false
                    }
                    var g = "/Users/viewPrefs";
                    g += "?page=" + h;
                    return b(i, g, 550, 750)
                },
                showKarmaInfo: function() {
                    var g = 500;
                    if (window.FLUID_MINI) {
                        g = 390
                    }
                    return b(_("More about Todoist Karma"), "/Karma/showInfo", 550, g)
                }
            };
            d.exports = f
        }, {}
    ],
    65: [
        function(d, b, h) {
            var g, j, c, f, a, k, m, l, i = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            j = window.AmiTooltip;
            g = window.AmiCompleteSelect;
            a = window.GB_hide;
            l = window.imageSprite;
            f = d("../../models/.coffee.Collaborators.js");
            m = d("../notes/.coffee.NotesUtils.js");
            c = d("../avatars/.coffee.Avatars.js");
            k = (function() {
                function n() {
                    this.resetSelectedPerson = i(this.resetSelectedPerson, this);
                    this.showTooltip = i(this.showTooltip, this);
                    this.render = i(this.render, this)
                }
                n.prototype.current = null;
                n.prototype.render = function(u, s, t) {
                    var v, r, q, o, p;
                    if (!t) {
                        t = {}
                    }
                    r = l("cmp_share_person form_action_icon menu_icon", 22, 20);
                    if (t.get_current_fn) {
                        this.current_uid = t.get_current_fn()
                    } else {
                        if (this.current_uid === void 0) {
                            this.current_uid = u != null ? u.responsible_uid : void 0
                        }
                    }
                    q = t.tooltip_txt || _("Assign to person");
                    if (this.current_uid) {
                        p = f.getUserById(this.current_uid);
                        if (p) {
                            r = c.renderAvatar(p, "small");
                            o = t.tooltip_txt_selected || _("Assigned to");
                            q = o + " " + m.shortName(p)
                        }
                    }
                    $addClass(r, "assign_icon");
                    j.showSimpleText(r, q);
                    v = $p(this.showTooltip, r, u, s, t);
                    r.showTooltip = function() {
                        $addClass(r, "always_show");
                        v();
                        return false
                    };
                    $AEV(r, "click", r.showTooltip);
                    this.current = [v, t];
                    return r
                };
                n.prototype.showTooltip = function(q, s, p, r) {
                    var o, t, u;
                    t = {
                        collection: function() {
                            var y, x, w, D, C, v, z;
                            D = [];
                            if (r.support_unassigned !== false) {
                                x = {
                                    name: _("Unassigned"),
                                    id: null,
                                    email: ""
                                };
                                x.full_name = x.name;
                                D.push(x)
                            }
                            z = f.getAll(p);
                            for (C = 0, v = z.length; C < v; C++) {
                                w = z[C];
                                y = {};
                                $update(y, w);
                                if (y.id === window.User.id) {
                                    y.name = _("Me")
                                } else {
                                    y.name = w.full_name
                                }
                                D.push(y)
                            }
                            return D
                        },
                        filterItem: function(y, w) {
                            var v, x;
                            if (y.id === null) {
                                v = l("cmp_share_person user_avatar", 16, 16);
                                x = SPAN({
                                    c: "name_email"
                                }, y.full_name)
                            } else {
                                x = $setHTML(SPAN({
                                    c: "name_email truncated"
                                }), w);
                                v = c.renderAvatar(y, "small")
                            }
                            return DIV({
                                c: "amicomplete_entry"
                            }, v, x)
                        },
                        onSelect: (function(v) {
                            return function(x) {
                                var w;
                                v.current_uid = x.id;
                                if ($isFunction(r.select_fn)) {
                                    s = r.select_fn(x.id)
                                }
                                q.showTooltip = null;
                                $swap(q, q = v.render(s, p, r));
                                a();
                                if (r.onExitFocus) {
                                    return r.onExitFocus()
                                } else {
                                    w = $parent(q, "form");
                                    if (w) {
                                        return $gc(w, null, "richtext_editor").proxyFocus()
                                    }
                                }
                            }
                        })(this),
                        wildcard_match: true
                    };
                    o = new g(t);
                    if (!r.left_offset) {
                        r.left_offset = 205
                    }
                    u = o.showTooltip({
                        title: _("Assign a person"),
                        icon: q,
                        top_offset: 25,
                        left_offset: r.left_offset,
                        fn_on_hide: function() {
                            return o = null
                        }
                    });
                    return $addClass(u.g_window, "person_selecter")
                };
                n.prototype.resetSelectedPerson = function() {
                    return this.current_uid = void 0
                };
                return n
            })();
            b.exports = new k()
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../avatars/.coffee.Avatars.js": 14,
            "../notes/.coffee.NotesUtils.js": 59
        }
    ],
    66: [
        function(d, c, f) {
            var i, g, l, m, k, j, a, b, h = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            a = window.Signals;
            i = window.AmiTooltip;
            l = window.Dateist;
            g = window.DateUtils;
            j = d("../../models/.coffee.ItemsModel.js");
            b = d("../../models/.coffee.UtilModels.js");
            k = d("../items_utils/.coffee.ItemCommonEdits.js");
            m = (function() {
                function n() {
                    this.postPoneUpdate = h(this.postPoneUpdate, this)
                }
                n.prototype.postPoneUpdate = function(u, v) {
                    var s, r, q, p, t, o;
                    if (v == null) {
                        v = false
                    }
                    q = [];
                    r = {};
                    p = [];
                    for (t = 0, o = u.length; t < o; t++) {
                        s = u[t];
                        if (!s.json) {
                            continue
                        }
                        this.postPoneModel(s.json);
                        p.push(s.json);
                        q.push(s)
                    }
                    k.markForUndo(p, "postpone", _("%s task(s) postponed"));
                    k.updateItems(q, true, v);
                    i.hide();
                    a.sendSignal("update_counters");
                    return false
                };
                n.prototype.postPoneModel = function(r) {
                    var u, q, o, p, t, s;
                    try {
                        s = b.getNewDate(r, false), t = s[0], p = s[1], q = s[2], o = s[3]
                    } catch (v) {
                        u = v;
                        if (u === "INVALID_DATE") {
                            alert(_("Invalid date") + ": " + r.date_string)
                        } else {
                            if (u === "END_REACHED") {
                                j.complete(r.id, true)
                            } else {
                                alert("" + u);
                                return
                            }
                        }
                    }
                    if (!r.date_string) {
                        r.date_string = g.format(l.parse("tomorrow").due_date)
                    }
                    return j.update(r.id, {
                        due_date: t,
                        date_string: r.date_string
                    })
                };
                return n
            })();
            c.exports = new m()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.UtilModels.js": 157,
            "../items_utils/.coffee.ItemCommonEdits.js": 34
        }
    ],
    67: [
        function(c, d, b) {
            var f, h, i, g, a;
            i = window.Signals;
            a = window.track;
            g = c("../misc/Misc.js").isMacStore;
            h = c("../../models/.coffee.ProjectsModel.js");
            f = (function() {
                function j() {
                    i.connect("check_premium_promo", this.checkEmpty)
                }
                j.prototype.checkEmpty = function() {
                    var k, l;
                    if (window.User.is_premium) {
                        k = $("premium_promotion");
                        if (k) {
                            $remove(k)
                        }
                        return
                    }
                    l = function() {
                        var m;
                        m = h.getAll();
                        if (m.length === 1 && m[0].cache_count === 0) {
                            return true
                        } else {
                            return false
                        }
                    };
                    k = $("premium_promotion");
                    if (g()) {
                        return $hide(k)
                    } else {
                        if (l()) {
                            return $hide(k)
                        } else {
                            if ($isHidden(k)) {
                                if (window.User.karma > 530) {
                                    $show(k);
                                    $fx.fadeIn(k);
                                    return k.onclick = function() {
                                        a("PremiumPromotion", "AgressiveClick");
                                        return true
                                    }
                                }
                            }
                        }
                    }
                };
                return j
            })();
            d.exports = new f()
        }, {
            "../../models/.coffee.ProjectsModel.js": 143,
            "../misc/Misc.js": 54
        }
    ],
    68: [
        function(c, b, f) {
            var h, d, i, a, j, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            a = window.Signals;
            h = c("../../models/.coffee.ItemsModel.js");
            d = c("../notes/Notes.js");
            j = c("../templates/.coffee.Templates.js");
            i = (function() {
                function k() {
                    this.removeOverlay = g(this.removeOverlay, this);
                    this.addOverlay = g(this.addOverlay, this);
                    this.attach = g(this.attach, this)
                }
                k.prototype.attach = function(l) {
                    var m;
                    if (!window.User.is_premium) {
                        return
                    }
                    m = l.editor_instance_div;
                    m.addEventListener("dragleave", (function(n) {
                        return function(o) {
                            $preventDefault(o);
                            return n.removeOverlay(o, m)
                        }
                    })(this), true);
                    m.addEventListener("dragenter", (function(n) {
                        return function(o) {
                            $preventDefault(o);
                            return n.addOverlay(o, m)
                        }
                    })(this), true);
                    m.addEventListener("dragover", (function(n) {
                        return function(o) {
                            $preventDefault(o);
                            return n.addOverlay(o, m)
                        }
                    })(this), true);
                    return m.addEventListener("drop", (function(n) {
                        return function(o) {
                            var p, r, q;
                            $preventDefault(o);
                            n.removeOverlay(o, m);
                            p = n._getFile(o);
                            if (p) {
                                q = l.project_id;
                                if (p.name.indexOf(".csv") !== -1 || p.name.indexOf(".txt") !== -1) {
                                    return j.showImport(q)
                                } else {
                                    r = h.add({
                                        project_id: q,
                                        content: p.name,
                                        item_order: h.getMaxOrder(q)
                                    });
                                    a.sendSignal("refresh_interface", [], true);
                                    d.loadAndShow(r.id);
                                    return setTimeout(function() {
                                        if (d.submit_fn) {
                                            return d.submit_fn()
                                        }
                                    }, 50)
                                }
                            }
                        }
                    })(this), true)
                };
                k.prototype.addOverlay = function(l, p) {
                    var m, o, n;
                    this.clearTimeout(p);
                    if (!p.attach_overlay) {
                        $addClass(p, "drop_over");
                        o = _("Add file as task / Import from template");
                        $add($body(), m = DIV({
                            c: "attach_overlay"
                        }, SPAN(o)));
                        n = $position(p);
                        $setWidth(m, p.offsetWidth);
                        $setHeight(m, p.offsetHeight);
                        $setTop(m, n.y);
                        $setLeft(m, n.x);
                        return p.attach_overlay = m
                    }
                };
                k.prototype.removeOverlay = function(l, m) {
                    this.clearTimeout(m);
                    return m.attach_timeout = setTimeout((function(n) {
                        return function() {
                            $removeClass(m, "drop_over");
                            if (m.attach_overlay) {
                                $remove(m.attach_overlay);
                                m.attach_overlay = null
                            }
                            return n.clearTimeout(m)
                        }
                    })(this), 100)
                };
                k.prototype.clearTimeout = function(l) {
                    if (l.attach_timeout) {
                        clearTimeout(l.attach_timeout);
                        return l.attach_timeout = null
                    }
                };
                k.prototype._getFile = function(l) {
                    var m, n;
                    n = l.dataTransfer && l.dataTransfer.files;
                    if (n) {
                        m = $first(n);
                        if (m) {
                            return m
                        }
                    }
                    return null
                };
                return k
            })();
            b.exports = new i()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../notes/Notes.js": 61,
            "../templates/.coffee.Templates.js": 100
        }
    ],
    69: [
        function(d, f, a) {
            var c, g, h, i, b = function(j, k) {
                    return function() {
                        return j.apply(k, arguments)
                    }
                };
            i = window.Signals;
            h = d("../../models/.coffee.ProjectsModel.js");
            g = d("../../menus/MenuProjectEditor.js");
            c = (function() {
                j.prototype.DepProjectEditor = null;

                function j() {
                    this.attachMouseMove = b(this.attachMouseMove, this);
                    this.externalServicesAnnotation = b(this.externalServicesAnnotation, this);
                    this.setAsActive = b(this.setAsActive, this);
                    this.toggleProject = b(this.toggleProject, this);
                    this.showProjects = b(this.showProjects, this);
                    this.getCurrentProjectId = b(this.getCurrentProjectId, this);
                    this.createEditorInstance = b(this.createEditorInstance, this);
                    this.getEditorsById = b(this.getEditorsById, this);
                    this.getEditorById = b(this.getEditorById, this);
                    this.getCurrentEditor = b(this.getCurrentEditor, this);
                    this.reset = b(this.reset, this);
                    this.current_cancel = null;
                    this.current_form = null;
                    this.current_holder = null;
                    this.current_editors = [];
                    i.connect("projects.rerender", (function(k) {
                        return function(t) {
                            var r, m, q, o, n, s, l, p;
                            m = {};
                            p = k.current_editors;
                            for (o = 0, s = p.length; o < s; o++) {
                                r = p[o];
                                m[r.project_id] = r
                            }
                            for (n = 0, l = t.length; n < l; n++) {
                                q = t[n];
                                r = m[parseInt(q)];
                                if (r) {
                                    r.reRender()
                                }
                            }
                            return m = null
                        }
                    })(this));
                    i.connect("projects.rerender.all", (function(k) {
                        return function() {
                            return k.reRender()
                        }
                    })(this));
                    i.connect("projects.reset", (function(k) {
                        return function() {
                            return k.reset()
                        }
                    })(this));
                    i.connect("project.name.changed", (function(k) {
                        return function(m) {
                            var l;
                            l = k.getEditorById(m.id);
                            if (l) {
                                return l.setProjectTitle(m.name)
                            }
                        }
                    })(this));
                    i.connect("external_service_annotation", this.externalServicesAnnotation)
                }
                j.prototype.reset = function(m) {
                    var l, o, k, n;
                    if (m == null) {
                        m = true
                    }
                    this.current_cancel = null;
                    this.current_form = null;
                    this.current_editor = null;
                    this.current_project_id = null;
                    this.current_holder = null;
                    if (m) {
                        n = this.current_editors;
                        for (o = 0, k = n.length; o < k; o++) {
                            l = n[o];
                            l.remove()
                        }
                        this.current_editors = []
                    }
                    return i.sendSignal("project_editor_manager_reset")
                };
                j.prototype.getCurrentEditor = function() {
                    return this.current_editor
                };
                j.prototype.getEditorById = function(l) {
                    var m, o, k, n;
                    n = this.current_editors;
                    for (o = 0, k = n.length; o < k; o++) {
                        m = n[o];
                        if (m.project_id === l) {
                            return m
                        }
                    }
                    return null
                };
                j.prototype.getEditorsById = function() {
                    var m, k, o, l, n;
                    k = {};
                    n = this.current_editors;
                    for (o = 0, l = n.length; o < l; o++) {
                        m = n[o];
                        k[m.project_id] = true
                    }
                    return k
                };
                j.prototype.createEditorInstance = function(k) {
                    var l;
                    l = new this.DepProjectEditor();
                    l.initWithData(k);
                    this.current_editors.push(l);
                    return l
                };
                j.prototype.getCurrentProjectId = function() {
                    return this.current_project_id
                };
                j.prototype.showProjects = function(l, s, k) {
                    var p, o, r, m, n, q;
                    if (!k) {
                        k = {}
                    }
                    if (!k.holder) {
                        k.holder = $("editor")
                    }
                    if (window.FLUID_MINI) {
                        r = $("blank_state_project_list");
                        if (r) {
                            $remove(r)
                        }
                    }
                    this.reset();
                    if (k.dont_replace_holder !== true) {
                        $replace(k.holder, null)
                    }
                    this.current_holder = k.holder;
                    if (l.length > 1) {
                        $addClass(k.holder, "project_editors_multiple")
                    } else {
                        $removeClass(k.holder, "project_editors_multiple")
                    }
                    p = 0;
                    for (n = 0, q = l.length; n < q; n++) {
                        o = l[n];
                        m = this.createEditorInstance(o);
                        m.holder = k.holder;
                        if (!this.current_project_id) {
                            if (k.update_location !== false) {
                                i.sendSignal("change_location", "project/" + o)
                            }
                            this.setAsActive(m, true)
                        }
                        m.showProjectDelayed(p);
                        p += 20
                    }
                    this.externalServicesAnnotation(window.CURRENT_EXERNAL_SERVICE);
                    if ($isFunction(s)) {
                        s()
                    }
                    return setTimeout(function() {
                        return i.sendSignal("rendered.projects")
                    }, 50)
                };
                j.prototype.toggleProject = function(r) {
                    var k, n, m, q, p, l, o;
                    k = null;
                    m = [];
                    o = this.current_editors;
                    for (p = 0, l = o.length; p < l; p++) {
                        n = o[p];
                        if (n.project_id === r) {
                            k = n
                        } else {
                            m.push(n)
                        }
                    }
                    $addClass(this.current_holder, "project_editors_multiple");
                    if (k) {
                        if (this.current_editor === k) {
                            this.reset(false)
                        }
                        this.current_editors = m;
                        k.remove();
                        return false
                    } else {
                        q = this.createEditorInstance(r);
                        q.holder = this.current_holder;
                        q.showProject();
                        return true
                    }
                };
                j.prototype.setAsActive = function(k, l) {
                    if (l == null) {
                        l = false
                    }
                    if (l === false && this.current_form || g.get().shown) {
                        return
                    }
                    if (this.current_project_id === k.project_id) {
                        return
                    }
                    this.current_project_id = k.project_id;
                    this.current_editor = k;
                    $removeClass($all("div", "project_editor_instance"), "current_editor");
                    $addClass(k.editor_instance_div, "current_editor");
                    return this.externalServicesAnnotation(window.CURRENT_EXERNAL_SERVICE)
                };
                j.prototype.externalServicesAnnotation = function(l) {
                    var n, m, o, k;
                    if (!this.current_editor) {
                        return
                    }
                    n = $("add_link");
                    if (n) {
                        $remove(n)
                    }
                    if (l) {
                        o = l.annotate_text;
                        m = l.annotate_fn;
                        k = this.current_editor.controller;
                        if (!k) {
                            return
                        }
                        n = A({
                            href: "#",
                            "class": "action",
                            id: "add_link"
                        }, o);
                        $add(k, n);
                        return n.onclick = (function(p) {
                            return function() {
                                p.current_editor.addNewItem(false, function() {
                                    var q;
                                    q = $gc(p.current_form, null, "richtext_editor");
                                    if (q && m) {
                                        return m(q)
                                    }
                                });
                                return false
                            }
                        })(this)
                    }
                };
                j.prototype.attachMouseMove = function(k) {
                    return $AEV(k.editor_instance_div, "mouseover", (function(l) {
                        return function() {
                            if (l.current_project_id !== k.project_id) {
                                return l.setAsActive(k)
                            }
                        }
                    })(this))
                };
                j.prototype.checkEmpty = function() {
                    if (this.current_editor) {
                        return this.current_editor.checkEmpty()
                    }
                };
                j.prototype.removeEmpty = function() {
                    if (this.current_editor) {
                        return this.current_editor.removeEmpty()
                    }
                };
                j.prototype.reRender = function() {
                    var m, l, p, o, k, n;
                    l = [];
                    n = this.current_editors;
                    for (o = 0, k = n.length; o < k; o++) {
                        m = n[o];
                        p = h.get(m.project_id);
                        if (!p) {
                            m.remove();
                            continue
                        }
                        m.reRender();
                        l.push(m)
                    }
                    return this.current_editors = l
                };
                return j
            })();
            f.exports = new c()
        }, {
            "../../menus/MenuProjectEditor.js": 120,
            "../../models/.coffee.ProjectsModel.js": 143
        }
    ],
    70: [
        function(c, f, b) {
            var d, a;
            a = c("../project_list/.coffee.ProjectListUtils.js");
            d = c("../formatter/Formatter.js");
            b.generateLink = function(g) {
                var i, h;
                h = $setHTML(SPAN(), d.formatSimple(g.name));
                i = A({
                    href: "#",
                    c: "project_link"
                }, h);
                $AEV(i, "click", function() {
                    a.setCurrentById(g.id, null, null, false);
                    window.scroll(0, 0);
                    return false
                });
                return i
            }
        }, {
            "../formatter/Formatter.js": 27,
            "../project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    71: [
        function(g, h, c) {
            var f, a, b, d = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            f = window.GB_show;
            b = g("../../models/.coffee.TemporaryIds.js");
            a = (function() {
                function i() {
                    this.showEmails = d(this.showEmails, this)
                }
                i.prototype.showEmails = function(j) {
                    var k;
                    k = function(m) {
                        var l;
                        l = "/Emails/view?project_id=" + m;
                        return f(_("Add tasks via Email"), l, 500, 600)
                    };
                    return this.customShowGb(j, k)
                };
                i.prototype.customShowGb = function(j, k) {
                    return b.waitToResolve(j, function(l) {
                        return k(l)
                    })
                };
                return i
            })();
            h.exports = new a()
        }, {
            "../../models/.coffee.TemporaryIds.js": 155
        }
    ],
    72: [
        function(h, g, N) {
            var E = window.ElementStore;
            var G = window.Signals;
            var a = window.Indicator;
            var l = window.Alerts;
            var J = window.AmiTooltip;
            var s = window.AmiCheckbox;
            var O = window.MiniCal;
            var f = window.imageSprite;
            var q = window.track;
            var j = h("../project_list/.coffee.ProjectListUtils.js");
            var F = h("../notes/Notes.js");
            var L = h("../labels/Labels.js");
            var z = h("../project_editor/.coffee.ProjectEditorManager.js");
            var b = h("../project_editor/.coffee.ProjectEditorDragAndDropFiles.js");
            var u = h("../agenda/.coffee.AgendaUtils.js");
            var R = h("../left_menu/.coffee.LeftMenu.js");
            var k = h("../sharing/.coffee.SharingManager.js");
            var H = h("../people_assigner/.coffee.PeopleAssigner.js");
            var m = h("../premium_promotion/.coffee.PremiumPromotion.js");
            var Q = h("../action_perfomed/.coffee.ActionPerformed.js");
            var C = h("../items_utils/.coffee.ItemEdit.js");
            var U = h("../items_utils/.coffee.ItemsRender.js");
            var i = h("../items_utils/ItemForms.js");
            var c = h("../items_utils/.coffee.ItemCheckbox.js");
            var K = h("../items_utils/ItemDueDates.js");
            var d = h("../items_utils/.coffee.ItemCommonEdits.js");
            var W = h("../generic_manager/GenericManager.js");
            var D = h("../generic_manager/GenericManagerUtils.js");
            var t = h("../generic_manager/GenericArrows.js");
            var x = h("../formatter/Formatter.js");
            var T = h("../../models/.coffee.TemporaryIds.js");
            var n = h("../../models/.coffee.ProjectsModel.js");
            var V = h("../../models/.coffee.ItemsModel.js");
            var o = h("../../models/.coffee.Collaborators.js");
            var v = h("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            var p = h("../../menus/MenuProjectGear.js");
            var S = h("../../menus/MenuProjectEditor.js");
            var r = h("../../menus/.coffee.MenuPriorities.js");
            var w = h("./.coffee.ProjectEditorUtils.js");
            var M = {
                init: function() {
                    p.init(z);
                    S.init(z);
                    r.init(z);
                    T.listenAll(function(Y, X) {
                        var Z = "item_" + X;
                        var ac = "item_" + Y;
                        var ab = $(ac);
                        if (ab) {
                            ab.id = Z;
                            $removeClass(ab, ac);
                            $addClass(ab, Z)
                        }
                        var aa = z.getEditorById(Y);
                        if (aa) {
                            aa.project_id = X
                        }
                        if (z.current_project_id == Y) {
                            z.current_project_id = X
                        }
                    })
                }
            };
            var y = W.extend({
                initWithData: function(X) {
                    var Y = {
                        list_class: "ProjectEditor",
                        data_model: V,
                        max_indent: 5,
                        undo_reorder_intent: "reorder_project_editor",
                        arrows: new t({
                            data_model: V
                        }),
                        state_manager: z,
                        empty_text: _("This project has no tasks. Add some now!")
                    };
                    Y.arrows.setList(this);
                    this.parent(Y);
                    this.project_id = X;
                    this.current_limit = 0;
                    this.history_fetch_count = 0;
                    this.menu = S.get();
                    $bindMethods(this)
                },
                remove: function() {
                    if (this.editor_instance_div) {
                        $remove(this.current_list, this.current_his_list, this.editor_instance_div, this.right_task_actions_div, this.history_icon_div);
                        E.remove(this.editor_instance_div);
                        this.state_manager = null;
                        this.current_list = null;
                        this.current_his_list = null;
                        this.menu = null;
                        this.arrows.data_model = null;
                        this.arrows = null;
                        this.editor_instance_div = null;
                        this.project_header_link = null
                    }
                },
                showProjectDelayed: function(X) {
                    if (X) {
                        setTimeout(this.showProject, X)
                    } else {
                        this.showProject()
                    }
                },
                showProject: function() {
                    var Z = this;
                    var X = n.get(this.project_id);
                    if (X) {
                        var Y = V.getByProjectId(X.id);
                        return Z._showProject(X, Y)
                    } else {
                        var aa = $requestJSON("/API/v6/projects/get_data");
                        aa.offline_message = true;
                        aa.addCallback(function(ab) {
                            Z._showProject(ab.project, ab.items)
                        });
                        aa.addErrback(function(ac, ab) {
                            if (ab.status == 404) {
                                alert(_("Project not found"))
                            } else {
                                alert(ac)
                            }
                        });
                        aa.sendReq({
                            token: window.User.token,
                            project_id: this.project_id
                        })
                    }
                },
                _showProject: function(X, aa) {
                    u.reset();
                    var Z = this;
                    this.render();
                    var Y = this.current_list = UL({
                        c: "items"
                    });
                    $add(Y, LI({
                        c: "reorder_item task_item"
                    }));
                    var ab = this.current_his_list = UL({
                        c: "items history",
                        id: "project_history"
                    });
                    $map(aa, function(ae) {
                        var ad = Z.renderItem(ae);
                        $add(Y, ad)
                    });
                    D.showHideChildren($AF(Y.childNodes));
                    $replace(this.list_editor, Z.renderProjectHeader(X));
                    $add(this.list_editor, Y);
                    $replace(this.history_editor, null);
                    $swap(this.history_editor, this.history_editor = DIV({
                        c: "history_desc"
                    }, ab));
                    if (this.edit_on_load) {
                        var ac = this.edit_on_load;
                        $map($AF(this.current_list.childNodes), function(ad) {
                            if (ad.json.id == ac) {
                                Z.current_item = ad;
                                Z.editCurrentItem()
                            }
                        });
                        this.edit_on_load = null
                    }
                    this.checkEmpty();
                    j.flashItemIfNeeded();
                    Z.arrows.updateArrows();
                    if (X.is_archived) {
                        $hide(this.controller)
                    } else {
                        $show(this.controller)
                    }
                    $hide(this.history_editor, this.history_controller);
                    $show(this.history_icon_div);
                    R.hide();
                    if (window.User.karma >= 100 && !X.inbox_project) {
                        k.promoCheck()
                    }
                },
                renderProjectHeader: function(X) {
                    var Z = w.generateLink(X);
                    this.project_header_link = Z;
                    var Y = H2({
                        c: "project_header section_header"
                    }, Z, this.right_task_actions_div = this.renderActions());
                    this.h2_title = Y;
                    if (X.is_archived) {
                        this.showArchived()
                    }
                    return Y
                },
                showArchived: function() {
                    this.hideArchived();
                    $add(this.h2_title, SPAN({
                        c: "desc"
                    }, _("Archived")));
                    $hide(this.right_task_actions_div)
                },
                hideArchived: function() {
                    $remove($all("span", "desc", this.h2_title));
                    $show(this.right_task_actions_div)
                },
                setProjectTitle: function(X) {
                    $setHTML($gc(this.project_header_link, "span"), x.formatSimple(X))
                },
                showHistory: function() {
                    $show(this.history_editor, this.history_controller);
                    $hide(this.history_icon_div);
                    this.getMoreHistory();
                    return false
                },
                getMoreHistory: function() {
                    var X = this;
                    Q.mark("ProjectEditor/getMoreHistory");
                    var Z = this.fetch_history;
                    $hide(Z);
                    this.history_fetch_count++;
                    a.addToElm(Z.parentNode);
                    var Y = $requestJSON("Items/getMoreHistory");
                    Y.offline_message = true;
                    Y.addCallback(function(ab) {
                        var af = X.current_his_list;
                        $remove($all("li", "empty", af));
                        a.removeFromElm(Z.parentNode);
                        $map(ab.completed, function(ah) {
                            var ag = X.renderHistoryItem(ah);
                            $add(af, ag)
                        });
                        var ad = X.history_fetch_count;
                        var aa = ab.completed.length;
                        if (ad == 1 && aa < 10 && aa > 0) {
                            null
                        } else {
                            if (ab.completed.length < 10) {
                                var ac;
                                var ae;
                                if (ad > 1) {
                                    ae = _("No more completed tasks")
                                } else {
                                    ae = _("No completed tasks")
                                }
                                $add(af, ac = LI({
                                    c: "empty"
                                }, ae));
                                $fx.fadeOut(ac, {
                                    duration: 3000,
                                    onComplete: function() {
                                        $show(X.history_icon_div);
                                        $remove(ac)
                                    }
                                })
                            } else {
                                $show(Z)
                            }
                        }
                        X.arrows.updateArrows();
                        X.current_limit += ab.completed.length
                    });
                    Y.addErrback(function() {
                        a.removeFromElm(Z.parentNode)
                    });
                    if (this.current_limit === 0) {
                        this.current_limit = this.current_his_list.childNodes.length
                    }
                    Y.sendReq({
                        current_limit: this.current_limit,
                        project_id: this.project_id
                    });
                    return false
                },
                clearCompletedTasks: function() {
                    var X = this;
                    var Y = _("Are you sure you want to delete all the completed items?");
                    l.confirm(Y, function(aa) {
                        if (aa) {
                            var Z = $request("/API/v6/completed/delete_from_project");
                            Z.offline_message = true;
                            Z.addCallback(function() {
                                var ab = UL({
                                    c: "items history"
                                });
                                $swap(X.current_his_list, ab);
                                X.current_his_list = ab
                            });
                            Z.sendReq({
                                token: window.User.token,
                                project_id: X.project_id
                            })
                        }
                    });
                    return false
                },
                renderEmpty: function() {
                    return null
                },
                renderItem: function(ab, aa) {
                    var Y = this;
                    if (!aa) {
                        aa = {
                            fn_toggle_menu: S.toggle,
                            fn_complete_item: this.completeItem,
                            fn_undo_complete_item: this.uncompleteItem,
                            with_due_date: true
                        }
                    }
                    var ac = n.get(ab.project_id);
                    var Z = true;
                    if (ab.is_archived || aa.not_editable || !ac || ac.is_archived) {
                        Z = false
                    }
                    if (!Z) {
                        aa.no_checkbox = true;
                        aa.no_drag_and_drop = true;
                        aa.not_editable = true
                    }
                    var X = U.renderItem(ab, aa);
                    X.render_opts.renderCls = Y;
                    if (Z) {
                        i.attachClick(X.content, function() {
                            Y.saveCurrentItem(function() {
                                Y.current_item = X;
                                Y.editCurrentItem()
                            });
                            return true
                        })
                    }
                    return X
                },
                render: function() {
                    this.controller = DIV({
                        c: "controller actions pe_controller"
                    });
                    this.add_item = A({
                        href: "",
                        c: "action"
                    }, SPAN({
                        c: "icon icon-add"
                    }), _("Add Task"));
                    this.add_item.onclick = this.addNewItem;
                    $add(this.controller, this.add_item);
                    var Y;
                    $ATT(this.controller, this.history_icon_div = DIV({
                        c: "history_icon"
                    }, Y = A({
                        href: "#"
                    }, f("cmp_history_big", 26, 16))));
                    J.showSimpleText(Y, _("Show completed tasks"));
                    $AEV(Y, ["click", "touchstart"], this.showHistory);
                    this.history_editor = DIV({
                        c: "list_editor history"
                    });
                    this.history_controller = DIV({
                        c: "controller actions his_ctrl"
                    });
                    this.fetch_history = A({
                        href: "#",
                        c: "action"
                    }, _("Fetch more completed"), "...");
                    $AEV(this.fetch_history, ["click", "touchstart"], this.getMoreHistory);
                    $replace(this.history_controller, this.fetch_history);
                    $hide(this.history_controller, this.history_editor);
                    this.list_editor = DIV({
                        c: "list_editor"
                    });
                    var X = this.holder;
                    if (!X) {
                        X = $("editor")
                    }
                    $add(X, this.editor_instance_div = DIV({
                        c: "project_editor_instance"
                    }, this.list_editor, this.controller, this.history_editor, this.history_controller));
                    E.set(this.editor_instance_div, "editor", this);
                    if (z.current_project_id == this.project_id) {
                        $addClass(this.editor_instance_div, "current_editor")
                    }
                    z.attachMouseMove(this);
                    b.attach(this)
                },
                renderActions: function() {
                    var Z = this;
                    var aa;
                    var ac = n.get(this.project_id);
                    if (ac && !ac.inbox_project) {
                        var ab = f("cmp_share_project", 26, 16);
                        aa = A({
                            href: "#"
                        }, ab);
                        $AEV(aa, ["click", "touchstart"], function() {
                            k.show(Z.project_id);
                            return false
                        });
                        J.showSimpleText(aa, _("Share options"));
                        var X = o.getAll(this.project_id);
                        if (X && X.length > 1) {
                            $add(aa, SPAN("" + X.length))
                        }
                    }
                    var Y = A({
                        href: "#"
                    }, f("cmp_task_actions icon", 26, 16));
                    J.showSimpleText(Y, _("Task actions"));
                    $AEV(Y, ["click", "touchstart"], function() {
                        J.hide();
                        return p.get().toggle(Y, Y)
                    });
                    return DIV({
                        c: "right_task_actions"
                    }, aa, Y)
                },
                renderHistoryItem: function(ad) {
                    V._addToModel(ad, true, false);
                    var ab = x.format(ad.content);
                    var Z = TBODY();
                    var ae = TABLE(Z);
                    var af = TD();
                    var Y = TD({
                        c: "content"
                    });
                    $add(Z, TR(af, Y));
                    var aa = SPAN();
                    $setHTML(aa, ab);
                    $add(Y, aa);
                    var ac = LI({
                        c: "task_item history_item",
                        id: "item_" + ad.id
                    }, ae);
                    $addClass(ac, "item_" + ad.id);
                    ac.json = ad;
                    F.annotate(ad, aa, ac);
                    $add(Y, $setHTML(DIV(), L.format("", ad)));
                    if (ad.indent == 1) {
                        var X = c.create(ac, this.uncompleteItem);
                        $add(af, DIV({
                            c: "div_checker"
                        }, X));
                        s.setChecked(X, 1)
                    }
                    D.setIndent(ac, ad.indent);
                    return ac
                },
                reRender: function() {
                    var aa = this;
                    var X = n.get(this.project_id);
                    if (X) {
                        var Z = V.getByProjectId(X.id);
                        var Y = UL({
                            c: "items"
                        });
                        $add(Y, LI({
                            c: "reorder_item task_item"
                        }));
                        $map(Z, function(ac) {
                            var ab = aa.renderItem(ac);
                            $add(Y, ab)
                        });
                        D.showHideChildren($AF(Y.childNodes));
                        $swap(aa.current_list, Y);
                        aa.current_list = Y;
                        $swap(aa.right_task_actions_div, aa.right_task_actions_div = aa.renderActions());
                        aa.setProjectTitle(X.name)
                    }
                    if (!X) {
                        aa.remove()
                    } else {
                        if (X.is_archived) {
                            $hide(aa.controller);
                            this.showArchived()
                        } else {
                            $show(aa.controller);
                            this.hideArchived()
                        }
                    } if (aa.current_list) {
                        aa.arrows.updateArrows();
                        aa.checkEmpty()
                    }
                },
                addItem: function(Z, ae) {
                    var af = this;
                    var ad = $parent(Z, "li");
                    var ab = C.parseFormData(Z);
                    if (!ab) {
                        return false
                    }
                    C.genericAddItem(Z, ab);
                    if (ab.content !== "") {
                        var Y = V.add(ab);
                        if (Y) {
                            if (v.reminders.length > 0) {
                                v.commitBuffered(Y)
                            }
                            var X = af.renderItem(Y);
                            $addClass(X, "item_added");
                            $swap(ad, X);
                            this.editingDone(X);
                            var ac = n.get(Y.project_id);
                            if (ac && o.isProjectShared(ac.id)) {
                                H.current_uid = Y.responsible_uid
                            }
                            if ($isFunction(ae)) {
                                ae(Y)
                            } else {
                                af.showAddItem(true, false)
                            }
                            af.incNextSiblings(X);
                            if (ac.inbox_project) {
                                q("Tasks", "Add", "Inbox")
                            } else {
                                q("Tasks", "Add", "ProjectView")
                            }
                            return false
                        }
                    }
                    this.current_item = ad;
                    if ($isFunction(ae)) {
                        ae(true)
                    }
                    var aa = $gc(Z, null, "richtext_editor");
                    if (aa) {
                        aa.proxyFocus()
                    }
                    return false
                },
                showAddItem: function(Z, aa, ae) {
                    z.setAsActive(this);
                    var af = this;
                    if (k.promo_shown) {
                        k.promoRemove()
                    }
                    this.parent(Z, aa, ae);
                    S.get().hide(true, null);
                    var X = function() {
                        v.reset();
                        af.checkEmpty();
                        af.arrows.updateArrows();
                        O.remove();
                        C.genericCancelEdit()
                    };
                    var ac = {
                        cancel: i.genCancel("li", X, z),
                        action: af.addItem,
                        submit_val: _("Add Task"),
                        submit_icon: "cmp_add",
                        name_val: "",
                        manager_reodering: true,
                        manager_type: "project_editor"
                    };
                    if (!Z) {
                        H.current_uid = undefined
                    }
                    var ab = C.generateForm(ac);
                    z.current_cancel = ac.cancel;
                    z.current_form = ab.form;
                    var ad = ab.li_item;
                    if (Z === true) {
                        var Y = D.getIndent(this.current_item) || 1;
                        D.setIndent(ad, Y)
                    } else {
                        ad.indent = D.getIndent(ad)
                    }
                    ad.priority = 1;
                    z.current_editor.insertForm(ab.li_item, aa);
                    this.arrows.updateArrows();
                    ab.textarea.proxyFocus();
                    return false
                },
                addNewItem: function(Z, aa) {
                    var X = this;
                    Q.mark("ProjectEditor/addNewItem");
                    var Y = function() {
                        if (Z === true) {
                            X.current_item = X.getItem($first)
                        } else {
                            X.current_item = X.getItem($last)
                        }
                        X.showAddItem(false, Z === true, true);
                        if ($isFunction(aa)) {
                            aa()
                        }
                    };
                    z.current_editor.saveCurrentItem(Y);
                    return false
                },
                saveItem: function(Y, ad) {
                    var af = this;
                    var aa = z.current_form;
                    var Z = z.current_editor.current_item;
                    var ab = Z.nextSibling;
                    var ae = C.genericSaveItem(Z, aa);
                    if (!ae) {
                        return
                    }
                    var X = af.renderItem(ae.item);
                    $addClass(X, "item_updated");
                    $swap(Z, X);
                    this.editingDone(X);
                    var ac = X.nextSibling;
                    if (ab != ac) {
                        this.incNextSiblings(X)
                    }
                    q("Tasks", "Edit", "ProjectView");
                    if ($isFunction(ad)) {
                        ad()
                    }
                    return false
                },
                editCurrentItem: function() {
                    O.remove();
                    z.setAsActive(this);
                    if (k.promo_shown) {
                        k.promoRemove()
                    }
                    var Y = this;
                    this.parent();
                    S.get().hide(true, null);
                    var ad = this.current_item;
                    J.hide();
                    var Z = function() {
                        $show(ad);
                        Y.arrows.updateArrows();
                        O.remove();
                        C.genericCancelEdit()
                    };
                    var ab = ad.json.due_date;
                    var aa = ad.json.date_string || "";
                    var X = {
                        cancel: i.genCancel("li", Z, z),
                        action: Y.saveItem,
                        submit_val: _("Save"),
                        name_val: ad.json.content,
                        due_date: ab,
                        date_string: aa,
                        current_item: ad,
                        priority: ad.json.priority,
                        manager_reodering: true,
                        manager_type: "project_editor"
                    };
                    var ac = C.generateForm(X);
                    z.current_cancel = X.cancel;
                    z.current_form = ac.form;
                    $addAfter(ac.li_item, ad);
                    this.arrows.updateArrows();
                    setTimeout(function() {
                        var ae = ac.textarea;
                        ae.proxyPlaceCursor()
                    }, 1)
                },
                completeItem: function(X, aa, ac) {
                    var Y = this;
                    Q.mark("ProjectEditor/completeItem");
                    if (aa && aa.shift) {
                        ac = true
                    }
                    var Z = V.complete(X.json, ac);
                    var ab = $first(Z);
                    $rmap(Z, function(ad) {
                        var ae = $("item_" + ad.id);
                        if (!ae) {
                            return
                        }
                        if (ab.in_history) {
                            C.removeItemInList(ae)
                        } else {
                            if (ad.checked) {
                                c.update(ae, 1, Y.uncompleteItem)
                            } else {
                                $update(ae.json, ad);
                                c.update(ae, 0, Y.completeItem);
                                K.updateDueDate(ae)
                            }
                        }
                    });
                    this.arrows.updateArrows();
                    this.checkEmpty();
                    G.sendSignal("update_counters");
                    if (ac) {
                        q("Tasks", "CompleteForced", "ProjectView")
                    } else {
                        q("Tasks", "Complete", "ProjectView")
                    }
                },
                uncompleteItem: function(Y) {
                    var Z = this;
                    Q.mark("ProjectEditor/uncompleteItem");
                    var aa = V.uncomplete(Y.json);
                    if ($hasClass(Y, "history_item")) {
                        $remove(Y);
                        var X = this.renderItem(aa);
                        $add(this.current_list, X)
                    } else {
                        $update(Y.json, aa);
                        c.update(Y, 0, this.completeItem)
                    }
                    Z.arrows.updateArrows();
                    Z.checkEmpty();
                    G.sendSignal("update_counters")
                },
                editingDone: function(X) {
                    z.current_cancel = null;
                    z.current_form = null;
                    this.arrows.updateArrows();
                    this.current_item = X;
                    G.sendSignal("update_counters")
                },
                deleteCurrentItem: function(Y) {
                    q("Tasks", "Delete", "ProjectView");
                    var X = D.getChildren(Y, true);
                    return d.deleteItems(X)
                },
                checkEmpty: function() {
                    this.parent();
                    m.checkEmpty()
                }
            });
            g.exports = {
                ProjectEditorGeneric: M,
                ProjectEditor: y
            }
        }, {
            "../../menus/.coffee.MenuPriorities.js": 111,
            "../../menus/MenuProjectEditor.js": 120,
            "../../menus/MenuProjectGear.js": 121,
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.Reminders.js": 147,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../action_perfomed/.coffee.ActionPerformed.js": 2,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../formatter/Formatter.js": 27,
            "../generic_manager/GenericArrows.js": 29,
            "../generic_manager/GenericManager.js": 30,
            "../generic_manager/GenericManagerUtils.js": 31,
            "../items_utils/.coffee.ItemCheckbox.js": 33,
            "../items_utils/.coffee.ItemCommonEdits.js": 34,
            "../items_utils/.coffee.ItemEdit.js": 35,
            "../items_utils/.coffee.ItemsRender.js": 37,
            "../items_utils/ItemDueDates.js": 38,
            "../items_utils/ItemForms.js": 39,
            "../labels/Labels.js": 44,
            "../left_menu/.coffee.LeftMenu.js": 46,
            "../notes/Notes.js": 61,
            "../people_assigner/.coffee.PeopleAssigner.js": 65,
            "../premium_promotion/.coffee.PremiumPromotion.js": 67,
            "../project_editor/.coffee.ProjectEditorDragAndDropFiles.js": 68,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../project_list/.coffee.ProjectListUtils.js": 76,
            "../sharing/.coffee.SharingManager.js": 93,
            "./.coffee.ProjectEditorUtils.js": 70
        }
    ],
    73: [
        function(f, c, j) {
            var h, i, b, l, g, a, d, k = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            l = window.Indicator;
            a = window.Signals;
            h = f("../../mini/.coffee.DimensionCalculator.js");
            g = f("../../models/.coffee.ProjectsModel.js");
            d = f("../../models/.coffee.SyncEngine.js");
            b = f("../generic_manager/GenericManagerUtils.js");
            i = (function() {
                function m() {
                    this.unarchive = k(this.unarchive, this);
                    this.archive = k(this.archive, this);
                    this.showHideArchived = k(this.showHideArchived, this);
                    this.getArchived = k(this.getArchived, this);
                    this.render = k(this.render, this)
                }
                m.prototype.DepProjectList = null;
                m.prototype.render = function() {
                    var n;
                    $add($("project_list_man"), DIV({
                        c: "controller actions his_ctrl",
                        id: "projects_archived_holder"
                    }, UL({
                        id: "projects_archived_ul",
                        c: "items generic_left_list"
                    }), n = A({
                        href: "#",
                        id: "archived_link"
                    }, _("Archived projects"))));
                    return $AEV(n, "click", $p(this.getArchived, n))
                };
                m.prototype.getArchived = function(p) {
                    var n, q, o;
                    $hide(p);
                    n = $("projects_archived_holder");
                    q = $("projects_archived_ul");
                    l.addToElm(n.parentNode);
                    o = $requestJSON("/API/v6/projects/get_archived");
                    o.offline_message = true;
                    o.addCallback((function(r) {
                        return function(u) {
                            var t, w, x, v, s;
                            l.removeFromElm(n.parentNode);
                            $replace(q, null);
                            for (v = 0, s = u.length; v < s; v++) {
                                x = u[v];
                                x.indent = 1;
                                $add(q, r.DepProjectList.renderItem(x, true))
                            }
                            h.recalculate();
                            if (u.length === 0) {
                                $add(q, t = LI({
                                    c: "empty"
                                }, _("No archived projects")));
                                w = function() {
                                    $remove(t);
                                    return $show(p)
                                };
                                return $fx.fadeOut(t, {
                                    duration: 3000,
                                    onComplete: w
                                })
                            } else {
                                return r.showHideArchived()
                            }
                        }
                    })(this));
                    o.addErrback(function() {
                        return l.removeFromElm(n.parentNode)
                    });
                    o.sendReq({
                        token: window.User.token
                    });
                    return false
                };
                m.prototype.showHideArchived = function() {
                    var n;
                    n = $("archived_link");
                    if (n) {
                        $show(n);
                        $setHTML(n, _("Hide Archived"));
                        return n.onclick = (function(o) {
                            return function() {
                                $replace($("projects_archived_ul"), null);
                                $setHTML(n, _("Archived projects"));
                                n.onclick = $p(o.getArchived, n);
                                return false
                            }
                        })(this)
                    }
                };
                m.prototype.archive = function(q) {
                    var p, o, r, n;
                    g.archive(q.json.id);
                    a.sendSignal("project_archived", q.json.id);
                    o = b.getChildren(q, true);
                    o.reverse();
                    for (r = 0, n = o.length; r < n; r++) {
                        p = o[r];
                        p.json.is_archived = true;
                        p.json.indent = 1;
                        b.setIndent(p, 1);
                        $remove(p);
                        $ATT($("projects_archived_ul"), this.DepProjectList.renderItem(p.json, true))
                    }
                    this.DepProjectList.arrows.updateArrows();
                    a.sendSignal("update_counters");
                    a.sendSignal("projects.rerender.all");
                    return this.showHideArchived()
                };
                m.prototype.unarchive = function(p) {
                    var s, o, r, n, q;
                    g.unarchive(p.json.id);
                    q = b.getChildren(p, true);
                    for (r = 0, n = q.length; r < n; r++) {
                        o = q[r];
                        $remove(o)
                    }
                    s = {
                        onSuccess: (function(t) {
                            return function() {
                                return setTimeout(function() {
                                    t.DepProjectList.reRender();
                                    t.DepProjectList.arrows.updateArrows();
                                    a.sendSignal("update_counters");
                                    return a.sendSignal("projects.rerender.all")
                                }, 50)
                            }
                        })(this)
                    };
                    d.sync(s, true);
                    return a.sendSignal("project_unarchived", p.json.id)
                };
                return m
            })();
            c.exports = new i()
        }, {
            "../../mini/.coffee.DimensionCalculator.js": 125,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.SyncEngine.js": 152,
            "../generic_manager/GenericManagerUtils.js": 31
        }
    ],
    74: [
        function(c, d, b) {
            var a, f;
            a = ["#95ef63", "#ff8581", "#ffc471", "#f9ec75", "#a8c8e4", "#d2b8a3", "#e2a8e4", "#cccccc", "#fb886e", "#ffcc00", "#74e8d3", "#3bd5fb"];
            f = a.concat(["#dc4fad", "#ac193d", "#d24726", "#82ba00", "#03b3b2", "#008299", "#5db2ff", "#0072c6", "#000000", "#777777"]);
            b.get = function() {
                if (window.User.is_premium) {
                    return f
                } else {
                    return a
                }
            }
        }, {}
    ],
    75: [
        function(i, a, t) {
            var n, q, d, s, m, g, c, p, l, f, h, k, r, u, j, o, b = function(v, w) {
                    return function() {
                        return v.apply(w, arguments)
                    }
                };
            j = window.Signals;
            q = i("../../mini/.coffee.DimensionCalculator.js");
            p = i("../../menus/.coffee.MenuProjctColors.js");
            l = i("../../menus/MenuProjectList.js");
            u = i("../../models/.coffee.ProjectsModel.js");
            n = i("../../models/.coffee.Collaborators.js");
            o = i("../../models/.coffee.TemporaryIds.js");
            c = i("../generic_left_list/.coffee.GenericLeftList.js");
            g = i("../generic_manager/GenericArrows.js");
            d = i("../drag_and_drop/.coffee.DragAndDrop.js");
            h = i("../project_editor/.coffee.ProjectEditorManager.js");
            f = i("./.coffee.ProjectColors.js");
            m = c.extend({
                name: "ProjectList",
                initWithData: function() {
                    var w, y, x, v;
                    y = {
                        event_name: "Projects",
                        data_model: u,
                        fn_get_all: function() {
                            return u.getAll()
                        },
                        icon: "icon-project",
                        undo_reorder_intent: "reorder_project_list",
                        max_indent: 4,
                        default_color: 7,
                        empty_text: _("You have no projects"),
                        add_text: _("Add Project"),
                        placeholder: _("Project name"),
                        list_holder: "project_list_man",
                        DragAndDrop: d,
                        with_color: true,
                        with_arrows: true,
                        with_indent: true,
                        with_ordering: true,
                        manager_reodering: true,
                        manager_type: "project_list",
                        empty_screen_only_with_activity: true,
                        fn_on_click: (function(z) {
                            return function(F, E, D) {
                                var C;
                                if (D.shift || D.ctrl) {
                                    $preventDefault(D);
                                    if (!h.current_editor) {
                                        z.setCurrent(F)
                                    } else {
                                        C = h.toggleProject(E.id);
                                        if (C) {
                                            $addClass(F, "current")
                                        } else {
                                            $removeClass(F, "current")
                                        }
                                    }
                                    return false
                                } else {
                                    z.setCurrent(F);
                                    return window.scroll(0, 0)
                                }
                            }
                        })(this),
                        fn_show_items: h.showProjects,
                        fn_on_delete: function(C) {
                            var E, D, z;
                            for (D = 0, z = C.length; D < z; D++) {
                                E = C[D];
                                j.sendSignal("project_deleted", E)
                            }
                            h.reRender();
                            return j.sendSignal("update_counters")
                        },
                        fn_create_counter: k.createCounter,
                        fn_get_selected: h.getEditorsById,
                        fn_on_show_menu: (function(z) {
                            return function(G) {
                                var F, D, C, E;
                                if (G.json.inbox_project) {
                                    $hide($all("tr", "project_inbox_action", z.menu.menu_holder));
                                    return
                                } else {
                                    $show($all("tr", "project_inbox_action", z.menu.menu_holder))
                                }
                                C = $("menu_archive_text");
                                F = G.json.is_archived;
                                if (F) {
                                    $setHTML(C, _("Unarchive"));
                                    $hide($all("tr", "project_archive_action", z.menu.menu_holder))
                                } else {
                                    $setHTML(C, _("Archive"));
                                    $show($all("tr", "project_archive_action", z.menu.menu_holder))
                                }
                                D = n.isProjectShared(G.json.id);
                                E = $("menu_delete_text");
                                if (D) {
                                    return $setHTML(E, _("Leave project"))
                                } else {
                                    return $setHTML(E, _("Delete project"))
                                }
                            }
                        })(this)
                    };
                    w = y.arrows = new g({
                        data_model: y.data_model,
                        x_off: -6
                    });
                    w.setList(this);
                    v = w._switchState;
                    x = function(C, z) {
                        v(C, z);
                        j.sendSignal("update_project_count", C.host_item.json);
                        return q.recalculate()
                    };
                    w._switchState = x;
                    y.arrows = w;
                    $bindMethods(this);
                    y.fn_create_color = this.createColor;
                    y.menu = l.init(this);
                    y.menu_colors = p.init();
                    j.connect("project_editor_manager_reset", (function(z) {
                        return function() {
                            if (z.current_selected) {
                                z.deselectCurrent();
                                return z.current_selected = null
                            }
                        }
                    })(this));
                    j.connect("projects.reset", (function(z) {
                        return function() {
                            return z.deselectCurrent()
                        }
                    })(this));
                    return this.parent(y)
                },
                createColor: function(w, x) {
                    var v;
                    if (x == null) {
                        x = false
                    }
                    v = this.createColorDiv("project_color_" + w.id, w.color, f.get());
                    if (x !== true && n.isProjectShared(w.id)) {
                        $removeClass(v, "icon-project");
                        $addClass(v, "icon-project-shared")
                    }
                    return v
                },
                projectDeleted: j.connect("project_deleted", (function(v) {
                    return function(w) {
                        if (w === v.current_selected) {
                            h.reset();
                            $replace($("editor"), null);
                            v.current_selected = null
                        }
                        return $remove(w)
                    }
                })(this))
            });
            s = (function() {
                function v() {
                    this.createCounter = b(this.createCounter, this);
                    this.updateColor = b(this.updateColor, this);
                    this.updateCount = b(this.updateCount, this);
                    $AEV(window, "load", function() {
                        return o.listenAll(function(x, w) {
                            var y;
                            y = $("project_count_" + x);
                            if (y) {
                                y.id = "project_count_" + w
                            }
                            y = $("project_color_" + x);
                            if (y) {
                                return y.id = "project_color_" + w
                            }
                        })
                    });
                    j.connect("update_project_color", this.updateColor);
                    j.connect("update_project_count", this.updateCount)
                }
                v.prototype.updateCount = function(w) {
                    var x;
                    x = $("project_count_" + w.id);
                    if (x) {
                        return $swap(x, this.createCounter(w))
                    }
                };
                v.prototype.updateColor = function(w) {
                    var x;
                    x = $("project_color_" + w.id);
                    if (x) {
                        return $swap(x, r.createColor(w))
                    }
                };
                v.prototype.createCounter = function(D) {
                    var E, y, x, C, w, z;
                    y = D.cache_count || 0;
                    if (D.collapsed) {
                        z = u.getChildren(D);
                        for (C = 0, w = z.length; C < w; C++) {
                            E = z[C];
                            y += E.cache_count
                        }
                    }
                    if (y === 0) {
                        y = ""
                    }
                    x = DIV({
                        c: "counter_count",
                        id: "project_count_" + D.id
                    }, "" + y);
                    return x
                };
                return v
            })();
            k = new s();
            r = new m();
            a.exports = r
        }, {
            "../../menus/.coffee.MenuProjctColors.js": 112,
            "../../menus/MenuProjectList.js": 122,
            "../../mini/.coffee.DimensionCalculator.js": 125,
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../generic_left_list/.coffee.GenericLeftList.js": 28,
            "../generic_manager/GenericArrows.js": 29,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "./.coffee.ProjectColors.js": 74
        }
    ],
    76: [
        function(c, d, b) {
            var f, a;
            a = c("../generic_manager/GenericManagerUtils.js");
            b.Deps = f = {
                ProjectList: null
            };
            b.setCurrentById = function(j, g, i, h) {
                return f.ProjectList.setCurrentById(j, g, i, h)
            };
            b.createColor = function(g, h) {
                if (h == null) {
                    h = false
                }
                return f.ProjectList.createColor(g, h)
            };
            b.deselectCurrent = function() {
                return f.ProjectList.deselectCurrent()
            };
            b.flashItemIfNeeded = function(h) {
                var g;
                if (h == null) {
                    h = void 0
                }
                if (h === void 0) {
                    h = f.ProjectList.flash_item
                }
                if (h) {
                    f.ProjectList.flash_item = null;
                    g = $("item_" + h);
                    if (g) {
                        if (!$isHidden(g)) {
                            $fx.highlight(g, {
                                duration: 1000
                            });
                            return window.scrollTo(0, $position(g).y - 200)
                        }
                    }
                }
            }
        }, {
            "../generic_manager/GenericManagerUtils.js": 31
        }
    ],
    77: [
        function(c, b, g) {
            var f, a, i, k, d, j, h = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            a = window.GB_hide;
            f = window.AmiCompleteSelect;
            j = window.imageSprite;
            d = c("../../models/.coffee.ProjectsModel.js");
            k = c("../project_list/.coffee.ProjectListUtils.js");
            i = (function() {
                function l() {
                    this.renderPItem = h(this.renderPItem, this);
                    this.showTooltip = h(this.showTooltip, this);
                    this.render = h(this.render, this)
                }
                l.prototype.render = function(o, q) {
                    var m, p, n;
                    p = d.get(o);
                    m = this.renderPItem(p, q);
                    n = A({
                        href: "#"
                    }, m, j("cmp_arrow_down", 7, 4));
                    if (q.fixed_pos) {
                        $addClass(n, "fixed_pos")
                    }
                    n.showTooltip = $p(this.showTooltip, n, q);
                    $AEV(n, "click", n.showTooltip);
                    this.current = n;
                    return n
                };
                l.prototype.showTooltip = function(n, r) {
                    var m, o, p, q;
                    p = r.selectedItem;
                    o = {
                        selectedItem: p,
                        collection: function() {
                            return d.getAll()
                        },
                        filterItem: (function(s) {
                            return function(t) {
                                var u;
                                if (!t) {
                                    return
                                }
                                u = DIV(s.renderPItem(t, r));
                                if (t.indent > 1) {
                                    $addClass(u, "indent_" + t.indent)
                                }
                                return u
                            }
                        })(this),
                        onSelect: (function(s) {
                            return function(t) {
                                a();
                                if (!r.no_swap) {
                                    n.showTooltip = null;
                                    $swap(n, n = s.render(t.id, r));
                                    s.current = n
                                }
                                if ($isFunction(r.onSelect)) {
                                    return r.onSelect(t, n)
                                }
                            }
                        })(this),
                        wildcard_match: true
                    };
                    m = new f(o);
                    q = m.showTooltip({
                        title: _("Select a project"),
                        icon: n,
                        arrow_left_offset: r.arrow_left_offset || 0,
                        top_offset: r.top_offset || 25,
                        left_offset: r.left_offset || 25,
                        fn_on_hide: function() {
                            return m = null
                        }
                    });
                    return false
                };
                l.prototype.renderPItem = function(p) {
                    var n, o, m;
                    n = k.createColor(p);
                    o = p.name.replace(/\*\s*/, "");
                    m = SPAN({
                        c: "project_select_item"
                    }, n, SPAN({
                        c: "truncated p_name"
                    }, o));
                    return m
                };
                return l
            })();
            b.exports = new i()
        }, {
            "../../models/.coffee.ProjectsModel.js": 143,
            "../project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    78: [
        function(d, f, b) {
            var a, g, h, c = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            a = window.GB_showHTML;
            h = window.imageSprite;
            g = (function() {
                function i() {
                    this.show = c(this.show, this)
                }
                i.prototype.show = function(n, m) {
                    var j, k, l;
                    l = 530;
                    j = 600;
                    if (window.FLUID_MINI) {
                        l = 290;
                        j = 200
                    }
                    k = this.renderHolder(n, m);
                    return a(_("Premium Only"), k, j, l)
                };
                i.prototype.renderHolder = function(n, k) {
                    var l, j, m;
                    m = _("<a>Upgrade to Todoist Premium</a> for instant access to this and a lot of other features").replace("<a>", '<a href="/premium" target="_blank">');
                    m += ".";
                    if (window.FLUID_MINI) {
                        m = m.replace("</a>", "</a><br>")
                    }
                    if (k) {
                        j = DIV({
                            c: "text"
                        }, k)
                    }
                    l = DIV(DIV({
                        c: "premium_only"
                    }, DIV({
                        c: "p_banner"
                    }, DIV({
                        c: "p_banner_logo"
                    }, h("cmp_premium_logo", 197, 29)), DIV({
                        c: "p_banner_img"
                    }, h("cmp_premium_banner", 178, 96))), DIV({
                        c: "p_header"
                    }, $setHTML(SPAN(), n)), j, DIV({
                        c: "text"
                    }, $setHTML(SPAN(), m))));
                    return l
                };
                return i
            })();
            f.exports = new g()
        }, {}
    ],
    79: [
        function(m, b, E) {
            var w, g, a, r, x, p, u, c, z, h, i, q, y, s, d, C, k, v, l, o, D, n, j, t, f = function(F, G) {
                    return function() {
                        return F.apply(G, arguments)
                    }
                };
            n = window.Signals;
            d = window.MiniCal;
            x = window.AmiTooltip;
            r = window.AmiComplete;
            z = window.GB_hide;
            h = window.GB_showHTML;
            c = window.DateUtils;
            a = window.Alerts;
            t = window.track;
            w = m("../agenda/Agenda.js");
            g = m("../agenda/.coffee.AgendaCurrentDays.js");
            v = m("../project_editor/.coffee.ProjectEditorUtils.js");
            l = m("../project_list/.coffee.ProjectListUtils.js");
            k = m("../project_editor/.coffee.ProjectEditorManager.js");
            o = m("../project_selecter/.coffee.ProjectSelecter.js");
            C = m("../people_assigner/.coffee.PeopleAssigner.js");
            q = m("../items_utils/.coffee.ItemEdit.js");
            y = m("../items_utils/ItemForms.js");
            D = m("../../models/.coffee.ProjectsModel.js");
            s = m("../../models/.coffee.ItemsModel.js");
            p = m("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            u = m("../../models/.coffee.Collaborators.js");
            j = m("./.coffee.SmartPrefilling.js");
            i = (function() {
                F.prototype.shown = false;
                F.prototype.support_annotation = true;

                function F() {
                    this.externalServicesAnnotation = f(this.externalServicesAnnotation, this);
                    this.hide = f(this.hide, this);
                    this.addTask = f(this.addTask, this);
                    this._show = f(this._show, this);
                    this.toggle = f(this.toggle, this);
                    $AEV(document, ["keydown", "keypress"], (function(G) {
                        return function(H) {
                            if (!H.meta && !H.alt && H.keyAscii === 81 && H.ctrl) {
                                G.toggle();
                                $preventDefault(H);
                                return false
                            }
                        }
                    })(this));
                    n.connect("external_service_annotation", this.externalServicesAnnotation)
                }
                F.prototype.toggle = function() {
                    var G;
                    if (this.shown) {
                        return false
                    }
                    G = k.current_editor;
                    if (G) {
                        return G.saveCurrentItem(this._show)
                    } else {
                        return this._show()
                    }
                };
                F.prototype._show = function() {
                    var O, L, J, K, Q, N, S, R, T, M, G, H;
                    R = $("icon_add_task");
                    C.current_uid = null;
                    C.current = null;
                    d.arrow_left = false;
                    $addClass($body(), "body_quick_add_task");
                    this.shown = true;
                    x.hide();
                    if (D.getAll().length === 0) {
                        this.shown = false;
                        alert(DIV(B(_("You have no projects")), BR(), _("Tasks are added to projects."), " ", _("Add your first project now!")));
                        return false
                    }
                    M = this.renderProjectList();
                    L = {
                        cancel: y.genCancel("li", this.hide, this, " "),
                        action: this.addTask,
                        submit_val: _("Add Task"),
                        submit_icon: "cmp_add",
                        name_val: "",
                        indent_arrows: false,
                        with_esc_cancel: false,
                        no_indent: true,
                        due_date_focus: function() {
                            var U;
                            U = C.current;
                            if (U) {
                                U[0]();
                                return U[1].onExitFocus = function() {
                                    return o.current.showTooltip()
                                }
                            } else {
                                return o.current.showTooltip()
                            }
                        }
                    };
                    O = g.getNonOverdue();
                    if (O.length > 0) {
                        J = O[0];
                        K = c.dateistResultFromDate(J);
                        L.date_string = K.date_string;
                        L.date_lang = K.date_lang;
                        L.due_date = K.due_date
                    }
                    N = q.generateForm(L);
                    T = j.prefillLabel();
                    if (T && N.textarea.proxyGetValue() === "") {
                        N.textarea.proxySetValue("@" + T + " ")
                    }
                    $setHeight(N.textarea, 19);
                    Q = $child(N.form, "td", "form_content");
                    $add(Q, DIV({
                        c: "select_project"
                    }, M));
                    S = DIV({
                        c: "quick_add_task manager",
                        id: "quick_add_task"
                    }, N.form);
                    $add(S, this.quick_add_annotate = DIV({
                        id: "quick_add_annotate"
                    }, this.quick_annotate_link = A({
                        href: "#",
                        "class": "action",
                        id: "quick_annotate_link"
                    }, this.quick_annotate_icon = null, this.quick_annotate_text = SPAN(_("Attach email to task")))));
                    $hide(this.quick_add_annotate);
                    $setOpacity(this.quick_add_annotate, 0);
                    H = 440;
                    this.task_added = false;
                    h(_("Add Task"), S, 210, H, {
                        fn_arrow_left: function() {
                            var U;
                            U = $position(R);
                            return U.x + 5
                        },
                        close_validator_fn: (function(U) {
                            return function() {
                                var V, W;
                                V = N.textarea;
                                if (U.task_added) {
                                    return true
                                }
                                W = $strip(V.proxyGetValue());
                                if (W.length !== 0) {
                                    a.confirmYesNo(_("Are you sure you want to cancel your current task?"), function(X) {
                                        if (X) {
                                            U.hide();
                                            return p.reset()
                                        } else {
                                            return V.proxyFocus()
                                        }
                                    });
                                    return false
                                }
                                U.hide();
                                p.reset();
                                return true
                            }
                        })(this),
                        fn_left_offset: function(V, U) {
                            var W;
                            W = $position(R);
                            if ($winSize().w < 380) {
                                return 10
                            }
                            return W.x - (U.width / 2) - 25
                        },
                        fn_top_offset: function() {
                            return 40
                        }
                    });
                    N.textarea.proxyPlaceCursor();
                    G = $child(N.form, "a", "submit_btn");
                    $AEV(G, "keydown", function(U) {
                        if (U.key === 9) {
                            N.textarea.proxyFocus();
                            return false
                        }
                    });
                    this.externalServicesAnnotation(window.CURRENT_EXERNAL_SERVICE);
                    return false
                };
                F.prototype.renderProjectList = function() {
                    var G, H;
                    G = j.prefillProject();
                    this.current_pid = G;
                    p.current_project_id = G;
                    H = o.render(G, {
                        selectedItem: (function(J) {
                            return function() {
                                return D.get(J.current_pid)
                            }
                        })(this),
                        left_offset: 10,
                        arrow_left_offset: 5,
                        top_offset: 30,
                        onSelect: (function(J) {
                            return function(M, L) {
                                var N, K;
                                N = $parent(L, "form");
                                $child(N, "a", "submit_btn").focus();
                                J.current_pid = M.id;
                                p.current_project_id = M.id;
                                K = $child(N, "td", "people_assigner_holder");
                                if (u.isProjectShared(J.current_pid)) {
                                    return $replace(K, C.render({}, J.current_pid))
                                } else {
                                    C.current = null;
                                    return $replace(K, null)
                                }
                            }
                        })(this)
                    });
                    return H
                };
                F.prototype.addTask = function(K) {
                    var L, H, J, G;
                    L = q.parseFormData(K);
                    if (!L || L.content === "") {
                        $gc(K, null, "richtext_editor").proxyFocus();
                        return false
                    }
                    q.genericAddItem(K, L);
                    delete L.item_order;
                    L.project_id = this.current_pid;
                    G = s.getByProjectId(L.project_id);
                    if (G.length > 0) {
                        L.item_order = $last(G).item_order + 1
                    }
                    J = s.add(L);
                    if (!J) {
                        $gc(K, null, "richtext_editor").proxyFocus();
                        return false
                    }
                    if (p.reminders.length > 0) {
                        p.commitBuffered(J)
                    }
                    H = k.getEditorById(J.project_id);
                    if (J.labels && J.labels.length > 0 && j.prefillLabel()) {
                        n.sendSignal("refresh_interface", null, true)
                    } else {
                        if (J.due_date && !H) {
                            w.get().flash_item = J.id;
                            if (g.isAdded(J.due_date)) {
                                n.sendSignal("refresh_interface", null, true)
                            } else {
                                w.get().query(c.format(J.due_date))
                            }
                        } else {
                            if (H) {
                                H.reRender()
                            } else {
                                l.setCurrentById(J.project_id)
                            }
                            l.flashItemIfNeeded(J.id)
                        }
                    }
                    n.sendSignal("update_counters");
                    this.task_added = true;
                    this.hide();
                    t("Tasks", "Add", "QuickAdd");
                    return false
                };
                F.prototype.hide = function() {
                    if (this.interval_set) {
                        clearTimeout(this.interval_set);
                        this.interval_set = null
                    }
                    q.genericCancelEdit();
                    this.support_annotation = true;
                    this.shown = false;
                    $removeClass($body(), "body_quick_add_task");
                    r.hide();
                    if ($all("div", "manage_reminders").length > 0) {
                        z(null, false)
                    }
                    z(null, false);
                    return true
                };
                F.prototype.externalServicesAnnotation = function(H) {
                    var G;
                    if (!this.quick_annotate_link || !this.support_annotation) {
                        return
                    }
                    if (!this.support_annotation) {
                        return
                    }
                    if (H) {
                        if ($isHidden(this.quick_add_annotate)) {
                            $show(this.quick_add_annotate);
                            setTimeout((function(J) {
                                return function() {
                                    return $setOpacity(J.quick_add_annotate, 1)
                                }
                            })(this), 10)
                        }
                        G = $child($("quick_add_task"), null, "richtext_editor");
                        this.quick_annotate_link.onclick = $p(H.annotate_fn, G);
                        return $setHTML(this.quick_annotate_text, H.annotate_text)
                    } else {
                        $setOpacity(this.quick_add_annotate, 0);
                        return $hide(this.quick_add_annotate)
                    }
                };
                return F
            })();
            b.exports = new i()
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.Reminders.js": 147,
            "../agenda/.coffee.AgendaCurrentDays.js": 3,
            "../agenda/Agenda.js": 12,
            "../items_utils/.coffee.ItemEdit.js": 35,
            "../items_utils/ItemForms.js": 39,
            "../people_assigner/.coffee.PeopleAssigner.js": 65,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../project_editor/.coffee.ProjectEditorUtils.js": 70,
            "../project_list/.coffee.ProjectListUtils.js": 76,
            "../project_selecter/.coffee.ProjectSelecter.js": 77,
            "./.coffee.SmartPrefilling.js": 80
        }
    ],
    80: [
        function(b, c, a) {
            var h, f, d, g;
            g = b("../project_editor/.coffee.ProjectEditorManager.js");
            f = b("../labels_list/.coffee.LabelsList.js");
            d = b("../left_menu/.coffee.LeftMenuTabs.js");
            h = (function() {
                function i() {}
                i.prototype.prefillProject = function() {
                    var j;
                    j = g.current_project_id;
                    if (!j) {
                        j = window.User.inbox_project
                    }
                    return j
                };
                i.prototype.prefillLabel = function() {
                    var j;
                    if (!g.current_project_id && d.getCurrentTab() === "labels") {
                        j = f.getCurrentSelect();
                        if (j && j.json) {
                            return j.json.name
                        }
                    }
                };
                return i
            })();
            c.exports = new h()
        }, {
            "../labels_list/.coffee.LabelsList.js": 45,
            "../left_menu/.coffee.LeftMenuTabs.js": 47,
            "../project_editor/.coffee.ProjectEditorManager.js": 69
        }
    ],
    81: [
        function(h, b, s) {
            var a, l, n, k, r, o, m, q, i, f, p, g, t, j, c, d = function(u, v) {
                    return function() {
                        return u.apply(v, arguments)
                    }
                };
            l = window.AmiComplete;
            j = window.Signals;
            g = h("../project_list/.coffee.ProjectListUtils.js");
            i = h("../labels_list/.coffee.LabelsList.js");
            n = h("../filters_list/.coffee.FiltersList.js");
            q = h("../labels/Labels.js");
            p = h("../notes/Notes.js");
            a = h("../agenda/.coffee.AgendaUtils.js");
            c = h("../left_menu/.coffee.TopFilters.js");
            r = h("../formatter/Formatter.js");
            t = h("../../models/.coffee.ProjectsModel.js");
            m = h("../../models/.coffee.ItemsModel.js");
            f = h("../../models/.coffee.LabelsModel.js");
            k = h("../../models/.coffee.FiltersModel.js");
            o = (function() {
                function u() {
                    this.attach = d(this.attach, this)
                }
                u.prototype.KEY_AT = 64;
                u.prototype.mode = "labels";
                u.prototype.attach = function(D) {
                    var w, E, y, F, G, C, z, H, x, v;
                    F = function() {
                        return q.getCompletionLabels()
                    };
                    x = function(K, J) {
                        return $setHTML(SPAN(), J)
                    };
                    C = function(L, K, J) {
                        return l.onSelect(L, K, J)
                    };
                    E = function(K, L) {
                        var N, M, J;
                        for (M = 0, J = K.length; M < J; M++) {
                            N = K[M];
                            N.type = L
                        }
                        return K
                    };
                    y = (function(J) {
                        return function(L) {
                            var K;
                            L = L.toLowerCase();
                            K = [];
                            K = K.concat(E(t.getByName(L, 3), "project"));
                            K = K.concat(E(m.getByName(L, 5), "item"));
                            if (window.User.is_premium) {
                                K = K.concat(E(f.getByName(L, 2), "label"))
                            }
                            K = K.concat(E(k.getByName(L, 2), "filter"));
                            K = K.concat(J.getByFilters(L));
                            if (K.length > 0) {
                                K.push({
                                    name: _("Query all tasks"),
                                    forced: true,
                                    type: "search"
                                })
                            }
                            return K
                        }
                    })(this);
                    v = function(M, J) {
                        var L, K, N;
                        K = $setHTML(SPAN({
                            c: "auto_complete_generic auto_complete_s_" + M.type
                        }), J);
                        switch (M.type) {
                            case "project":
                                $ATT(K, g.createColor(M, false));
                                L = t.getParent(M);
                                if (L) {
                                    $add(K, I({
                                        c: "parent"
                                    }, L.name))
                                }
                                break;
                            case "label":
                                $ATT(K, i.createColor(M, false));
                                break;
                            case "filter":
                                $ATT(K, n.createColor(M, false));
                                break;
                            case "item":
                                N = r.formatSimple(M.content);
                                N = N.replace(/\[\[(?:outlook|gmail|thunderbird)=(.+?),\s*(.+?)\]\]/, "$2");
                                N = N.replace(/<[^>]+>/g, "");
                                $setHTML(K, N);
                                $ATT(K, DIV({
                                    c: "auto_complete_task"
                                }));
                                break;
                            default:
                                $ATT(K, DIV({
                                    c: "auto_complete_search"
                                }))
                        }
                        return K
                    };
                    H = function(K, J) {
                        switch (J.type) {
                            case "project":
                                j.sendSignal("select_projects_tab");
                                g.setCurrentById(J.id);
                                break;
                            case "item":
                                if (window.User.is_premium) {
                                    p.loadAndShow(J.id)
                                } else {
                                    j.sendSignal("select_projects_tab");
                                    g.setCurrentById(J.project_id, J.id)
                                }
                                break;
                            case "label":
                                i.setCurrentById(J.id);
                                j.sendSignal("select_labels_tab");
                                break;
                            case "filter":
                                n.setCurrentById(J.id);
                                j.sendSignal("select_filters_tab");
                                break;
                            case "search":
                                a.query(D.value);
                                break;
                            case "today":
                                c.queryToday();
                                break;
                            case "seven_days":
                                c.query7days()
                        }
                        l.hide();
                        a.blur();
                        return false
                    };
                    G = (function(J) {
                        return function(L, K, M) {
                            if (L.keyAscii === J.KEY_AT) {
                                l.hide();
                                M.require_trigger = true;
                                M.wildcard_match = false;
                                M.omni_match = false;
                                M.trigger = "@";
                                M.collection = F;
                                M.filterItem = x;
                                return M.onclick = C
                            } else {
                                if (!K.amicomplete_word) {
                                    K.amicomplete_word = K.value;
                                    M.require_trigger = false;
                                    M.wildcard_match = true;
                                    M.omni_match = true;
                                    M.onNoMatches = function() {
                                        return l.hide()
                                    };
                                    M.collection = y;
                                    M.filterItem = v;
                                    return M.onclick = H
                                }
                            }
                        }
                    })(this);
                    w = {
                        keyPressListener: G
                    };
                    l.attach(D, w);
                    z = function() {
                        if (D.value.length === 0) {
                            return l.hide()
                        }
                    };
                    $AEV(D, "blur", function() {
                        return setTimeout(z, 10)
                    });
                    $AEV(D, "keyup", z);
                    return $AEV(D, "keydown", function(J) {
                        l.hide_manage = true;
                        if (J.keyAscii === 13 && !J.shift) {
                            if (l.shown()) {
                                return false
                            }
                        }
                        if (J.keyAscii === 27) {
                            if (l.shown()) {
                                return false
                            }
                        }
                    })
                };
                u.prototype.getByFilters = function(y) {
                    var v, w, x;
                    v = [];
                    x = _("Today");
                    if (x.toLowerCase().indexOf(y) !== -1) {
                        v.push({
                            name: x,
                            type: "today"
                        })
                    }
                    w = _("Next 7 days");
                    if (w.toLowerCase().indexOf(y) !== -1) {
                        v.push({
                            name: w,
                            type: "seven_days"
                        })
                    }
                    return v
                };
                return u
            })();
            b.exports = new o()
        }, {
            "../../models/.coffee.FiltersModel.js": 132,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../filters_list/.coffee.FiltersList.js": 26,
            "../formatter/Formatter.js": 27,
            "../labels/Labels.js": 44,
            "../labels_list/.coffee.LabelsList.js": 45,
            "../left_menu/.coffee.TopFilters.js": 48,
            "../notes/Notes.js": 61,
            "../project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    82: [
        function(d, b, g) {
            var l, c, j, h, f, a, m, k, i = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            a = window.Signals;
            c = window.AmiComplete;
            j = window.AmiTooltip;
            k = window.imageSprite;
            l = d("../agenda/.coffee.AgendaUtils.js");
            m = d("../themes/.coffee.Themes.js");
            h = d("./.coffee.AutoComplete.js");
            f = (function() {
                function n() {
                    this.renderHelpIcon = i(this.renderHelpIcon, this);
                    this.renderSearchIcon = i(this.renderSearchIcon, this);
                    this.render = i(this.render, this);
                    this.blur = i(this.blur, this);
                    this.select = i(this.select, this);
                    this.focus = i(this.focus, this);
                    this.setPlaceholder = i(this.setPlaceholder, this);
                    this.setValue = i(this.setValue, this);
                    this.getValue = i(this.getValue, this);
                    a.connect("theme_changed", (function(o) {
                        return function() {
                            m.replaceImageClass(o.icon_search, m.getSearchIcon());
                            return m.replaceImageClass(o.icon_help_sprite, m.getSearchHelp())
                        }
                    })(this))
                }
                n.prototype.getValue = function() {
                    return this.input.value
                };
                n.prototype.setValue = function(o) {
                    return this.input.value = o
                };
                n.prototype.setPlaceholder = function(o) {
                    if (!o) {
                        o = _("Quick Find")
                    }
                    this.input_placeholder = o;
                    return this.input.placeholder = o
                };
                n.prototype.focus = function() {
                    return this.input.focus()
                };
                n.prototype.select = function() {
                    return this.input.select()
                };
                n.prototype.blur = function() {
                    this.input.placeholder = this.input_placeholder;
                    this.input.value = "";
                    this.input.amicomplete_word = "";
                    try {
                        return this.input.blur()
                    } catch (o) {}
                };
                n.prototype.render = function() {
                    var p, o;
                    this.input_placeholder = _("Quick Find");
                    this.input = INPUT({
                        "class": "quick_find fixed_pos",
                        type: "text text_box",
                        placeholder: this.input_placeholder,
                        autocomplete: "off",
                        autocorrect: "off",
                        spellcheck: "false"
                    });
                    h.attach(this.input);
                    p = FORM();
                    p.onsubmit = (function(q) {
                        return function() {
                            l.query(q.getValue());
                            q.input.blur();
                            return false
                        }
                    })(this);
                    $add(p, this.renderSearchIcon());
                    $AEV(this.icon_search, "click", this.focus);
                    $add(p, this.input);
                    o = this.renderHelpIcon();
                    $add(p, o);
                    return $add($("quick_find"), p)
                };
                n.prototype.renderSearchIcon = function() {
                    this.icon_search = k(m.getSearchIcon(), 16, 16);
                    $addClass(this.icon_search, "search_icon");
                    return this.icon_search
                };
                n.prototype.renderHelpIcon = function() {
                    var o;
                    this.icon_help = o = A({
                        href: "/Help/Filtering",
                        c: "help_icon",
                        target: "_blank"
                    }, this.icon_help_sprite = k(m.getSearchHelp(), 16, 16));
                    j.showSimpleText(o, SPAN(_("Open Quick Find by typing f"), BR(), _("Press here for more help")), null, null, 5);
                    $hide(o);
                    $AEV(this.input, "keydown", (function(p) {
                        return function(q) {
                            if (q.key === 27) {
                                if (c.shown()) {
                                    c.hide()
                                } else {
                                    p.input.blur()
                                }
                                return false
                            }
                        }
                    })(this));
                    $AEV(this.input, "focus", (function(p) {
                        return function() {
                            $setOpacity(p.icon_search, 0);
                            $setOpacity(p.icon_help, 0);
                            m.replaceImageClass(p.icon_search, m.getSearchIcon("dark"));
                            m.replaceImageClass(p.icon_help_sprite, m.getSearchHelp("dark"));
                            setTimeout(function() {
                                $setOpacity(p.icon_search, 1);
                                return $setOpacity(p.icon_help, 1)
                            }, 50);
                            $addClass(p.input, "quick_find_focused");
                            return $show(o)
                        }
                    })(this));
                    $AEV(this.input, "blur", (function(p) {
                        return function() {
                            setTimeout(function() {
                                $removeClass(p.input, "quick_find_focused");
                                $hide(o);
                                m.replaceImageClass(p.icon_search, m.getSearchIcon());
                                return m.replaceImageClass(p.icon_help_sprite, m.getSearchHelp())
                            }, 100);
                            return setTimeout(c.hide, 300)
                        }
                    })(this));
                    return o
                };
                return n
            })();
            b.exports = new f()
        }, {
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../themes/.coffee.Themes.js": 101,
            "./.coffee.AutoComplete.js": 81
        }
    ],
    83: [
        function(f, a, r) {
            var l, k, n, b, m, q, j, d, p, s, g, h, i, c, o;
            k = window.GB_getLast;
            g = window.Signals;
            l = f("../../components/agenda/Agenda.js");
            d = f("../../components/project_editor/.coffee.ProjectEditorManager.js");
            p = f("../../components/project_list/.coffee.ProjectList.js");
            s = f("../../models/.coffee.ProjectsModel.js");
            h = f("../../models/.coffee.StateModel.js");
            j = f("../../menus/MenuProjectList.js");
            q = f("../../menus/MenuProjectEditor.js");
            n = f("../../menus/MenuAgendaEdit.js");
            m = f("../../menus/MenuLabelList.js");
            b = f("../../menus/MenuFilterList.js");
            i = window.isEditingOn = function() {
                var x, w, u, t, v, y;
                y = j.get() || {};
                u = q.get() || {};
                x = n.get() || {};
                v = m.get() || {};
                t = b.get() || {};
                w = k() || h.get("drag_and_drop_mode") === h.DragMode.reordering;
                if (d.current_form || u.shown || x.shown) {
                    w = true
                }
                if (y.shown || t.shown || v.shown) {
                    w = true
                }
                if ($all("li", "manager").length > 0) {
                    w = true
                }
                if ($all("div", "drag_and_drop_handler").length > 0) {
                    w = true
                }
                if ($all("li", "selected").length > 0) {
                    w = true
                }
                return w
            };
            r.refreshInterface = c = function(t, v) {
                var u;
                if (v == null) {
                    v = false
                }
                if (window.PRINT_MODE) {
                    return false
                }
                u = i();
                if (u && v !== true) {
                    if (window.refresh_to) {
                        clearTimeout(window.refresh_to);
                        window.refresh_to = null
                    }
                    return window.refresh_to = setTimeout($p(c, t), 500)
                } else {
                    if (window.refresh_real) {
                        clearTimeout(window.refresh_real);
                        window.refresh_real = null
                    }
                    return window.refresh_real = setTimeout($p(o, t), 100)
                }
            };
            o = function(w) {
                var y, C, D, v, u, z, t, x;
                y = l.get();
                g.sendSignal("update_counters");
                if (p.is_inited) {
                    p.insertItems(s.getAll())
                }
                if (d.current_editor) {
                    C = [];
                    if (!w) {
                        x = d.current_editors;
                        for (v = 0, z = x.length; v < z; v++) {
                            D = x[v];
                            C.push(D.project_id)
                        }
                    } else {
                        for (u = 0, t = w.length; u < t; u++) {
                            D = w[u];
                            C.push(D.id)
                        }
                    }
                    return g.sendSignal("projects.rerender", C)
                } else {
                    if ($("agenda_view")) {
                        if (y.refresh) {
                            return y.refresh()
                        }
                    }
                }
            };
            g.connect("refresh_interface", c)
        }, {
            "../../components/agenda/Agenda.js": 12,
            "../../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../../components/project_list/.coffee.ProjectList.js": 75,
            "../../menus/MenuAgendaEdit.js": 117,
            "../../menus/MenuFilterList.js": 118,
            "../../menus/MenuLabelList.js": 119,
            "../../menus/MenuProjectEditor.js": 120,
            "../../menus/MenuProjectList.js": 122,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.StateModel.js": 149
        }
    ],
    84: [
        function(h, b, x) {
            var i, v, w, m, q, d, k, u, t, g, p, l, c, n, r, a, j, o, s, f = function(y, z) {
                    return function() {
                        return y.apply(z, arguments)
                    }
                };
            d = window.DateUtils;
            k = window.DateistDateHelpers;
            i = window.AmiButton;
            u = window.GB_hide;
            v = window.AmiCompleteSelect;
            g = window.LANG;
            t = window.I18N_LANG;
            j = window.imageSprite;
            o = window.track;
            s = window.translate_to_lang;
            w = h("../avatars/.coffee.Avatars.js");
            a = h("../opener/WindowOpener.js");
            l = h("../premium_promotion/.coffee.PremiumPromotion.js");
            m = h("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            q = h("../../models/.coffee.Collaborators.js");
            p = h("../../menus/.coffee.MenuRemindersTypes.js");
            n = h("./.coffee.RemindersLocation.js");
            r = h("./RemindersPromo.js");
            c = (function() {
                function y(C) {
                    this.clean = f(this.clean, this);
                    this.renderServiceSelector = f(this.renderServiceSelector, this);
                    this.generateSharedServices = f(this.generateSharedServices, this);
                    this.generateUserServices = f(this.generateUserServices, this);
                    this.addReminder = f(this.addReminder, this);
                    this.renderRelative = f(this.renderRelative, this);
                    this.renderAbsolute = f(this.renderAbsolute, this);
                    this.render = f(this.render, this);
                    this.reRender = f(this.reRender, this);
                    this.onChangeInterface = f(this.onChangeInterface, this);
                    var G, H, D, z, F, E;
                    this.manager = C;
                    H = m.getCurItem();
                    if (H.due_date && k.has_time(H.due_date)) {
                        this.current_interface = "relative"
                    } else {
                        this.current_interface = "absolute"
                    }
                    G = window.User.auto_reminder;
                    if (G === void 0 || G === -1) {
                        G = 30
                    }
                    this.relative_items = [];
                    E = C.min_to_words;
                    for (z in E) {
                        F = E[z];
                        z = parseInt(z);
                        D = {
                            id: z,
                            name: F
                        };
                        if (z === G) {
                            this.current_relative_select = D
                        }
                        this.relative_items.push(D)
                    }
                    this.user_services = this.generateUserServices();
                    p.init()
                }
                y.prototype.onChangeInterface = function(z) {
                    if (z === "location" && !window.User.is_premium) {
                        if ($all("li", "reminder").length >= 1) {
                            return r.showPromotionLocation()
                        }
                    }
                    this.current_interface = z;
                    this.reRender();
                    p.get().hide(true, true);
                    return false
                };
                y.prototype.reRender = function() {
                    var z;
                    z = this.adder;
                    $swap(z, this.render());
                    return $remove(z)
                };
                y.prototype.render = function() {
                    var z, C;
                    this.adder_below = DIV({
                        c: "adder_below"
                    });
                    if (this.current_interface === "absolute") {
                        z = this.renderAbsolute()
                    } else {
                        if (this.current_interface === "relative") {
                            z = this.renderRelative()
                        } else {
                            z = n.render(this.adder_below)
                        }
                    }
                    C = i.createButton(_("Add reminder"), null, "red");
                    $AEV(C, "click", (function(D) {
                        return function() {
                            D.addReminder();
                            return false
                        }
                    })(this));
                    this.adder = DIV(DIV({
                        c: "adder"
                    }, this.renderSwitcher(), z), this.adder_below, DIV(A({
                        href: "/Help/Reminders",
                        target: "_blank",
                        c: "help"
                    }, j("cmp_query-help", 16, 16)), C));
                    return this.adder
                };
                y.prototype.renderAbsolute = function() {
                    var C, D, z;
                    C = "today at 2pm";
                    if (window.I18N_LANG) {
                        C = s(t, g, C)
                    }
                    D = DIV(z = this.absolute_input = INPUT({
                        placeholder: C
                    }));
                    $AEV(z, "keydown", (function(E) {
                        return function(F) {
                            if (F.keyAscii === 13) {
                                E.addReminder();
                                return false
                            }
                        }
                    })(this));
                    setTimeout(function() {
                        return z.focus()
                    }, 150);
                    return DIV({
                        c: "absolute"
                    }, this.renderServiceSelector(), D)
                };
                y.prototype.renderRelative = function() {
                    var D, z, C;
                    z = (function(E) {
                        return function() {
                            return _("%s before").replace("%s", E.current_relative_select.name)
                        }
                    })(this);
                    D = A({
                        href: "#",
                        c: "icon"
                    }, C = SPAN(z()), j("cmp_arrow_down", 7, 4));
                    $AEV(D, "click", (function(E) {
                        return function() {
                            var F, G, H;
                            G = {
                                selectedItem: function() {
                                    return E.current_relative_select
                                },
                                collection: function() {
                                    return E.relative_items
                                },
                                filterItem: function(J) {
                                    var K;
                                    K = DIV({
                                        c: "complete_item"
                                    }, J.name);
                                    return K
                                },
                                onSelect: function(J) {
                                    E.current_relative_select = J;
                                    $replace(C, z());
                                    return u()
                                },
                                wildcard_match: true
                            };
                            F = new v(G);
                            H = F.showTooltip({
                                icon: D,
                                title: _("Remind me"),
                                arrow_left_offset: 5,
                                top_offset: 35,
                                left_offset: 30,
                                fn_on_hide: function() {
                                    return F = null
                                }
                            });
                            return false
                        }
                    })(this));
                    return DIV({
                        c: "relative"
                    }, this.renderServiceSelector(), D)
                };
                y.prototype.addReminder = function() {
                    var D, C, z;
                    if (!window.User.is_premium) {
                        if ($all("li", "reminder").length >= 1) {
                            return r.showPromotion()
                        }
                    }
                    D = (function(E) {
                        return function(F) {
                            m.add(F);
                            E.manager.viewer.reRender();
                            if (E.absolute_input) {
                                E.absolute_input.value = ""
                            }
                            return E.manager.updateParentItem(true)
                        }
                    })(this);
                    if (this.current_interface === "location") {
                        n.getPlaceResolved(function(E) {
                            var F;
                            if (!E) {
                                alert(_("Please select a location first"), function() {
                                    return n.input.focus()
                                });
                                return false
                            }
                            F = {
                                item_id: m.getCurItem().id,
                                type: "location"
                            };
                            $update(F, E);
                            n.reset();
                            n.input.focus();
                            D(F);
                            return o("Reminders", "Add", "Location")
                        })
                    } else {
                        C = {
                            item_id: m.getCurItem().id,
                            service: this.current_service_select.id
                        };
                        if (this.current_interface === "absolute") {
                            z = this.parseDate(this.absolute_input.value);
                            if (z.error) {
                                alert(z.error, (function(E) {
                                    return function() {
                                        var F;
                                        F = function() {
                                            return E.absolute_input.focus()
                                        };
                                        return setTimeout(F, 200)
                                    }
                                })(this));
                                return false
                            }
                            C.time = z.due_date.getTime();
                            C.due_date_utc = d.jsonFormat(z.due_date);
                            C.date_lang = z.date_lang;
                            C.date_string = z.date_string;
                            C.type = "absolute";
                            o("Reminders", "Add", "Absolute")
                        } else {
                            C.minute_offset = this.current_relative_select.id;
                            C.type = "relative";
                            o("Reminders", "Add", "Relative")
                        } if (this.current_service_select.notify_uid) {
                            C.notify_uid = this.current_service_select.notify_uid;
                            C.service = "default"
                        }
                        D(C)
                    }
                    return false
                };
                y.prototype.renderSwitcher = function() {
                    var z, C, D;
                    C = j("cmp_rem_" + this.current_interface + " menu_icon", 29, 29);
                    z = j("cmp_rem_dp menu_icon", 10, 9);
                    D = A({
                        href: "#",
                        c: "switcher menu"
                    }, C, z);
                    $AEV(D, "click", function(E) {
                        p.get().toggle(D, D, E);
                        return false
                    });
                    return D
                };
                y.prototype.generateUserServices = function() {
                    var F, E, D, z, G, C;
                    D = {
                        id: "push",
                        name: _("Push notification")
                    };
                    E = {
                        id: "email",
                        name: _("Email")
                    };
                    G = {
                        id: "sms",
                        name: _("SMS")
                    };
                    F = {
                        id: "settings",
                        name: _("Reminders settings") + "..."
                    };
                    C = window.User;
                    if (!this.current_service_select) {
                        if (C.default_reminder === "push") {
                            this.current_service_select = D
                        } else {
                            if (C.mobile_number && C.default_reminder === "mobile") {
                                this.current_service_select = G
                            } else {
                                this.current_service_select = E
                            }
                        }
                    }
                    z = [E];
                    if (C.has_push_reminders) {
                        z.push(D)
                    }
                    if (C.mobile_number) {
                        z.push(G)
                    }
                    z.push(F);
                    return z
                };
                y.prototype.generateSharedServices = function(F) {
                    var z, E, D, H, C, G;
                    z = [];
                    G = q.getAll(F);
                    for (H = 0, C = G.length; H < C; H++) {
                        D = G[H];
                        E = {
                            notify_uid: D.id
                        };
                        $update(E, D);
                        if (D.id === window.User.id) {
                            continue
                        } else {
                            E.name = D.full_name.split(" ")[0]
                        }
                        z.push(E)
                    }
                    return z
                };
                y.prototype.renderServiceSelector = function() {
                    var G, H, z, C, E, D, F;
                    z = (function(J) {
                        return function() {
                            var K, L;
                            K = J.current_service_select;
                            if (K.notify_uid) {
                                return w.renderAvatar(K, "small")
                            } else {
                                if (K.id === "email") {
                                    L = "cmp_reminder_email"
                                } else {
                                    L = "cmp_reminder_mobile"
                                }
                            }
                            return j(L, 16, 16)
                        }
                    })(this);
                    D = A({
                        href: "#",
                        c: "service_selector"
                    }, C = SPAN(z()), j("cmp_arrow_down", 7, 4));
                    G = this.user_services;
                    H = m.getCurItem();
                    if (q.isProjectShared(H.project_id)) {
                        F = _("Who to notify");
                        E = true;
                        G = G.concat(this.generateSharedServices(H.project_id))
                    } else {
                        F = _("Notify via");
                        E = false
                    }
                    $AEV(D, "click", (function(J) {
                        return function() {
                            var K, L, M;
                            L = {
                                selectedItem: function() {
                                    return J.current_service_select
                                },
                                collection: function() {
                                    return G
                                },
                                filterItem: function(O) {
                                    var N, Q, R;
                                    if (!E) {
                                        Q = DIV({
                                            c: "complete_item"
                                        }, O.name)
                                    } else {
                                        if (!O.notify_uid) {
                                            N = w.renderAvatar(window.User, "small");
                                            R = _("Me") + " (" + O.name + ")"
                                        } else {
                                            N = w.renderAvatar(O, "small");
                                            R = O.name + " (" + _("Default") + ")"
                                        }
                                        Q = DIV({
                                            c: "complete_item"
                                        }, N, R)
                                    }
                                    return Q
                                },
                                onSelect: function(N) {
                                    u();
                                    if (N.id === "settings") {
                                        a.showPrefs("reminders")
                                    } else {
                                        J.current_service_select = N;
                                        $replace(C, z())
                                    } if (J.absolute_input) {
                                        return J.absolute_input.focus()
                                    }
                                },
                                wildcard_match: true
                            };
                            K = new v(L);
                            M = K.showTooltip({
                                icon: D,
                                title: F,
                                arrow_left_offset: 5,
                                top_offset: 35,
                                left_offset: 170,
                                fn_on_hide: function() {
                                    return K = null
                                }
                            });
                            return false
                        }
                    })(this));
                    return D
                };
                y.prototype.clean = function() {
                    $remove(this.adder);
                    $remove(this.adder_below);
                    $remove(this.absolute_input);
                    this.manager = null;
                    this.adder = null;
                    this.adder_below = null;
                    return this.absolute_input = null
                };
                y.prototype.parseDate = function(E) {
                    var C, H, z, F, D, G;
                    C = d.parse(E);
                    if (E === "") {
                        return {
                            error: _("Date can't be empty")
                        }
                    } else {
                        if (C.error || !C.due_date) {
                            return {
                                error: _("Invalid date")
                            }
                        }
                    } if (C.due_date) {
                        if (!k.has_time(C.due_date)) {
                            G = C;
                            C = d.parse(C.date_string + " @ 9:00");
                            if (C.due_date) {
                                D = new Date();
                                H = k.day_diff(D, C.due_date);
                                if (H >= 365) {
                                    z = D.getHours() + 3;
                                    F = "00";
                                    if (z > 23) {
                                        z = 23;
                                        F = 29
                                    }
                                    C = d.parse(G.date_string + " @ " + z + ":" + F)
                                }
                            }
                        }
                    }
                    return C
                };
                return y
            })();
            b.exports = c
        }, {
            "../../menus/.coffee.MenuRemindersTypes.js": 113,
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.Reminders.js": 147,
            "../avatars/.coffee.Avatars.js": 14,
            "../opener/WindowOpener.js": 64,
            "../premium_promotion/.coffee.PremiumPromotion.js": 67,
            "./.coffee.RemindersLocation.js": 85,
            "./RemindersPromo.js": 89
        }
    ],
    85: [
        function(c, b, f) {
            var d, a, i, k, g, j, h = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            k = window.Indicator;
            a = window.GB_hide;
            d = window.AmiCompleteSelect;
            j = window.imageSprite;
            g = c("../../models/.coffee.RemindersLocationModel.js");
            i = (function() {
                function l() {
                    this.nearbySearch = h(this.nearbySearch, this);
                    this.loaded = h(this.loaded, this);
                    this.loadGoogle = h(this.loadGoogle, this);
                    this.showLastLocations = h(this.showLastLocations, this);
                    this.selectLocation = h(this.selectLocation, this);
                    this.initGoogleMaps = h(this.initGoogleMaps, this);
                    this._render = h(this._render, this);
                    this.reset = h(this.reset, this);
                    this.getPlaceResolved = h(this.getPlaceResolved, this);
                    this.getPlace = h(this.getPlace, this);
                    this.render = h(this.render, this)
                }
                l.prototype.render = function(o) {
                    var m, n;
                    if (window.google && window.google.maps) {
                        this._render(o);
                        return this.holder
                    } else {
                        n = DIV({
                            c: "location_selecter"
                        }, k.imgSmall());
                        m = (function(p) {
                            return function() {
                                return $replace(n, p._render(o))
                            }
                        })(this);
                        this.loadGoogle(m);
                        return n
                    }
                };
                l.prototype.formatPlace = function(m, n) {
                    return {
                        name: m,
                        loc_lat: "" + n.lat(),
                        loc_long: "" + n.lng(),
                        loc_trigger: $selectValue(this.gtrigger),
                        radius: 100
                    }
                };
                l.prototype.getPlace = function() {
                    var m;
                    if (this.place && this.gmarker) {
                        m = this.gmarker.getPosition();
                        return this.formatPlace(this.place.name, m)
                    }
                };
                l.prototype.getPlaceResolved = function(n) {
                    var m;
                    if (this.place && this.gmarker) {
                        m = this.gmarker.getPosition();
                        if (this.start_location && m.lat() === this.start_location.lat() && m.lng() === this.start_location.lng()) {
                            return n(this.formatPlace(this.place.name, m))
                        } else {
                            return this.nearbySearch(m, (function(o) {
                                return function(p) {
                                    p = p || o.place.name;
                                    return n(o.formatPlace(p, m))
                                }
                            })(this))
                        }
                    } else {
                        return n(null)
                    }
                };
                l.prototype.reset = function() {
                    this.input.value = "";
                    $hide(this.gholder);
                    this.place = null;
                    return this.start_location = null
                };
                l.prototype._render = function(o) {
                    var m, n;
                    n = A({
                        href: "#",
                        c: "service_selector"
                    }, m = SPAN(j("cmp_last_locations", 16, 16)), j("cmp_arrow_down", 7, 4));
                    n.reuseable = true;
                    $AEV(n, "click", $p(this.showLastLocations, n));
                    if (!this.holder) {
                        this.holder = DIV({
                            c: "location_selecter"
                        }, n, this.input = INPUT({
                            type: "text",
                            placeholder: _("Type location"),
                            reuseable: true
                        }));
                        this.initGoogleMaps(this.input, o)
                    }
                    this.place = null;
                    this.input.value = "";
                    setTimeout((function(p) {
                        return function() {
                            return p.input.focus()
                        }
                    })(this), 100);
                    $AEV(this.input, "keyup", (function(p) {
                        return function() {
                            if (p.input.value === "") {
                                return $hide(p.gholder)
                            }
                        }
                    })(this));
                    $hide(this.gholder);
                    $replace(o, this.gholder);
                    return this.holder
                };
                l.prototype.initGoogleMaps = function(m) {
                    var n;
                    if (this.gholder) {
                        return this.gholder
                    }
                    n = new window.google.maps.places.Autocomplete(m, {
                        types: ["geocode"]
                    });
                    this.gholder = DIV({
                        c: "map_holder"
                    }, this.map_canvas = DIV({
                        c: "map"
                    }), this.gtrigger = SELECT(OPTION({
                        value: "on_enter"
                    }, _("When I arrive")), OPTION({
                        value: "on_leave"
                    }, _("When I leave"))));
                    return window.google.maps.event.addListener(n, "place_changed", (function(o) {
                        return function() {
                            o.place = n.getPlace();
                            if (o.place.geometry) {
                                return o.selectLocation(o.place.geometry)
                            }
                        }
                    })(this))
                };
                l.prototype.selectLocation = function(n) {
                    var m;
                    $show(this.gholder);
                    if (!this.gmap) {
                        m = {
                            zoom: 17,
                            mapTypeControl: false,
                            zoomControl: true,
                            streetViewControl: false
                        };
                        this.gmap = new window.google.maps.Map(this.map_canvas, m);
                        this.gmarker = new window.google.maps.Marker({
                            map: this.gmap,
                            anchorPoint: new window.google.maps.Point(0, -29),
                            draggable: true
                        })
                    }
                    this.gmarker.setPosition(n.location);
                    this.gmarker.setVisible(true);
                    this.start_location = this.gmarker.getPosition();
                    if (n.viewport) {
                        return this.gmap.fitBounds(n.viewport)
                    } else {
                        this.gmap.setCenter(n.location);
                        return this.gmap.setZoom(17)
                    }
                };
                l.prototype.showLastLocations = function(o) {
                    var m, n, p;
                    n = {
                        selectedItem: function() {
                            return null
                        },
                        collection: function() {
                            var u, q, t, r, s;
                            q = [];
                            s = g.getLastLocations();
                            for (t = 0, r = s.length; t < r; t++) {
                                u = s[t];
                                q.push({
                                    name: u[0],
                                    loc_lat: parseFloat(u[1]),
                                    loc_long: parseFloat(u[2])
                                })
                            }
                            return q
                        },
                        filterItem: function(r, q) {
                            return $setHTML(DIV({
                                c: "complete_item"
                            }), q)
                        },
                        txt_no_matches_found: _("No recent locations found."),
                        onSelect: (function(q) {
                            return function(r) {
                                var s;
                                q.place = {
                                    name: r.name
                                };
                                q.input.value = r.name;
                                s = {
                                    location: new window.google.maps.LatLng(r.loc_lat, r.loc_long),
                                    viewport: null
                                };
                                q.selectLocation(s);
                                a();
                                return false
                            }
                        })(this),
                        wildcard_match: true
                    };
                    m = new d(n);
                    p = m.showTooltip({
                        icon: o,
                        title: _("Recent locations"),
                        arrow_left_offset: 5,
                        top_offset: 35,
                        left_offset: 170,
                        fn_on_hide: function() {
                            return m = null
                        }
                    });
                    return false
                };
                l.prototype.load_timeout = null;
                l.prototype.callbacks = [];
                l.prototype.loadGoogle = function(m) {
                    if (window.google && window.google.maps) {
                        return
                    }
                    if (this.load_timeout) {
                        clearTimeout(this.load_timeout)
                    }
                    this.callbacks.push(m);
                    $add($body(), SCRIPT({
                        src: "https://maps.googleapis.com/maps/api/js?libraries=places&async=2&callback=RemindersLocation.loaded&key=AIzaSyCXMDZI-DQwpQ72521KB_V45LXL1Zm_lHU&sensor=false"
                    }));
                    return this.load_timeout = setInterval((function(n) {
                        return function() {
                            if (window.google && window.google.maps) {
                                return n.loaded()
                            }
                        }
                    })(this), 500)
                };
                l.prototype.loaded = function() {
                    var m, p, n, o;
                    if (this.load_timeout) {
                        clearTimeout(this.load_timeout);
                        this.load_timeout = null
                    }
                    o = this.callbacks;
                    for (p = 0, n = o.length; p < n; p++) {
                        m = o[p];
                        m()
                    }
                    return this.callbacks = []
                };
                l.prototype.nearbySearch = function(q, p) {
                    var n, o, m;
                    n = new window.google.maps.LatLng(q.lat(), q.lng());
                    o = {
                        location: n,
                        radius: "5"
                    };
                    m = new window.google.maps.places.PlacesService(this.gmap);
                    return m.nearbySearch(o, function(r) {
                        if (r && r.length > 0) {
                            return p(r[0].name)
                        } else {
                            return p(null)
                        }
                    })
                };
                return l
            })();
            window.RemindersLocation = new i();
            b.exports = window.RemindersLocation
        }, {
            "../../models/.coffee.RemindersLocationModel.js": 148
        }
    ],
    86: [
        function(f, d, g) {
            var h, l, c, k, j, b, a, m, i = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            l = window.DateistDateHelpers;
            h = f("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            k = f("../../models/.coffee.ItemsModel.js");
            c = f("../items_utils/ItemDueDates.js");
            b = f("./.coffee.RemindersAdder.js");
            m = f("./.coffee.RemindersViewer.js");
            j = f("../../menus/.coffee.MenuRemindersTypes.js");
            a = (function() {
                n.prototype.min_to_words = {
                    0: _("0 min"),
                    10: _("10 min"),
                    30: _("30 min"),
                    45: _("45 min"),
                    60: _("1 hour"),
                    120: _("2 hours"),
                    180: _("3 hours"),
                    1440: _("1 day"),
                    2880: _("2 days"),
                    4320: _("3 days"),
                    10080: _("1 week")
                };

                function n(q, o) {
                    this.updateParentItem = i(this.updateParentItem, this);
                    this.render = i(this.render, this);
                    var p;
                    this.holder = o;
                    if (q) {
                        p = k.getById(q.json.id);
                        if (p) {
                            h.cur_item = p;
                            h.use_buffered = false
                        }
                    } else {
                        h.use_buffered = true
                    }
                    this.viewer = new m(this);
                    this.adder = new b(this);
                    j.init(this);
                    q = h.getCurItem();
                    if (l.has_time(q.due_date)) {
                        j.get().setRelativePossible(true)
                    } else {
                        j.get().setRelativePossible(false)
                    }
                    window.REMINDER_MANAGER = this
                }
                n.prototype.render = function() {
                    var o;
                    o = DIV({
                        c: "reminder_manager"
                    }, this.viewer.render(), this.adder.render());
                    return $replace(this.holder, o)
                };
                n.prototype.updateParentItem = function(q) {
                    var s, p, t, r, v, o, u;
                    if (!h.use_buffered) {
                        r = h.getCurItem();
                        if (!r) {
                            return
                        }
                        u = $all("li", "item_" + r.id);
                        for (v = 0, o = u.length; v < o; v++) {
                            p = u[v];
                            s = $all("span", "date", p);
                            if (s.length > 0) {
                                s = s[0]
                            } else {
                                s = $all("td", "project", p)[0]
                            }
                            c.updateAlarmIcon(s, q)
                        }
                    }
                    t = $("reminders_icon");
                    if (this.viewer.is_empty) {
                        $removeClass(t, "cmp_reminders_on");
                        return $addClass(t, "cmp_reminders")
                    } else {
                        $removeClass(t, "cmp_reminders");
                        return $addClass(t, "cmp_reminders_on")
                    }
                };
                n.prototype.clean = function() {
                    this.adder.clean();
                    this.viewer.clean();
                    this.adder = null;
                    this.viewer = null;
                    return window.REMINDER_MANAGER = null
                };
                return n
            })();
            d.exports = a
        }, {
            "../../menus/.coffee.MenuRemindersTypes.js": 113,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.Reminders.js": 147,
            "../items_utils/ItemDueDates.js": 38,
            "./.coffee.RemindersAdder.js": 84,
            "./.coffee.RemindersViewer.js": 87
        }
    ],
    87: [
        function(f, c, h) {
            var d, j, g, i, p, n, m, a, o, l, b, k = function(q, r) {
                    return function() {
                        return q.apply(r, arguments)
                    }
                };
            p = window.Dateist;
            n = window.DateistDateHelpers;
            i = window.DateUtils;
            a = window.LANG;
            m = window.I18N_LANG;
            l = window.imageSprite;
            b = window.track;
            d = f("../avatars/.coffee.Avatars.js");
            j = f("../../models/.coffee.Reminders.js").BufferedRemindersModel;
            g = f("../../models/.coffee.Collaborators.js");
            o = (function() {
                function q(r) {
                    this.clean = k(this.clean, this);
                    this.deleteNotification = k(this.deleteNotification, this);
                    this.render = k(this.render, this);
                    this.reRender = k(this.reRender, this);
                    this.manager = r
                }
                q.prototype.reRender = function() {
                    var r;
                    r = this.viewer;
                    $swap(r, this.render());
                    return $remove(r)
                };
                q.prototype.render = function() {
                    var x, t, w, D, s, C, H, J, r, z, E, F, v, y, u, G;
                    r = j.getCurrentReminders();
                    y = this.viewer = UL({
                        c: "viewer"
                    });
                    if (r.length === 0) {
                        $addClass(y, "is_empty");
                        this.is_empty = true
                    } else {
                        this.is_empty = false
                    }
                    x = j.getCurItem();
                    if (g.isProjectShared(x.project_id)) {
                        C = true
                    } else {
                        C = false
                    }
                    for (u = 0, G = r.length; u < G; u++) {
                        J = r[u];
                        s = null;
                        if (C) {
                            v = g.getUserById(J.notify_uid || window.User.id);
                            if (v) {
                                s = d.renderAvatar(v, "small")
                            }
                        }
                        if (!s) {
                            s = l("cmp_rem_" + J.type + " menu_icon", 29, 29)
                        }
                        D = "";
                        z = "";
                        if (J.type === "absolute") {
                            if (p.is_recurring(J.date_string, {
                                lang: J.date_lang
                            })) {
                                E = J.date_string;
                                D = E
                            } else {
                                if (!J.time) {
                                    J.time = new Date(J.due_date_utc).getTime()
                                }
                                w = new Date(J.time);
                                t = i.humanizeDayDiff(n.day_diff(new Date(), w), w);
                                D = t
                            }
                        } else {
                            if (J.type === "relative") {
                                D = _("%s before").replace("%s", this.manager.min_to_words[J.minute_offset])
                            } else {
                                if (J.type === "location") {
                                    D = J.name;
                                    if (J.loc_trigger === "on_enter") {
                                        z = _("When I arrive")
                                    } else {
                                        z = _("When I leave")
                                    }
                                }
                            }
                        } if (z.length === 0) {
                            if (J.service === "email") {
                                z = _("email")
                            } else {
                                if (J.service === "push") {
                                    z = _("mobile notification")
                                } else {
                                    if (J.service === "sms" || J.service === "mobile") {
                                        z = _("SMS notification")
                                    } else {
                                        z = _("default")
                                    }
                                }
                            }
                        }
                        $add(y, H = LI({
                            c: "reminder"
                        }, F = A({
                            href: "#",
                            c: "trash"
                        }, l("cmp_trash", 16, 16)), s, DIV(B(D), BR(), z)));
                        $AEV(F, "click", $p(this.deleteNotification, J.id))
                    }
                    return this.viewer
                };
                q.prototype.deleteNotification = function(s) {
                    var r;
                    j.remove(s);
                    this.reRender();
                    r = j.getCurrentReminders();
                    this.manager.updateParentItem(r.length > 0);
                    b("Reminders", "Delete");
                    return false
                };
                q.prototype.clean = function() {
                    $remove(this.viewer);
                    this.manager = null;
                    return this.viewer = null
                };
                return q
            })();
            c.exports = o
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.Reminders.js": 147,
            "../avatars/.coffee.Avatars.js": 14
        }
    ],
    88: [
        function(g, f, j) {
            var a = window.Signals;
            var d = window.TooptipWin;
            var k = window.GB_showHTML;
            var b = g("./.coffee.RemindersManager.js");
            var h = g("../people_assigner/.coffee.PeopleAssigner.js");
            var c = g("./RemindersPromo.js");
            var l = g("../../models/.coffee.Reminders.js").RemindersModel;
            var i = {
                current_manager: null,
                renderHolder: function(n) {
                    var m = DIV();
                    this.current_manager = new b(n, m);
                    this.current_manager.render();
                    return m
                },
                showTooltip: function(s, n) {
                    if (!l.featureEnabled()) {
                        return c.showPromotion()
                    }
                    var q = h.current_uid;
                    var r = $position(n);
                    var m = i.renderHolder(s);
                    var o = {
                        fn_left_offset: function() {
                            return r.x - 240
                        },
                        fn_top_offset: function() {
                            return r.y + 25
                        },
                        fn_arrow_left: function() {
                            return r.x + 4
                        },
                        fixed_pos: $hasClass(n, "fixed_pos"),
                        fn_on_hide: function() {
                            h.current_uid = q;
                            var t = i.current_manager;
                            if (t) {
                                t.clean();
                                i.current_manager = null
                            }
                            a.sendSignal("focus_current_item_input")
                        }
                    };
                    var p = d.show(_("Reminders"), m, 210, 300, o);
                    $addClass(p.g_window, "manage_reminders")
                },
                show: function(n) {
                    if (!l.featureEnabled()) {
                        return c.showPromotion()
                    }
                    var m = i.renderHolder(n);
                    k(_("Reminders"), m, 350, 300);
                    return false
                }
            };
            f.exports = i
        }, {
            "../../models/.coffee.Reminders.js": 147,
            "../people_assigner/.coffee.PeopleAssigner.js": 65,
            "./.coffee.RemindersManager.js": 86,
            "./RemindersPromo.js": 89
        }
    ],
    89: [
        function(c, d, a) {
            var f = c("../promotion_overlay/.coffee.PromotionOverlay.js");
            var b = {
                showPromotionLocation: function() {
                    var h = _("Location reminders are a premium feature");
                    var g = _("With reminders you can get reminded about upcoming tasks via email or mobile notifications.");
                    return f.show(h, g)
                },
                showPromotion: function() {
                    var h = _("Reminders are a premium feature");
                    var g = _("With reminders you can get reminded about upcoming tasks via email or mobile notifications.");
                    if (window.User.restriction > 0) {
                        h = _("Get unlimited reminders");
                        g = _("Your free account only includes %s free reminder pr. task. Upgrade to Premium and get unlimited reminders.").replace("%s", 1)
                    }
                    return f.show(h, g)
                }
            };
            d.exports = b
        }, {
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78
        }
    ],
    90: [
        function(c, d, b) {
            var h = window.LibEdit;
            var g = c("../../components/project_editor/.coffee.ProjectEditorManager.js");
            var a = c("../generic_manager/GenericManagerUtils.js");
            var f = new ICE.Class({
                init: function(m, j) {
                    $bindMethods(this);
                    this.field = m;
                    this.clone = ICE.DIV({
                        "class": "auto_exapnd_clone"
                    }, "-");
                    $add($body(), this.clone);
                    $addClass(m, "auto_exapnd");
                    var n = "keypress";
                    this.extra_h = 0;
                    if ($isIe() || $isSafari()) {
                        n = "keydown"
                    }
                    $AEV(m, n, this.keyPress);
                    $AEV(m, "focus", this.resize);
                    var k = this;
                    $AEV(m, "paste", function() {
                        setTimeout(k.resize, 100)
                    });
                    m.resize_textarea = this.resize;
                    m.resize = this.resize;
                    if (j !== false) {
                        this.escape_cr = true
                    } else {
                        this.escape_cr = false
                    }
                    try {
                        var i = g.current_editor;
                        this.current_indent = a.getIndent(i.current_item)
                    } catch (l) {
                        this.current_indent = 1
                    }
                },
                keyPress: function() {
                    if (this.timeout) {
                        clearTimeout(this.timeout)
                    }
                    this.timeout = setTimeout(this.resize, 10)
                },
                resize: function() {
                    var j = this.field;
                    var i = this.clone;
                    if (!j || j.clientHeight === 0) {
                        return
                    }
                    i.style.width = j.offsetWidth + "px";
                    var k;
                    if (j.proxyGetValue) {
                        k = j.proxyGetValue()
                    } else {
                        k = j.value
                    }
                    k = k.replace(/</g, "&gt;");
                    k = k.replace(/\n\r?/g, "<br>--");
                    if (k === "") {
                        k = "T"
                    }
                    this.clone.innerHTML = k;
                    if (i.offsetHeight != this.old_height) {
                        var l = i.offsetHeight;
                        j.style.height = (l + this.extra_h) + "px";
                        this.old_height = l
                    }
                },
                remove: function() {
                    $remove(this.clone);
                    this.clone = null;
                    this.field = null
                }
            });
            d.exports = f
        }, {
            "../../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../generic_manager/GenericManagerUtils.js": 31
        }
    ],
    91: [
        function(b, a, c) {
            var g, d, l, i, k, h, j, f = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            k = window.LibEdit;
            d = window.DateUtils;
            l = window.Dateist;
            i = window.DateistUtils;
            g = window.$static_path;
            j = b("../../components/themes/.coffee.Themes.js");
            h = (function() {
                function m() {
                    this.attach = f(this.attach, this);
                    this.annotateFormData = f(this.annotateFormData, this)
                }
                m.prototype.truncate_links = false;
                m.prototype.highlight_labels = true;
                m.prototype.re_priority = /(?:^|\s+)p(?:riority)?\s*(1|2|3|4)/;
                m.prototype.re_labels = /(?:^|\s+)@([^\s,]+)/g;
                m.prototype.re_links = /[\w-]+:\/\/[^\s]+/g;
                m.prototype.annotateFormData = function(u, p) {
                    var v, r, t, s, n, q, o;
                    q = u.matches;
                    for (s in q) {
                        t = q[s];
                        switch (t[0]) {
                            case "priority":
                                p.content = p.content.replace(t[1], "");
                                p.priority = 5 - t[2];
                                break;
                            case "date":
                                p.content = p.content.replace(t[1], "");
                                p.due_date = t[2].due_date;
                                p.date_string = t[2].date_string;
                                p.date_lang = t[2].date_lang
                        }
                    }
                    r = {};
                    o = u.ignored;
                    for (v in o) {
                        n = o[v];
                        if (v.indexOf("@") === 0) {
                            r[v.replace("@", "")] = true
                        }
                    }
                    if ($keys(r).length > 0) {
                        p.labels_to_ignore = r
                    }
                    p.content = $strip(p.content.replace(/\s\s+/, " "));
                    return p
                };
                m.prototype.attach = function(n, p) {
                    var q, o, r;
                    l.clear_free_text_cache();
                    n.ignored = {};
                    n.matches = {};
                    n.initial_has_content = p;
                    n.dateist_disabled = false;
                    q = (function(s) {
                        return function(E, K) {
                            var D, F, y, u, J, G, z, C, w, v, H, t, x;
                            E = E.replace(/`/g, "'");
                            if (K === "t_link") {
                                s.truncate_links = false
                            }
                            G = k.getCaretOffsetWithin(n);
                            k.setCaretPositionWithin(n, G.start);
                            F = function(L) {
                                if (n.matches[L]) {
                                    delete n.matches[L]
                                }
                                return n.ignored[L] = true
                            };
                            if (K === "t_date") {
                                C = i.is_spaceless_lang(window.DATEIST_LANG);
                                z = l.split_text(E, window.DATEIST_LANG);
                                y = 0;
                                for (w = 0, H = z.length; w < H; w++) {
                                    u = z[w];
                                    D = "";
                                    x = z.slice(y);
                                    for (v = 0, t = x.length; v < t; v++) {
                                        J = x[v];
                                        if (C) {
                                            D = D + J
                                        } else {
                                            D = D + " " + J
                                        }
                                        D = i.trim(D);
                                        F(D)
                                    }
                                    y += 1
                                }
                            }
                            F(E);
                            o();
                            return false
                        }
                    })(this);
                    r = function(t, s) {
                        var v, u;
                        if (s == null) {
                            s = false
                        }
                        v = t.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
                        u = i.is_spaceless_lang(window.DATEIST_LANG);
                        if (!u) {
                            v = v + "(?:$|(?=\\s+))"
                        }
                        return new RegExp(v, "gi")
                    };
                    o = (function(s) {
                        return function() {
                            var O, C, z, K, H, L, W, E, Q, M, D, u, x, t, U, N, G, S, J, y, w, v, R, V, T, F;
                            x = {};
                            S = n.proxyGetValue();
                            S = S.replace(/\s/g, " ");
                            U = S.match(s.re_priority);
                            if (U) {
                                G = $strip(U[0]);
                                t = U[1];
                                if (!n.ignored[G]) {
                                    x[G] = ["priority", r(G), parseInt(t), G]
                                }
                            }
                            if (s.highlight_labels) {
                                Q = S.match(s.re_labels);
                                if (Q) {
                                    for (y = 0, R = Q.length; y < R; y++) {
                                        E = Q[y];
                                        E = $strip(E);
                                        if (!n.ignored[E]) {
                                            x[E] = ["label", r(E), E, E]
                                        }
                                    }
                                }
                            }
                            if (!window.User.dateist_inline_disabled) {
                                if (!n.dateist_disabled) {
                                    z = d.parse(S, null, true, n.ignored);
                                    if (z && z.due_date) {
                                        K = z.date_string_matched;
                                        if (K.indexOf("@") !== 0 && !n.ignored[K]) {
                                            x[K] = ["date", r(K), z, K]
                                        }
                                    }
                                }
                            }
                            if (s.truncate_links) {
                                u = S.match(s.re_links);
                                if (u) {
                                    for (w = 0, V = u.length; w < V; w++) {
                                        D = u[w];
                                        if (!n.ignored[D]) {
                                            x[D] = ["link", r(D), D, D]
                                        }
                                    }
                                }
                            }
                            p = n.initial_has_content;
                            if (p) {
                                for (G in x) {
                                    N = x[G];
                                    if (N[0] === "date") {
                                        J = N[4] || N[3];
                                        n.ignored[J] = true;
                                        delete x[G]
                                    }
                                }
                                n.initial_has_content = false
                            }
                            H = S;
                            C = "https://d3ptyyxy2at9ui.cloudfront.net/76084e29cb2cf72b320e888edc583dfb.gif";
                            for (G in x) {
                                N = x[G];
                                J = N[4] || N[3];
                                W = "⟦img src='" + C + "' width='12' height='14' class='cmp_" + (s.getIconType()) + "_highlight_" + N[0] + "'⟧";
                                L = N[3].replace(/'/g, "`");
                                H = H.replace(N[1], "⟦b id='" + L + "' class='t_" + N[0] + "'⟧" + W + "⟦span⟧" + J + "⟦/span⟧⟦/b⟧")
                            }
                            if (p) {
                                M = H.charAt(H.length - 1);
                                if (M === "⟧") {
                                    H = H + " "
                                }
                            }
                            n.proxySetValue(H, false);
                            F = $all("b", null, n);
                            for (v = 0, T = F.length; v < T; v++) {
                                O = F[v];
                                O.onclick = O.ignore_match = $p(q, O.id, O.className)
                            }
                            return n.matches = x
                        }
                    })(this);
                    n.onchanged = o;
                    n.cancelInput = function(w) {
                        var z, u, t, v, s, y, x;
                        if (w.keyAscii === 27 || w.keyAscii === 8) {
                            if (window.getSelection) {
                                x = window.getSelection();
                                t = x.focusNode;
                                if (t && $nodeName(t) === "#text") {
                                    s = t.parentElement;
                                    if (s) {
                                        y = s.parentElement;
                                        if (y && $nodeName(y) === "b") {
                                            if (y.ignore_match) {
                                                y.ignore_match()
                                            }
                                            return true
                                        }
                                    }
                                }
                                if (t && w.keyAscii === 27) {
                                    z = $gp(t, "div");
                                    u = $all("b", null, z);
                                    v = $last(u);
                                    if (v && v.ignore_match && $hasClass(v, "t_date")) {
                                        v.ignore_match();
                                        return true
                                    }
                                }
                            }
                        }
                        return false
                    };
                    return $AEV(n, ["keypress", "paste"], (function(s) {
                        return function(u) {
                            var t, w;
                            if (u.clipboardData) {
                                u.preventDefault();
                                w = u.clipboardData.getData("text/plain");
                                w = w.replace("<", "&gt;").replace(">", "&lt;");
                                document.execCommand("insertHTML", false, w);
                                return false
                            }
                            if (u.ctrl && u.key) {
                                return true
                            }
                            if (s.timeout) {
                                clearTimeout(s.timeout)
                            }
                            if (window.getSelection) {
                                try {
                                    t = window.getSelection().getRangeAt(0);
                                    if (!t.collapsed) {
                                        return true
                                    }
                                } catch (v) {}
                            }
                            return s.timeout = setTimeout(o, 2)
                        }
                    })(this))
                };
                m.prototype.getIconType = function() {
                    if (j.theme === "theme_neutral") {
                        return "light"
                    } else {
                        return j.icon_type
                    }
                };
                return m
            })();
            window.NatrualLanguageParsing = new h();
            a.exports = window.NatrualLanguageParsing
        }, {
            "../../components/themes/.coffee.Themes.js": 101
        }
    ],
    92: [
        function(c, b, f) {
            var a, g, l, h, k, d, j, i;
            l = window.LibEdit;
            a = c("../../models/.coffee.Storage.js").$storage;
            i = function(o) {
                var p, m, n;
                o.className = "richtext_editor";
                m = DIV(o);
                if (o.withPlaceholders) {
                    m.placeholderText = d.genereate()
                } else {
                    m.placeholderText = null
                }
                m.contentEditable = true;
                m.proxyFocus = function() {
                    return m.focus()
                };
                m.proxySelect = function() {
                    var q, r;
                    q = document.createRange();
                    q.selectNodeContents(m);
                    r = window.getSelection();
                    r.removeAllRanges();
                    return r.addRange(q)
                };
                m.proxyGetValue = function() {
                    var q;
                    q = m.innerText || m.textContent;
                    q = q.replace(new RegExp("☃", "g"), " ");
                    return q
                };
                m.proxyPlaceCursor = function() {
                    return l.placeCursor(m, m.proxyGetValue().length)
                };
                p = null;
                if (m.placeholderText) {
                    n = function() {
                        var q;
                        q = m.innerText || m.textContent;
                        if (q === "") {
                            if (!m.placeholder) {
                                m.placeholder = SPAN({
                                    c: "rich_text_placeholder"
                                }, m.placeholderText);
                                $AEV(m.placeholder, "contextmenu", function() {
                                    $remove(m.placeholder);
                                    return m.proxyFocus()
                                });
                                return $addBefore(m.placeholder, m)
                            }
                        } else {
                            if (m.placeholder) {
                                $remove(m.placeholder);
                                return m.placeholder = null
                            }
                        }
                    };
                    p = function() {
                        if (m.placeholder_ta) {
                            clearTimeout(m.placeholder_ta)
                        }
                        return m.placeholder_ta = setTimeout(n, 2)
                    };
                    $AEV(m, "keyup", p)
                }
                m.proxySetValue = function(s, r) {
                    var q, t;
                    if (r == null) {
                        r = true
                    }
                    q = l.getSelectedNode();
                    if (m.save_position === void 0) {
                        m.save_position = true
                    }
                    if (m.save_position) {
                        t = l.getCaretOffsetWithin(m)
                    }
                    s = s.replace(/(?:^\s)|(?:\s$)/g, "&nbsp;");
                    s = s.replace(/\s\s/g, " &nbsp;");
                    s = s.replace(/</g, "&lt;");
                    s = s.replace(/>/g, "&gt;");
                    s = s.replace(/⟦/g, "<");
                    s = s.replace(/⟧/g, ">");
                    m.innerHTML = s;
                    if (m.placeholderText && p) {
                        p()
                    }
                    if (m.save_position) {
                        l.setCaretPositionWithin(m, t.start)
                    }
                    if (r && m.onchanged) {
                        return setTimeout(m.onchanged, 2)
                    }
                };
                $AEV(m, "focus", function() {
                    return m.save_position = true
                });
                return m
            };
            k = [_("Get pastries sun at 9"), _("Renew gym every May 1st"), _("Design meeting at 11am p1"), _("Learn Portuguese every 2 days"), _("Buy gift tomorrow at 6pm p1"), _("Read every day p3 @goals"), _("Conference Wednesday at 15"), _("Family lunch on Sunday at 11am")];
            h = 100;
            j = "WR_PlaceholderCount";
            g = "web_ph_natrual_text";
            d = {
                genereate: function() {
                    var n, m;
                    n = this.increaseCount();
                    if (n >= h) {
                        return null
                    }
                    m = Math.floor(Math.random() * k.length);
                    return k[m]
                },
                increaseCount: function() {
                    var m, n;
                    n = a(j).get();
                    if (n === null) {
                        this.restoreCountFromServer();
                        return h
                    }
                    m = parseInt(n || 0);
                    m = m + 1;
                    a(j).set("" + m);
                    if (m === h) {
                        this.markAsSeenGlobally()
                    }
                    return m
                },
                restoreCountFromServer: function() {
                    var m;
                    m = $requestJSON("/API/v6/tooltips/is_seen");
                    m.addCallback(function(n) {
                        if (n.result) {
                            return a(j).set(h)
                        } else {
                            return a(j).set("0")
                        }
                    });
                    return m.sendReq({
                        name: g,
                        token: window.User.token
                    })
                },
                markAsSeenGlobally: function() {
                    return $request("/API/v6/tooltips/mark_as_seen").sendReq({
                        name: g,
                        token: window.User.token
                    })
                }
            };
            b.exports = i
        }, {
            "../../models/.coffee.Storage.js": 150
        }
    ],
    93: [
        function(h, b, s) {
            var g, a, i, n, r, o, q, d, p, m, f, t, l, k, j, c = function(u, v) {
                    return function() {
                        return u.apply(v, arguments)
                    }
                };
            k = window.Signals;
            m = window.Indicator;
            d = window.GB_showHTML;
            q = window.GB_hide;
            n = window.AmiComplete;
            i = window.AmiButton;
            a = window.Alerts;
            j = window.imageSprite;
            g = h("./../../models/.coffee.Storage.js").$storage;
            r = h("../avatars/.coffee.Avatars.js");
            f = h("../project_editor/.coffee.ProjectEditorManager.js");
            l = h("../promotion_overlay/.coffee.PromotionOverlay.js");
            o = h("../../models/.coffee.Collaborators.js");
            t = h("../../models/.coffee.ProjectsModel.js");
            p = (function() {
                function u() {
                    this.promoRemove = c(this.promoRemove, this);
                    this._promoShow = c(this._promoShow, this);
                    this.promoCheck = c(this.promoCheck, this);
                    this._checkEmpty = c(this._checkEmpty, this);
                    this._renderAdder = c(this._renderAdder, this);
                    this._renderHolder = c(this._renderHolder, this);
                    this._renderData = c(this._renderData, this);
                    this.renderData = c(this.renderData, this);
                    this._show = c(this._show, this);
                    this.show = c(this.show, this);
                    k.connect("collaborators_states_updated", (function(v) {
                        return function() {
                            if (v.current_project && v.holder) {
                                return v.renderData(v.current_project)
                            }
                        }
                    })(this))
                }
                u.prototype.show = function(w) {
                    var v;
                    v = this._renderHolder();
                    $add(this.view_data, m.imgSmall());
                    d(_("Share options"), v, 400, 338, {
                        callback_fn: (function(x) {
                            return function() {
                                n.hide();
                                x.current_project = null;
                                return x.holder = null
                            }
                        })(this)
                    });
                    this._show(w);
                    return false
                };
                u.prototype._show = function(v) {
                    var w;
                    w = t.get(v);
                    if (w.inbox_project) {
                        alert(_("It's not possible to share the inbox project. Please share a regular project."), q);
                        return false
                    }
                    this.current_project = w;
                    return this.renderData(w)
                };
                u.prototype.renderData = function(w) {
                    var v;
                    if (!this.holder) {
                        return
                    }
                    v = {
                        invited: o.getInvitedUsers(w.id),
                        active: o.getActiveUsers(w.id)
                    };
                    if (v.active.length === 0) {
                        v.active = [window.User]
                    }
                    $swap(this.view_data, this.view_data = this._renderData(v, w));
                    if (w.team_inbox) {
                        $hide(this.adder)
                    } else {
                        this._checkEmpty(v)
                    } if (!$isIe()) {
                        return this.adder_input.focus()
                    }
                };
                u.prototype._renderData = function(E, H) {
                    var F, w, J, C, z, y, G, v, D, x;
                    if (E === "PROJECT_NOT_FOUND") {
                        E = {
                            owner_user_id: window.User.id,
                            collaborators: []
                        }
                    }
                    w = (function(K) {
                        return function(N) {
                            var Q, M, S, O, L, R;
                            Q = null;
                            S = N.full_name || N.user_full_name;
                            if (N.id === window.User.id) {
                                S = _("Me")
                            }
                            if (S) {
                                R = SPAN({
                                    c: "name"
                                }, DIV({
                                    c: "content"
                                }, M = B(S), BR(), N.email))
                            } else {
                                R = SPAN(DIV({
                                    c: "content"
                                }, M = B(N.email)))
                            }
                            Q = r.renderAvatar(N, "small");
                            $ATT(R, Q);
                            $addClass(R, "has_avatar");
                            O = N.state === "pending";
                            if (O) {
                                $add(M, SPAN({
                                    c: "status pending"
                                }, _("Pending")))
                            }
                            if (N.id !== window.User.id && !H.team_inbox) {
                                $ATT(R, L = A({
                                    href: "#",
                                    c: "delete"
                                }, j("cmp_trash_small", 12, 12)));
                                $AEV(L, "click", function() {
                                    var T;
                                    T = _('Are you sure you want to remove "%s"?');
                                    T = T.replace("%s", S || N.email);
                                    a.confirm(T, function(V) {
                                        var U;
                                        if (!V) {
                                            return
                                        }
                                        $replace(L, m.imgSmall());
                                        U = function() {
                                            $remove(R.parentNode);
                                            return K._checkEmpty(E)
                                        };
                                        return o.deleteFromProject(K.current_project.id, N, U)
                                    });
                                    return false
                                })
                            }
                            return DIV({
                                c: "user_info"
                            }, R)
                        }
                    })(this);
                    J = DIV();
                    D = this._sort(E.invited);
                    for (z = 0, G = D.length; z < G; z++) {
                        C = D[z];
                        F = {};
                        $update(F, C);
                        F.state = "pending";
                        $add(J, w(F))
                    }
                    $add(J, w(window.User));
                    x = this._sort(E.active);
                    for (y = 0, v = x.length; y < v; y++) {
                        C = x[y];
                        if (C.id !== window.User.id) {
                            $add(J, w(C))
                        }
                    }
                    return J
                };
                u.prototype._renderHolder = function() {
                    this.holder = DIV({
                        c: "sharing_manager"
                    });
                    $add(this.holder, this._renderAdder());
                    $add(this.holder, this.view_data = DIV());
                    return this.holder
                };
                u.prototype._renderAdder = function() {
                    var v, w, x;
                    w = i.createButton(_("Invite"));
                    $addClass(w, "amibutton_red");
                    this.adder = DIV({
                        c: "sharing_adder"
                    }, this.adder_input = INPUT({
                        type: "text",
                        placeholder: _("Email or Name"),
                        c: "input_email text_box"
                    }), w);
                    x = (function(y) {
                        return function() {
                            var E, D, H, C, G, z, F;
                            H = y.adder_input.value;
                            H = $trim(H);
                            if (H.indexOf(" ") !== -1 && H.indexOf("<") === -1) {
                                H = H.replace(/\s+/g, ",")
                            }
                            F = H.split(/[,;]/);
                            for (G = 0, z = F.length; G < z; G++) {
                                D = F[G];
                                D = $trim(D);
                                if (D.length === 0) {
                                    continue
                                }
                                if (D.indexOf("@") === -1) {
                                    alert(_("Email isn't valid") + ": " + $escape(D));
                                    return false
                                }
                                E = o.getAll(y.current_project.id).length;
                                if (window.User.is_premium) {
                                    C = window.User.share_limit || 26;
                                    if (E >= C) {
                                        alert(DIV(B(_("Collaboration limit reached")), P(_("Unfortunately, you've reached the limit of 25 collaborators per project.")), P(_("Need more? Get in touch"), " ", A({
                                            href: "mailto:support@todoist.com"
                                        }, "support@todoist.com"))));
                                        return false
                                    }
                                } else {
                                    C = 6;
                                    if (E >= C) {
                                        l.show(_("Collaboration limit reached"), _("You've reached the free limit of 5 collaborators per project. With Todoist Premium you can share with up to 25 people per project!"));
                                        return false
                                    }
                                }
                                o.addInvite(y.current_project.id, D)
                            }
                            y.renderData(y.current_project);
                            y.adder_input.value = "";
                            return false
                        }
                    })(this);
                    $AEV(w, "click", x);
                    v = {
                        collection: function() {
                            var G, D, C, H, z, F, y, E;
                            z = {};
                            H = [];
                            E = $values(o.collaborators);
                            for (F = 0, y = E.length; F < y; F++) {
                                C = E[F];
                                if (C.id !== window.User.id) {
                                    if (!z[C.email]) {
                                        z[C.email] = true;
                                        D = C.full_name + " " + C.email;
                                        G = {
                                            name: D,
                                            email: C.email,
                                            avatar_small: C.avatar_small
                                        };
                                        H.push(G)
                                    }
                                }
                            }
                            return H
                        },
                        filterItem: function(D, z) {
                            var y, C;
                            C = $setHTML(SPAN({
                                c: "name_email"
                            }), z);
                            y = r.renderAvatar(D, "small");
                            return DIV({
                                c: "amicomplete_entry"
                            }, y, C)
                        },
                        onSelect: function(y) {
                            return y.email
                        },
                        onNoMatches: function() {
                            return n.hide()
                        },
                        onPreProcess: function(y, z) {
                            if (y.length === 0) {
                                return []
                            }
                            return z
                        },
                        wildcard_match: true,
                        require_trigger: false,
                        whole_input_match: true,
                        extra_width: 1
                    };
                    n.hide_manage = true;
                    n.attach(this.adder_input, v);
                    $AEV(this.adder_input, "keydown", function(y) {
                        if (y.key === 13) {
                            if (n.shown()) {
                                return false
                            }
                            return x()
                        }
                        return true
                    });
                    return this.adder
                };
                u.prototype._checkEmpty = function(C) {
                    var y, w, v, x, z;
                    z = $all("div", "user_info", this.holder);
                    if (z.length <= 1) {
                        $remove(z, $all("div", "desc", this.holder));
                        y = _("The people you invite will be able to add, delete and complete tasks from '%s'.").replace("%s", this.current_project.name);
                        w = _("You will get notified when changes happen.");
                        v = A({
                            href: "/Help/Sharing",
                            target: "_blank"
                        }, _("Learn more..."));
                        return $swap(this.view_data, this.view_data = DIV({
                            c: "blank_screen"
                        }, H2(_("Collaborate with others")), y, BR(), BR(), w, BR(), BR(), v))
                    } else {
                        if (!$child(this.holder, "div", "desc")) {
                            x = null;
                            if (C.user_role !== "owner") {
                                x = A({
                                    href: "#"
                                }, _("Leave this project"));
                                $AEV(x, "click", (function(D) {
                                    return function() {
                                        var E;
                                        E = _("Are you sure you want to leave this project?") + " " + _("This will delete it from your account.");
                                        a.confirm(E, function(G) {
                                            var F;
                                            if (G) {
                                                F = function() {
                                                    t.deleteFromModel(D.current_project.id);
                                                    q();
                                                    return f.reset()
                                                };
                                                o.deleteFromProject(D.current_project.id, window.User, F);
                                                return false
                                            }
                                        });
                                        return false
                                    }
                                })(this))
                            }
                            return $add(this.holder, DIV({
                                c: "desc"
                            }, x))
                        }
                    }
                };
                u.prototype._sort = function(y) {
                    var w, x, v;
                    for (x = 0, v = y.length; x < v; x++) {
                        w = y[x];
                        if (w.full_name) {
                            w.name = w.full_name.toLowerCase()
                        } else {
                            w.name = w.email.toLowerCase()
                        }
                    }
                    y = y.sort(function(C, z) {
                        return C.name.localeCompare(z.name)
                    });
                    return y
                };
                u.prototype.promoCheck = function() {
                    var v;
                    if (g("hide_sharing_promo_x").get() === true) {
                        return
                    }
                    v = $requestJSON("/API/v6/tooltips/is_seen");
                    v.offline_message = true;
                    v.addCallback((function(w) {
                        return function(x) {
                            if (!x.result) {
                                w._promoShow()
                            }
                            $request("/API/v6/tooltips/mark_as_seen").sendReq({
                                name: "sharing",
                                token: window.User.token
                            });
                            return g("hide_sharing_promo_x").set(true)
                        }
                    })(this));
                    return v.sendReq({
                        name: "sharing",
                        token: window.User.token
                    })
                };
                u.prototype._promoShow = function() {
                    var w, v;
                    if (!$("blank_state_sharing")) {
                        this.promo_shown = true;
                        w = DIV({
                            id: "blank_state_sharing"
                        }, j("cmp_blank_state_arrow_right", 90, 130, "blank_arrow"), DIV({
                            c: "blank_state_text"
                        }, B(_("Collaborate with others")), DIV(_("Share projects, assign tasks, discuss in real-time, and get notified when changes are made. Todoist lets you collaborate from any web-enabled device.")), DIV({
                            s: "text-align: right"
                        }, v = A({
                            href: "#",
                            c: "action"
                        }, _("Hide")))));
                        $fx.fadeIn(w);
                        $AEV(v, "click", this.promoRemove);
                        $AEV(window, "resize", this._promoPosition);
                        $add($("editor"), w);
                        return this._promoPosition()
                    }
                };
                u.prototype._promoPosition = function() {
                    var v, w, x;
                    w = $all("img", "cmp_share_project", null, true);
                    if (w) {
                        v = $("blank_state_sharing");
                        x = $position(w).x;
                        return $setLeft(v, x - v.offsetWidth + 65)
                    }
                };
                u.prototype.promoRemove = function() {
                    var v;
                    this.promo_shown = false;
                    v = $("blank_state_sharing");
                    if (v) {
                        $remove(v);
                        $REV(window, "resize", this._promoPosition)
                    }
                    return false
                };
                return u
            })();
            window.SharingManager = new p();
            b.exports = window.SharingManager
        }, {
            "../../models/.coffee.Collaborators.js": 130,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../avatars/.coffee.Avatars.js": 14,
            "../project_editor/.coffee.ProjectEditorManager.js": 69,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78,
            "./../../models/.coffee.Storage.js": 150
        }
    ],
    94: [
        function(b, a, d) {
            var i, f, j, c, h, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            c = b("../../models/.coffee.ProjectsModel.js");
            j = b("../../models/.coffee.ItemsModel.js");
            h = b("../../models/.coffee.QueriesItems.js");
            i = b("../completed_history/.coffee.CompletedQuickVisualize.js");
            f = (function() {
                function k() {
                    this.hide = g(this.hide, this);
                    this.show = g(this.show, this)
                }
                k.prototype.renderHolder = function() {
                    return DIV({
                        id: "quick_day_show"
                    })
                };
                k.prototype.show = function(l) {
                    var w, s, n, r, q, u, v, p, o, t, m;
                    s = h.getByDate(l, j.getAllOwn());
                    if (s.length === 0) {
                        v = _("No tasks due")
                    } else {
                        if (s.length === 1) {
                            v = _("1 task due")
                        } else {
                            v = _("%s tasks due").replace("%s", s.length)
                        }
                    }
                    q = DIV({
                        c: "project_bar"
                    });
                    r = [];
                    for (p = 0, t = s.length; p < t; p++) {
                        w = s[p];
                        u = c.get(w.project_id);
                        if (u) {
                            n = i.getProjectColor(u, 8);
                            r.push([u.color, n])
                        }
                    }
                    r.sort(function(y, x) {
                        return y[0] - x[0]
                    });
                    for (o = 0, m = r.length; o < m; o++) {
                        n = r[o];
                        $add(q, n[1])
                    }
                    return DIV({
                        c: "project_bar_holder"
                    }, v, CENTER(q))
                };
                k.prototype.hide = function() {
                    return $replace($("quick_day_show"), null)
                };
                return k
            })();
            a.exports = new f()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.QueriesItems.js": 145,
            "../completed_history/.coffee.CompletedQuickVisualize.js": 17
        }
    ],
    95: [
        function(d, b, f) {
            var i, g, n, l, m, k, c, a, j, h = function(o, p) {
                    return function() {
                        return o.apply(p, arguments)
                    }
                };
            i = window.AmiTooltip;
            c = window.MiniCal;
            n = window.Dateist;
            l = window.DateistDateHelpers;
            g = window.DateUtils;
            j = window.imageSprite;
            k = d("../../models/.coffee.ItemsModel.js");
            a = d("../../models/.coffee.UtilModels.js");
            m = (function() {
                function o() {
                    this.daysToAdd = h(this.daysToAdd, this);
                    this.getPostponeIcon = h(this.getPostponeIcon, this);
                    this.genDate = h(this.genDate, this);
                    this.genIcon = h(this.genIcon, this);
                    this.annotate = h(this.annotate, this)
                }
                o.prototype.annotate = function(p, t, q, s) {
                    var u, r;
                    if (s == null) {
                        s = {}
                    }
                    r = DIV({
                        c: "scheduler_holder"
                    });
                    if (!s.no_help_text) {
                        $add(r, SPAN({
                            c: "desc"
                        }, _("Schedule")))
                    }
                    if (t) {
                        u = t.current_holder
                    } else {
                        u = null
                    }
                    $add(r, this.genIcon(u, "today", q, _("Today")));
                    if (s.with_month) {
                        $add(r, this.genIcon(u, "tomorrow", q, _("Tomorrow")))
                    } else {
                        if (u && u.json.due_date) {
                            $add(r, this.getPostponeIcon(u, q))
                        } else {
                            $add(r, this.genIcon(u, "tomorrow", q, _("Tomorrow")))
                        }
                    }
                    $add(r, this.genIcon(u, "next_week", q, _("Next week")));
                    if (s.with_month) {
                        $add(r, this.genIcon(u, "month", q, _("In 1 month")));
                        if (u && u.json.due_date) {
                            $add(r, this.getPostponeIcon(u, q))
                        }
                    }
                    if (!s.no_more) {
                        $add(r, this.genIcon(u, "more", $p(this.moreClick, q), _("More")))
                    } else {
                        $add(r, this.genIcon(u, "no_date", q, _("No due date")))
                    }
                    return $replace(p, r)
                };
                o.prototype.moreClick = function(r, q, p) {
                    i.hide();
                    c.offset_x = -66;
                    c.offset_y = -40;
                    c.arrow_left = false;
                    c.close_fn_eval = function() {
                        return true
                    };
                    c.show_recurring_help = false;
                    c.with_arrow_top = false;
                    c.onSelect = function(s) {
                        r(s);
                        c.remove();
                        return false
                    };
                    c.create(p);
                    return false
                };
                o.prototype.genIcon = function(w, s, r, v) {
                    var q, u, t, p;
                    q = s;
                    if (s === "no_date") {
                        q = "today"
                    }
                    t = j("cmp_scheduler_" + q, 26, 26);
                    p = A({
                        href: "#",
                        c: "icon_scheduler"
                    }, t);
                    if (s === "today" || s === "no_date") {
                        if (s === "no_date") {
                            u = "X"
                        } else {
                            u = "" + (new Date()).getDate()
                        }
                        $add(p, SPAN(u));
                        if (u.length === 1) {
                            $addClass(p, "one_digit")
                        }
                        $addClass(p, "today_icon")
                    }
                    if (s === "more") {
                        $addClass([t, p], "dp_icon")
                    }
                    $AEV(p, ["click", "touchstart"], (function(x) {
                        return function() {
                            r(x.genDate(w, s), p);
                            return false
                        }
                    })(this));
                    i.showSimpleText(p, v, null, -4, 5);
                    return p
                };
                o.prototype.genDate = function(s, p) {
                    var q;
                    if (p === "today") {
                        return new Date()
                    } else {
                        if (p === "tomorrow") {
                            return n.parse("tomorrow").due_date
                        } else {
                            if (p === "next_week") {
                                q = this.daysToAdd();
                                return n.parse("+" + q).due_date
                            } else {
                                if (p === "next_occurrence") {
                                    try {
                                        return a.getNewDate(s.json)[0]
                                    } catch (r) {
                                        return n.parse("tomorrow").due_date
                                    }
                                } else {
                                    if (p === "month") {
                                        return n.parse("+1 month").due_date
                                    } else {
                                        if (p === "no_date") {
                                            return null
                                        }
                                    }
                                }
                            }
                        }
                    }
                };
                o.prototype.getPostponeIcon = function(w, q) {
                    var v, p, s, r, u;
                    try {
                        v = a.getNewDate(w.json, true)[2]
                    } catch (t) {
                        s = t;
                        r = n.parse("tomorrow").due_date;
                        p = l.day_diff(new Date(), r);
                        v = g.humanizeDayDiff(p, r)
                    }
                    u = SPAN(_("Postpone to"), " ", B(v));
                    if (n.is_recurring(w.json.date_string, {
                        lang: w.json.date_lang
                    })) {
                        return this.genIcon(w, "next_occurrence", q, u)
                    } else {
                        return this.genIcon(w, "next_occurrence", q, u)
                    }
                };
                o.prototype.daysToAdd = function() {
                    var u, p, t, q, s, r;
                    q = new Date();
                    r = l.iso_day(q);
                    s = window.Settings.START_DAY;
                    t = window.Settings.NEXT_WEEK;
                    p = s - r;
                    if (p <= 0) {
                        p += 7
                    }
                    u = t - s;
                    if (u < 0) {
                        u += 7
                    }
                    return p + u
                };
                return o
            })();
            b.exports = new m()
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.UtilModels.js": 157
        }
    ],
    96: [
        function(d, f, c) {
            var b = d("../generic_manager/GenericManagerUtils.js");
            var a = Class({
                current_replacer: null,
                init: function(g, h) {
                    this.li_items = g;
                    this.controller = h;
                    this.set_indent = true;
                    this.start_x = 0;
                    this.current_indent = 0;
                    this.indent_level = h.name == "ProjectList" && 22 || 28;
                    this.max_indent = h.name == "ProjectList" && 3 || 5;
                    $bindMethods(this)
                },
                onStart: function() {
                    var p = this;
                    var m = ICE.$dnd.current_root;
                    var n = ICE.$dnd.current_handler;
                    var l = $position(m);
                    var o = l.y;
                    var i = this.current_replacer = LI();
                    ICE.$dnd.current_replacer = i;
                    var j = ((m.json.indent - 1) * this.indent_level);
                    var g = $hasClass($body(), "mini_version");
                    if ($parent(m, "div", "left_menu")) {
                        n._kws.position_filter = function(h) {
                            if (g) {
                                return h
                            } else {
                                h.x -= parseInt($getStyle($("all_holder"), "marginLeft"));
                                return h
                            }
                        }
                    }
                    if (this.set_indent) {
                        n._kws.move_filter = function(h, u) {
                            if (p.start_x === 0) {
                                p.start_x = $position(m).x - j
                            }
                            var s = $position(m).x - p.start_x;
                            var q = p.current_indent;
                            var r = p.indent_level;
                            if (s <= 10) {
                                q = 0
                            } else {
                                if (s >= (r * 1) - 10 && s <= (r * 1) + 10) {
                                    q = 1
                                } else {
                                    if (s >= (r * 3) - 10 && s <= (r * 3) + 10) {
                                        q = 2
                                    } else {
                                        if (s >= (r * 4) - 10 && s <= (r * 4) + 10) {
                                            q = 3
                                        } else {
                                            if (s >= (r * 4) - 10 && s <= (r * 4) + 10) {
                                                q = 4
                                            } else {
                                                if (s >= (r * 5) - 10 && s <= (r * 5) + 10) {
                                                    q = 5
                                                }
                                            }
                                        }
                                    }
                                }
                            } if (q > p.max_indent) {
                                q = p.max_indent
                            }
                            if (q != p.current_indent) {
                                var t = i.previousSibling;
                                while (true) {
                                    if (!t) {
                                        break
                                    }
                                    if (!t.json || t == m || $isHidden(t) || $hasClass(t, "manager") || $hasClass(t, "reorder_item")) {
                                        t = t.previousSibling;
                                        continue
                                    }
                                    break
                                }
                                if (!t) {
                                    q = 0
                                } else {
                                    var s = t.json.indent - 1 - q;
                                    if (s < -1) {
                                        q = t.json.indent
                                    }
                                }
                                $setStyle(i, "marginLeft", ((q) * p.indent_level) + "px");
                                p.current_indent = q
                            }
                            return [h, u]
                        }
                    }
                    if (this.set_indent) {
                        $setStyle(i, "marginLeft", j + "px");
                        this.current_indent = m.json.indent - 1;
                        this.cur_child = b.getChildren(m)
                    }
                    this.cur_child = this.cur_child || [];
                    ICE.$dnd.cur_child = this.cur_child;
                    $map(this.cur_child, function(h) {
                        $hide(h)
                    });
                    $setClass(i, m.className);
                    $addClass(i, "drop_item");
                    $removeClass(i, "current");
                    $addClass(m, "on_drag");
                    var k = 0;
                    if (!$hasClass(m, "task_item")) {
                        k = 1
                    }
                    $setHeight(i, m.offsetHeight - k);
                    $setOpacity(m, 0.5);
                    setTimeout(function() {
                        $setTop(m, o);
                        m.style.position = "absolute";
                        $addAfter(i, m);
                        $setWidth(m, i.offsetWidth)
                    }, 1)
                },
                onDrag: function() {
                    var g = ICE.$dnd.current_root;
                    var h = this.current_replacer;
                    $map(this.li_items, function(k) {
                        if (k != g) {
                            var l = k.offsetTop;
                            var i = l + (k.offsetHeight / 2);
                            var j = g.offsetTop;
                            var m = j + g.offsetHeight;
                            if (m > i && j < l) {
                                while (k.nextSibling && k.nextSibling.style.display == "none") {
                                    k = k.nextSibling
                                }
                                $addAfter(h, k)
                            } else {
                                if (j < i && j > l) {
                                    $addBefore(h, k)
                                }
                            }
                        }
                    })
                },
                onEnd: function() {
                    var h = this;
                    var g = ICE.$dnd.current_root;
                    var j = this.current_replacer;
                    $removeClass(g, "on_drag");
                    $setOpacity(g, 1);
                    g.style.position = "";
                    g.style.left = "";
                    g.style.width = "";
                    if (this.set_indent) {
                        var i = this.current_indent + 1;
                        if (i > 5) {
                            i = 5
                        }
                        if (i != g.json.indent) {
                            var k = i - g.json.indent;
                            b.setIndent(g, i);
                            $map(this.cur_child, function(m) {
                                var l = m.json.indent + k;
                                if (l > h.max_indent) {
                                    l = h.max_indent
                                }
                                b.setIndent(m, l)
                            })
                        }
                    }
                    $addBefore(g, j);
                    $remove(j);
                    ICE.$dnd.removeDragAble(g);
                    this.current_replacer = null;
                    ICE.$dnd.current_replacer = null;
                    if (!this.cur_child) {
                        return
                    }
                    $rmap(this.cur_child, function(l) {
                        $addAfter(l, g)
                    });
                    b.showHideChildren(this.cur_child, g);
                    ICE.$dnd.cur_child = this.cur_child = null;
                    return false
                }
            });
            f.exports = a
        }, {
            "../generic_manager/GenericManagerUtils.js": 31
        }
    ],
    97: [
        function(b, a, d) {
            var k = b("../agenda/.coffee.AgendaUtils.js");
            var h = b("../loading/Loading.js");
            var l = b("../project_list/.coffee.ProjectListUtils.js");
            var i = b("../location_manager/LocationManager.js");
            var j = b("../../models/.coffee.ItemsModel.js");
            var c = b("../../models/.coffee.ProjectsModel.js");
            var g = true;
            d.show = function() {
                var n = i.getHash();
                if (n && g && n != "start") {
                    i.updateView(n);
                    g = false;
                    h.hide();
                    return true
                }
                var m = j.getAll().length === 0;
                if (m) {
                    l.setCurrentById(window.User.inbox_project)
                } else {
                    f();
                    i.updateLocation("start")
                }
                h.hide();
                return false
            };
            var f = d.queryStart = function() {
                var m = window.Settings && window.Settings.START_PAGE || "";
                if (m == "_info_page") {
                    m = "overdue, 7 days"
                }
                if (m.indexOf("_project_") === 0) {
                    var n = parseInt(m.replace("_project_", ""));
                    if (c.get(n)) {
                        l.setCurrentById(n)
                    }
                } else {
                    if (m != "_blank") {
                        k.query(m, false)
                    } else {
                        k.reset();
                        $replace($("editor"), null)
                    }
                }
            };
            d.get = function() {
                var n = window.Settings && window.Settings.START_PAGE || "";
                var m;
                if (m = n.match(/_project_(\d+)/)) {
                    var p = parseInt(m[1]);
                    var o = c.get(p);
                    if (o) {
                        return o.name
                    } else {
                        return "Project"
                    }
                }
                if (n == "_blank") {
                    return "blank"
                }
                return n
            }
        }, {
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../agenda/.coffee.AgendaUtils.js": 6,
            "../loading/Loading.js": 49,
            "../location_manager/LocationManager.js": 52,
            "../project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    98: [
        function(f, b, i) {
            var k, d, h, l, n, o, m, j, g, a, c;
            a = window.Signals;
            d = window.AmiButton;
            o = window.Indicator;
            k = window.Alerts;
            l = window.GB_showHTML;
            c = f("../../models/.coffee.SyncEngine.js");
            m = f("../../models/.coffee.ItemsModel.js");
            g = f("../../models/.coffee.ProjectsModel.js");
            j = f("../../models/.coffee.LabelsModel.js");
            h = f("../../models/.coffee.FiltersModel.js");
            n = (function() {
                function p() {
                    a.connect("sync_state_changed", (function(q) {
                        return function() {
                            var r;
                            if (!q.ul) {
                                return
                            }
                            r = c.getSyncState();
                            if (r === c.sync_states.syncing) {
                                $replace(q.ul, LI("..."));
                                $setVisibility(q.btn_retry, false);
                                return $show(q.indicator)
                            } else {
                                q.generateListReport(q.ul);
                                $setVisibility(q.btn_retry, true);
                                return $hide(q.indicator)
                            }
                        }
                    })(this))
                }
                p.prototype.show = function() {
                    var q, u, v, s, t, r;
                    this.btn_retry = d.createButton(_("Try to sync again"), null, "red");
                    u = d.createButton(_("Discard failed updates"), null);
                    v = d.createButton(_("Report issue to Todoist Support"), null);
                    t = DIV({
                        c: "sync_report"
                    }, DIV(_("Your updates couldn't be synced with Todoist's servers. Please wait a few minutes and try again."), DIV({
                        c: "small_separator"
                    }), this.indicator = o.imgSmall(), this.btn_retry, DIV({
                        c: "separator"
                    }), _("Detailed log"), ":", DIV({
                        c: "small_separator"
                    }), this.ul = UL({
                        c: "sync_error_text",
                        name: "body"
                    })), DIV({
                        c: "separator"
                    }), DIV(SPAN({
                        c: "desc"
                    }, _("Sync issues aren't common; please alert our Support Team.")), DIV({
                        c: "small_separator"
                    }), v), DIV({
                        c: "separator"
                    }), DIV(SPAN({
                        c: "desc"
                    }, _("Discarding will restore your sync, but your updates mentioned above will be lost")), DIV({
                        c: "small_separator"
                    }), u), DIV({
                        c: "separator"
                    }));
                    $hide(this.indicator);
                    this.generateListReport(this.ul);
                    r = "Critical sync issue";
                    q = "\n\n\nDEBUG STACK TRACE:\n" + this.getJson();
                    v.href = "mailto:support@todoist.com?" + $encode({
                        subject: r,
                        body: q
                    });
                    $AEV(this.btn_retry, "click", function() {
                        c.sync(null, true, true);
                        return false
                    });
                    $AEV(u, "click", function() {
                        k.confirmYesNo(_("Are you sure you want to discard your sync updates?"), function(w) {
                            if (w) {
                                localStorage.clear();
                                return window.location.reload()
                            }
                        });
                        return false
                    });
                    s = DIV({
                        c: "sync_error_handler"
                    }, t);
                    return l(_("Sync issues"), s, 300, 550, (function(w) {
                        return function() {
                            return w.ul = null
                        }
                    })(this))
                };
                p.prototype.generateListReport = function(z, y) {
                    var t, C, q, H, x, s, w, F, r, J, G, u, D, v;
                    if (y == null) {
                        y = false
                    }
                    $replace(z, null);
                    H = function(K) {
                        var M, L;
                        L = m.getById(K.id);
                        M = (L != null ? L.content : void 0) || K.content;
                        if (M) {
                            return $trim(M, 75)
                        }
                    };
                    s = function(L) {
                        var K, M;
                        M = g.get(L.id);
                        K = (M != null ? M.name : void 0) || L.name;
                        if (K) {
                            return $trim(K, 75)
                        }
                    };
                    x = function(M) {
                        var L, K;
                        L = j.getById(M.id);
                        K = (L != null ? L.name : void 0) || M.name;
                        if (K) {
                            return $trim(K, 75)
                        }
                    };
                    q = function(L) {
                        var M, K;
                        M = h.get(L.id);
                        K = (M != null ? M.name : void 0) || M.name;
                        if (K) {
                            return $trim(K, 75)
                        }
                    };
                    C = 0;
                    J = {};
                    if (!y) {
                        $add(z, LI({
                            c: "full_log"
                        }, w = A({
                            href: "#"
                        }, _("Show full log"))));
                        $AEV(w, "click", (function(K) {
                            return function() {
                                K.generateListReport(z, true);
                                return false
                            }
                        })(this))
                    }
                    v = c.sync_queue.get();
                    for (u = 0, D = v.length; u < D; u++) {
                        t = v[u];
                        if (t.last_error) {
                            C++;
                            r = "" + t.type + "-" + t.args.id + "-" + t.last_error.error_code;
                            if (J[r]) {
                                continue
                            } else {
                                J[r] = true
                            }
                            G = null;
                            try {
                                if (t.type.indexOf("item_") !== -1) {
                                    G = H(t.args)
                                } else {
                                    if (t.type.indexOf("project_") !== -1) {
                                        G = s(t.args)
                                    } else {
                                        if (t.type.indexOf("label_") !== -1) {
                                            G = x(t.args)
                                        } else {
                                            if (t.type.indexOf("filter_") !== -1) {
                                                G = q(t.args)
                                            }
                                        }
                                    }
                                }
                            } catch (E) {}
                            if (G) {
                                G = B(G, ": ")
                            } else {
                                G = ""
                            } if (y) {
                                F = LI(B(G), $serialize(t))
                            } else {
                                F = LI(B(G), this.humanCommandType(t.type), ". ")
                            }
                            $add(z, F)
                        }
                    }
                    if (C === 0) {
                        return $add(z, LI(_("All updates processed successfully!")))
                    }
                };
                p.prototype.getJson = function() {
                    var v, s, r, u, q, t;
                    r = [window.User.id, navigator.appVersion, window.LANG, $queryArgument("v")];
                    t = c.sync_queue.get();
                    for (u = 0, q = t.length; u < q; u++) {
                        v = t[u];
                        if (v.last_error) {
                            s = $update({}, v);
                            if (s.args) {
                                if (s.args.content) {
                                    s.args.content = "..."
                                }
                                if (s.args.name) {
                                    s.args.name = "..."
                                }
                            }
                            r.push(s)
                        }
                    }
                    return $serialize(r)
                };
                p.prototype.humanCommandType = function(q) {
                    switch (q) {
                        case "item_add":
                            return _("Task add failed");
                        case "item_delete":
                            return _("Task delete failed");
                        case "item_update":
                            return _("Task update failed");
                        case "item_update_date_complete":
                            return _("Task update failed");
                        case "item_move":
                            return _("Task move failed");
                        case "item_complete":
                            return _("Task complete failed");
                        case "item_uncomplete":
                            return _("Task uncomplete failed");
                        case "item_uncomplete_update_meta":
                            return _("Task uncomplete failed");
                        case "item_update_orders_indents":
                            return _("Task order update failed");
                        case "item_update_day_orders":
                            return _("Task order update failed");
                        case "note_add":
                            return _("Comment add failed");
                        case "note_update":
                            return _("Comment update failed");
                        case "note_delete":
                            return _("Comment delete failed");
                        case "project_add":
                            return _("Project add failed");
                        case "project_update":
                            return _("Project update failed");
                        case "project_delete":
                            return _("Project delete failed");
                        case "project_archive":
                            return _("Project archive failed");
                        case "project_unarchive":
                            return _("Project unarchive failed");
                        case "project_update_orders_indents":
                            return _("Project order update failed");
                        case "label_add":
                            return _("Label add failed");
                        case "label_delete":
                            return _("Label delete failed");
                        case "label_update":
                            return _("Label update failed");
                        case "label_update_orders":
                            return _("Label order update failed");
                        case "filter_add":
                            return _("Filter add failed");
                        case "filter_delete":
                            return _("Filter delete failed");
                        case "filter_update":
                            return _("Filter update failed");
                        case "filter_update_orders":
                            return _("Filter order update failed");
                        case "share_project":
                            return _("Share project failed");
                        case "delete_collaborator":
                            return _("Remove collaborator failed");
                        case "accept_invitation":
                            return _("Accept invitation failed");
                        case "reject_invitation":
                            return _("Reject invitation failed");
                        case "delete_invitation":
                            return _("Delete invitation failed")
                    }
                    return _("%s failed").replace("%s", q)
                };
                return p
            })();
            b.exports = new n()
        }, {
            "../../models/.coffee.FiltersModel.js": 132,
            "../../models/.coffee.ItemsModel.js": 137,
            "../../models/.coffee.LabelsModel.js": 138,
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.SyncEngine.js": 152
        }
    ],
    99: [
        function(f, b, g) {
            var i, j, n, l, a, c, d, m, k, h = function(o, p) {
                    return function() {
                        return o.apply(p, arguments)
                    }
                };
            a = window.Signals;
            n = window.Indicator;
            i = window.AmiTooltip;
            k = window.imageSprite;
            c = f("../../models/.coffee.SyncEngine.js");
            l = f("../../models/.coffee.LoadEngine.js");
            d = f("../../components/sync_error_handler/.coffee.SyncErrorHandler.js");
            m = f("../../components/themes/.coffee.Themes.js");
            j = (function() {
                function o() {
                    this.showSyncErrorHandler = h(this.showSyncErrorHandler, this);
                    this.forceSync = h(this.forceSync, this);
                    this.showOfflineInfo = h(this.showOfflineInfo, this);
                    this._syncStateChanged = h(this._syncStateChanged, this);
                    this.syncStateChanged = h(this.syncStateChanged, this);
                    this.render = h(this.render, this);
                    this.current_state = null;
                    a.connect("sync_state_changed", this.syncStateChanged);
                    $AEV(window, "online", this.syncStateChanged);
                    $AEV(window, "offline", this.syncStateChanged);
                    $AEV(window, "load", (function(p) {
                        return function() {
                            p.render();
                            if (navigator.onLine === false) {
                                return p.syncStateChanged()
                            }
                        }
                    })(this))
                }
                o.prototype.render = function() {
                    if (this.holder) {
                        return this.holder
                    }
                    this.holder = SPAN({
                        id: "sync_state_icon"
                    });
                    return this.holder
                };
                o.prototype.syncStateChanged = function() {
                    if (!this.holder) {
                        return
                    }
                    if (this.timeout) {
                        clearTimeout(this.timeout)
                    }
                    return this.timeout = setTimeout(this._syncStateChanged, 100)
                };
                o.prototype._syncStateChanged = function() {
                    var s, p, r, t, q;
                    t = c.getSyncState();
                    q = c.sync_states;
                    s = null;
                    if (t === q.syncing) {
                        s = "syncing"
                    } else {
                        if (c.global_error) {
                            s = "offline"
                        } else {
                            if (c.getQueueErrorLength()) {
                                s = "offline"
                            } else {
                                if (!l.fetched_data_from_server) {
                                    s = "offline"
                                } else {
                                    s = "none"
                                }
                            }
                        }
                    } if (this.current_state === s) {
                        return
                    }
                    this.current_state = s;
                    p = navigator.onLine;
                    if (p !== void 0) {
                        if (!p) {
                            s = "offline"
                        }
                    }
                    if (s) {
                        $replace(this.holder, null);
                        if (s === "syncing") {
                            return $add(this.holder, n.cssSpinner("small"))
                        } else {
                            if (s === "offline") {
                                this.offline_link = r = A({
                                    href: "#",
                                    c: "fixed_pos"
                                }, k("cmp_" + (m.getSyncIcon()), 16, 16));
                                $AEV(r, "mouseover", $p(this.showOfflineInfo, r));
                                $AEV(r, "mouseout", i.hide);
                                r.onclick = this.forceSync;
                                return $add(this.holder, r)
                            }
                        }
                    }
                };
                o.prototype.showOfflineInfo = function(r) {
                    var p, t, q, u, s;
                    u = c.getSyncState();
                    s = _("Offline mode is on");
                    this.offline_link.onclick = this.forceSync;
                    if (c.global_error) {
                        t = c.timeout / 1000;
                        q = _("%s seconds").replace("%s", t || 10);
                        p = DIV(_("Needs to sync with Todoist"), BR(), _("Will try to sync again in %s").replace("%s", q), BR(), _("Click on this icon to force a sync"))
                    } else {
                        if (c.getQueueErrorLength()) {
                            s = _("Sync issues");
                            p = DIV(_("We could not sync some updates"), BR(), _("Click here for more details"));
                            this.offline_link.onclick = this.showSyncErrorHandler
                        } else {
                            p = null
                        }
                    }
                    return i.show(r, DIV({
                        c: "tooltip_cnt"
                    }, B(s), p), null, null, 25)
                };
                o.prototype.forceSync = function() {
                    i.hide();
                    this.current_state = "syncing";
                    c.sync(null, true, true);
                    $replace(this.holder, n.cssSpinner("small"));
                    return false
                };
                o.prototype.showSyncErrorHandler = function() {
                    d.show();
                    return false
                };
                return o
            })();
            b.exports = new j()
        }, {
            "../../components/sync_error_handler/.coffee.SyncErrorHandler.js": 98,
            "../../components/themes/.coffee.Themes.js": 101,
            "../../models/.coffee.LoadEngine.js": 139,
            "../../models/.coffee.SyncEngine.js": 152
        }
    ],
    100: [
        function(f, c, j) {
            var d, b, k, o, m, h, p, g, n, a, i, l = function(q, r) {
                    return function() {
                        return q.apply(r, arguments)
                    }
                };
            a = window.Signals;
            b = window.GB_hide;
            p = window.Indicator;
            d = window.AmiButton;
            o = window.GB_showYouTube;
            k = window.GB_showHTML;
            b = window.GB_hide;
            m = window.GHtml5Uploader;
            g = f("../../models/.coffee.ProjectsModel.js");
            i = f("../../models/.coffee.TemporaryIds.js");
            n = f("../promotion_overlay/.coffee.PromotionOverlay.js");
            h = (function() {
                function q() {
                    this.exportAsUrl = l(this.exportAsUrl, this);
                    this.exportAsFile = l(this.exportAsFile, this);
                    this.showExportTemplate = l(this.showExportTemplate, this)
                }
                q.prototype.showExportTemplate = function(t) {
                    var s, u, r;
                    if (!this.checkPremiumForTemplates()) {
                        return false
                    }
                    r = DIV({
                        c: "template_exporter"
                    }, DIV(_("Please pick the template type:")), DIV(s = d.createButton(_("Export as file"))), DIV(u = d.createButton(_("Export as shareable URL"))));
                    $AEV(s, "click", $p(this.exportAsFile, t));
                    $AEV(u, "click", $p(this.exportAsUrl, t, r));
                    return k(_("Export as a template"), r, 300, 400)
                };
                q.prototype.exportAsFile = function(s) {
                    var r;
                    r = function(u) {
                        var t;
                        t = "/ImportExport/exportProject?project_id=" + u;
                        window.open(t);
                        b();
                        return false
                    };
                    return this.customShowGb(s, r)
                };
                q.prototype.exportAsUrl = function(u, s) {
                    var r, t;
                    t = function(w) {
                        var x, v;
                        $replace(s, DIV({
                            c: "copy_url"
                        }, _("Copy the URL"), ":", BR(), v = INPUT({
                            readonly: "readonly",
                            type: "text"
                        }), x = d.createButton(_("Close"))));
                        v.value = "https://todoist.com/importFromTemplate?t_url=" + $urlencode(w.file_url);
                        $AEV(v, "click", function() {
                            return v.select()
                        });
                        $AEV(x, "click", b);
                        return v.select()
                    };
                    r = function() {
                        var v;
                        $replace(s, p.cssSpinner());
                        v = $requestJSON("/ImportExport/exportProjectAsURL");
                        v.addCallback(t);
                        return v.sendReq({
                            project_id: u
                        })
                    };
                    this.customShowGb(u, r);
                    return false
                };
                q.prototype.showImport = function(t) {
                    var r, s, w, u, v;
                    if (!this.checkPremiumForTemplates()) {
                        return false
                    }
                    s = DIV({
                        c: "template_importer"
                    }, u = DIV({
                        c: "upload_holder"
                    }), DIV({
                        c: "template_help"
                    }, _("Import tasks from a template, use this to create a new project by duplicating an existing one."), BR(), v = A({
                        href: "https://www.youtube.com/watch?v=_Rl_CLGY_3o"
                    }, "▶ ", _("Show a help video"))));
                    $AEV(v, "click", function() {
                        o("", "https://www.youtube.com/watch?v=_Rl_CLGY_3o", 387, 640);
                        return false
                    });
                    r = function() {
                        var x;
                        x = {
                            onSuccess: function() {
                                var y;
                                y = g.get(t);
                                if (y) {
                                    a.sendSignal("refresh_interface", [y], true)
                                }
                                return setTimeout(b, 200)
                            }
                        };
                        return top.SyncEngine.sync(x, true)
                    };
                    w = new m(u, "/ImportExport/importIntoProjectHTML5?project_id=" + t, false, {
                        allFilesUploaded: r,
                        fileUploaded: r
                    });
                    k(_("Import from template"), s, 300, 400, {
                        close_validator_fn: function() {
                            w.remove();
                            return true
                        }
                    });
                    return false
                };
                q.prototype.checkPremiumForTemplates = function() {
                    if (window.User.is_premium) {
                        return true
                    } else {
                        n.show(_("Templates are a premium feature"), _("Templates let you save time and busy work. Perfect for your repetitive projects."));
                        return false
                    }
                };
                q.prototype.customShowGb = function(r, s) {
                    return i.waitToResolve(r, function(t) {
                        return s(t)
                    })
                };
                return q
            })();
            c.exports = new h()
        }, {
            "../../models/.coffee.ProjectsModel.js": 143,
            "../../models/.coffee.TemporaryIds.js": 155,
            "../promotion_overlay/.coffee.PromotionOverlay.js": 78
        }
    ],
    101: [
        function(d, f, b) {
            var a, g, c = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            g = window.Signals;
            a = (function() {
                h.prototype.icon_type = "light";
                h.prototype.theme = "theme_todoist";
                h.prototype.theme_name = "todoist";
                h.prototype.theme_number = 10;
                h.prototype.theme_id_to_name = {
                    1: "noir",
                    2: "neutral",
                    3: "tangerine",
                    4: "sunflower",
                    5: "clover",
                    6: "blueberry",
                    7: "sky",
                    8: "amethyst",
                    9: "graphite"
                };

                function h() {
                    this.rgbToHex = c(this.rgbToHex, this);
                    this.getSyncIcon = c(this.getSyncIcon, this);
                    this.getTertiaryColor = c(this.getTertiaryColor, this);
                    this.getSecondaryColor = c(this.getSecondaryColor, this);
                    this.getPrimaryColor = c(this.getPrimaryColor, this);
                    this.getMenuToggleIcon = c(this.getMenuToggleIcon, this);
                    this.getKarmaDownIcon = c(this.getKarmaDownIcon, this);
                    this.getKarmaUpIcon = c(this.getKarmaUpIcon, this);
                    this.getGearIcon = c(this.getGearIcon, this);
                    this.getNotificationsIcon = c(this.getNotificationsIcon, this);
                    this.getQuickAddIcon = c(this.getQuickAddIcon, this);
                    this.getSearchHelp = c(this.getSearchHelp, this);
                    this.getSearchIcon = c(this.getSearchIcon, this);
                    this.getLogo = c(this.getLogo, this);
                    this.switchThemes = c(this.switchThemes, this);
                    g.connect("user_updated", (function(i) {
                        return function(j) {
                            if ($body()) {
                                if (i.theme_number !== j.theme) {
                                    return i.switchThemes(j.theme)
                                }
                            }
                        }
                    })(this))
                }
                h.prototype.switchThemes = function(j) {
                    var i;
                    this.theme_number = j;
                    this.theme_name = this.theme_id_to_name[j] || "todoist";
                    this.theme = "theme_" + this.theme_name;
                    if (this.theme_name === "sunflower" || this.theme_name === "neutral") {
                        this.icon_type = "dark"
                    } else {
                        this.icon_type = "light"
                    }
                    i = $body().className;
                    i = i.replace(/theme_\S+/g, "");
                    i += " " + this.theme;
                    $body().className = i;
                    return g.sendSignal("theme_changed")
                };
                h.prototype.replaceImageClass = function(j, i) {
                    if (j && i) {
                        j.className = j.className.replace(/cmp_\S+/, "");
                        return $addClass(j, i)
                    }
                };
                h.prototype.getLogo = function() {
                    return "cmp_" + this.icon_type + "_logo"
                };
                h.prototype.getSearchIcon = function(i) {
                    return "cmp_" + (i || this.icon_type) + "_search"
                };
                h.prototype.getSearchHelp = function(i) {
                    return "cmp_" + (i || this.icon_type) + "_query_help"
                };
                h.prototype.getQuickAddIcon = function() {
                    return "cmp_" + this.icon_type + "_add_task"
                };
                h.prototype.getNotificationsIcon = function() {
                    return "cmp_" + this.icon_type + "_notifications"
                };
                h.prototype.getGearIcon = function() {
                    return "cmp_" + this.icon_type + "_gear"
                };
                h.prototype.getKarmaUpIcon = function() {
                    return "cmp_" + this.icon_type + "_karma_up"
                };
                h.prototype.getKarmaDownIcon = function() {
                    return "cmp_" + this.icon_type + "_karma_down"
                };
                h.prototype.getMenuToggleIcon = function() {
                    return "cmp_" + this.icon_type + "_menu_toggle"
                };
                h.prototype.getPrimaryColor = function() {
                    switch (this.theme_number) {
                        case 1:
                            return this.rgbToHex(61, 61, 61);
                        case 2:
                            return this.rgbToHex(247, 247, 247);
                        case 3:
                            return this.rgbToHex(255, 145, 0);
                        case 4:
                            return this.rgbToHex(255, 207, 6);
                        case 5:
                            return this.rgbToHex(59, 155, 12);
                        case 6:
                            return this.rgbToHex(48, 111, 234);
                        case 7:
                            return this.rgbToHex(78, 193, 230);
                        case 8:
                            return this.rgbToHex(142, 36, 170);
                        case 9:
                            return this.rgbToHex(81, 101, 121);
                        default:
                            return this.rgbToHex(221, 75, 57)
                    }
                };
                h.prototype.getSecondaryColor = function() {
                    switch (this.theme_number) {
                        case 1:
                            return this.rgbToHex(102, 92, 92);
                        case 2:
                            return this.rgbToHex(234, 184, 181);
                        case 3:
                            return this.rgbToHex(249, 82, 45);
                        case 4:
                            return this.rgbToHex(255, 154, 8);
                        case 5:
                            return this.rgbToHex(45, 109, 17);
                        case 6:
                            return this.rgbToHex(26, 19, 158);
                        case 7:
                            return this.rgbToHex(72, 144, 216);
                        case 8:
                            return this.rgbToHex(88, 30, 155);
                        case 9:
                            return this.rgbToHex(8, 61, 84);
                        default:
                            return this.rgbToHex(127, 23, 15)
                    }
                };
                h.prototype.getTertiaryColor = function() {
                    switch (this.theme_number) {
                        case 1:
                            return this.rgbToHex(150, 137, 137);
                        case 2:
                            return this.rgbToHex(242, 227, 226);
                        case 3:
                            return this.rgbToHex(252, 193, 26);
                        case 4:
                            return this.rgbToHex(255, 239, 174);
                        case 5:
                            return this.rgbToHex(175, 191, 16);
                        case 6:
                            return this.rgbToHex(166, 191, 247);
                        case 7:
                            return this.rgbToHex(145, 229, 242);
                        case 8:
                            return this.rgbToHex(242, 95, 221);
                        case 9:
                            return this.rgbToHex(169, 196, 211);
                        default:
                            return this.rgbToHex(247, 149, 82)
                    }
                };
                h.prototype.getSyncIcon = function() {
                    if (this.theme_name === "todoist") {
                        return "needs_sync_yellow"
                    } else {
                        return "needs_sync"
                    }
                };
                h.prototype.componentToHex = function(j) {
                    var i;
                    i = j.toString(16);
                    if (i.length === 1) {
                        return "0" + i
                    } else {
                        return i
                    }
                };
                h.prototype.rgbToHex = function(k, j, i) {
                    return "#" + this.componentToHex(k) + this.componentToHex(j) + this.componentToHex(i)
                };
                return h
            })();
            window.Themes = new a();
            f.exports = window.Themes
        }, {}
    ],
    102: [
        function(d, c, f) {
            var a, j, g, b, i, k, h = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            g = window.GB_showHTML;
            j = window.GB_hideIfNeeded;
            k = window.format;
            a = d("../../models/.coffee.Storage.js").$storage;
            i = d("../opener/WindowOpener.js");
            b = (function() {
                function l() {
                    this.showSettings = h(this.showSettings, this);
                    this.hideTimezoneHint = h(this.hideTimezoneHint, this);
                    this.changeTimezoneToCurrent = h(this.changeTimezoneToCurrent, this);
                    this.createHintLink = h(this.createHintLink, this);
                    this.showTimezoneHintNormal = h(this.showTimezoneHintNormal, this);
                    this.showTimezoneHint = h(this.showTimezoneHint, this);
                    this.guessTimezone = h(this.guessTimezone, this);
                    this.checkTimezone = h(this.checkTimezone, this);
                    this.setValidTimezone = h(this.setValidTimezone, this);
                    this.getValidTimezone = h(this.getValidTimezone, this)
                }
                l.prototype.getValidTimezone = function() {
                    return a("valid_timezone").get()
                };
                l.prototype.setValidTimezone = function(m) {
                    return a("valid_timezone").set(m)
                };
                l.prototype.checkTimezone = function() {
                    var m, o, n;
                    if (!window.User || (window.User.tz_offset == null)) {
                        return
                    }
                    if (this.getValidTimezone() === window.User.timezone) {
                        return
                    }
                    o = window.User.tz_offset;
                    n = o[1] * 60 + o[2];
                    m = -new Date().getTimezoneOffset();
                    if (n !== m) {
                        return this.guessTimezone(m)
                    }
                };
                l.prototype.guessTimezone = function(n) {
                    var m;
                    m = $requestJSON("/API/v6/guess_timezone");
                    m.addCallback(this.showTimezoneHint);
                    return m.sendReq({
                        mm_offset: n
                    })
                };
                l.prototype.showTimezoneHint = function(m) {
                    return this.showTimezoneHintNormal(m)
                };
                l.prototype.showTimezoneHintNormal = function(n) {
                    var m;
                    if (n === window.User.timezone) {
                        return
                    }
                    m = DIV({
                        c: "timezone_alert"
                    });
                    if (n !== "UNKNOWN_TIMEZONE") {
                        this.current_timezone = n;
                        $add(m, k(_("Change timezone to %s?"), n), BR(), this.createHintLink(_("Yes, update my settings"), this.changeTimezoneToCurrent, "amibutton amibutton_red amibutton_big timezone_button"), BR(), this.createHintLink(_("Don't update settings"), this.hideTimezoneHint, "timezone_link timezone_link_block"), this.createHintLink(_("View my settings"), this.showSettings, "timezone_link timezone_link_block"))
                    } else {
                        $add(m, DIV({
                            c: "timezone_alert_message"
                        }, _("Your system timezone doesn't match your Todoist settings. Fix it now?")), this.createHintLink(_("Yes, show my settings"), this.showSettings, "amibutton amibutton_red amibutton_big timezone_button"), BR(), this.createHintLink(_("Don't update settings"), this.hideTimezoneHint, "timezone_link timezone_link_block"))
                    }
                    return g(_("Time zone settings"), DIV(m), 200, 400)
                };
                l.prototype.createHintLink = function(o, m, p) {
                    var n;
                    if (p == null) {
                        p = "timezone_link"
                    }
                    n = A({
                        c: p,
                        href: "#"
                    }, o);
                    $AEV(n, "click", m);
                    return n
                };
                l.prototype.changeTimezoneToCurrent = function() {
                    var m;
                    this.hideTimezoneHint();
                    m = $request("/Users/setTimezone");
                    m.addCallback((function(n) {
                        return function() {
                            window.User.timezone = n.current_timezone;
                            a("User").set(window.User);
                            return window.location.reload()
                        }
                    })(this));
                    m.sendReq({
                        value: this.current_timezone
                    });
                    return false
                };
                l.prototype.hideTimezoneHint = function() {
                    j();
                    return false
                };
                l.prototype.showSettings = function() {
                    this.hideTimezoneHint();
                    i.showPrefs("general");
                    return false
                };
                return l
            })();
            c.exports = new b()
        }, {
            "../../models/.coffee.Storage.js": 150,
            "../opener/WindowOpener.js": 64
        }
    ],
    103: [
        function(f, b, g) {
            var i, l, n, c, j, k, a, h, d, o, m;
            a = window.Signals;
            i = window.AmiTooltip;
            m = window.imageSprite;
            d = f("../sync_state_icon/.coffee.SyncStateIcon.js");
            j = f("../notifications/.coffee.Notifications.js");
            k = f("../quick_add/.coffee.QuickAdd.js");
            l = f("../completed_history/.coffee.CompletedQuickVisualize.js");
            o = f("../themes/.coffee.Themes.js");
            h = f("../start_page/StartPage.js");
            c = f("../../menus/MenuUser.js");
            n = (function() {
                function p() {
                    a.connect("theme_changed", (function(q) {
                        return function() {
                            q.renderTopLogo();
                            o.replaceImageClass(q.icon_add_task, o.getQuickAddIcon());
                            return o.replaceImageClass(q.icon_gear, o.getGearIcon())
                        }
                    })(this))
                }
                p.prototype.renderTopLogo = function() {
                    var q;
                    q = A({
                        href: "#"
                    }, m(o.getLogo(), 30, 30));
                    q.onclick = function() {
                        h.queryStart();
                        return false
                    };
                    return $replace($("logo"), q)
                };
                p.prototype.render = function() {
                    var q, r;
                    this.renderTopLogo();
                    r = $("top_icons");
                    $add(r, this.icon_add_task = this.createIcon(o.getQuickAddIcon(), SPAN(B(_("Quick Add Task")), BR(), _("Open by typing %s").replace("%s", "q")), function() {
                        return k.toggle()
                    }));
                    this.icon_add_task.id = "icon_add_task";
                    $add(r, j.renderIcon());
                    $add(r, SPAN({
                        id: "completed_items"
                    }, l.renderLink()));
                    $add(r, q = SPAN({
                        id: "gear_holder",
                        c: "menu_icon fixed_pos"
                    }, this.icon_gear = this.createIcon(o.getGearIcon(), null, null)));
                    $AEV(q, ["click", "touchend"], function() {
                        c.open(q);
                        return false
                    });
                    $ATT($("top_icons"), d.render());
                    return a.connect("new_version_available", function() {
                        $remove($gc(q, "span", "unread"));
                        return $ATT(q, SPAN({
                            c: "unread menu_icon"
                        }))
                    })
                };
                p.prototype.createIcon = function(q, t, s) {
                    var r;
                    r = m("" + q + " icon fixed_pos", 26, 16);
                    if (!$isTouchDeviceOnly()) {
                        if (t) {
                            i.showSimpleText(r, t, null, null, 5)
                        }
                    }
                    if (s) {
                        $AEV(r, "click", s)
                    }
                    return r
                };
                return p
            })();
            b.exports = new n()
        }, {
            "../../menus/MenuUser.js": 123,
            "../completed_history/.coffee.CompletedQuickVisualize.js": 17,
            "../notifications/.coffee.Notifications.js": 62,
            "../quick_add/.coffee.QuickAdd.js": 79,
            "../start_page/StartPage.js": 97,
            "../sync_state_icon/.coffee.SyncStateIcon.js": 99,
            "../themes/.coffee.Themes.js": 101
        }
    ],
    104: [
        function(d, c, f) {
            var a, g, b, h, k, j, i = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            h = window.GB_showHTML;
            b = window.GB_hide;
            g = window.Alerts;
            j = window.imageSprite;
            a = d("../../models/.coffee.Storage.js").$storage;
            k = (function() {
                function l() {
                    this.show = i(this.show, this);
                    this.showIfUnique = i(this.showIfUnique, this);
                    this.countAndShowIfNeeded = i(this.countAndShowIfNeeded, this)
                }
                l.prototype.countAndShowIfNeeded = function() {
                    var n, m, o;
                    if (window.User.karma < 1000) {
                        return
                    }
                    if (a("ViralSpreadDone").get()) {
                        return
                    }
                    n = a("ViewCount").get();
                    if (n) {
                        o = n.split("-"), n = o[0], m = o[1];
                        n = parseInt(n);
                        m = parseInt(m)
                    } else {
                        n = 0;
                        m = 3
                    }
                    n++;
                    a("ViewCount").set("" + n + "-" + m);
                    if (n > m) {
                        return this.showIfUnique()
                    }
                };
                l.prototype.showIfUnique = function() {
                    var m;
                    m = $requestJSON("/API/v6/tooltips/is_seen");
                    m.addCallback((function(n) {
                        return function(o) {
                            if (o.result) {
                                return a("ViralSpreadDone").set(1)
                            } else {
                                return n.show()
                            }
                        }
                    })(this));
                    return m.sendReq({
                        name: "viral_spread",
                        token: window.User.token
                    })
                };
                l.prototype.show = function() {
                    var q, o, t, m, r, s, p, n;
                    if (this.tooltip_shown) {
                        return
                    }
                    r = _("If you enjoy using Todoist, would you mind taking a moment and telling others about it?") + "<br><br>" + _("It won't take more than some seconds. Thanks for your support!");
                    q = g.renderHolder(r);
                    $addClass(q.frame, "viral_holder");
                    o = this.shareLink("facebook", "Facebook", "https://www.facebook.com/sharer/sharer.php?u=https://todoist.com/");
                    m = this.shareLink("twitter", "Twitter", this.genTwitterLink());
                    t = this.shareLink("gplus", "Google+", "https://plus.google.com/share?url=https://todoist.com/");
                    $add(q.buttons, BR(), o, m, t);
                    $add(q.buttons, BR(), BR(), BR());
                    $add(q.buttons, p = DIV(n = A({
                        href: "#",
                        c: "cancel"
                    }, _("Remind me later")), s = A({
                        href: "#",
                        c: "cancel"
                    }, _("No, Thanks"))));
                    $AEV([o, m, t], "click", (function(u) {
                        return function() {
                            var v;
                            u.disableTooltip();
                            $replace(p, DIV(B(_("Thank you!"))), v = A({
                                href: "#",
                                c: "viral_link"
                            }, _("Close")));
                            return $AEV(v, "click", b)
                        }
                    })(this));
                    $AEV(n, "click", this.remindMeLater);
                    $AEV(s, "click", this.disableTooltip);
                    $AEV([n, s], "click", b);
                    h("", q.frame, 180, 350, {
                        callback_fn: (function(u) {
                            return function() {
                                if (!a("ViralSpreadDone").get()) {
                                    return u.remindMeLater()
                                }
                            }
                        })(this)
                    });
                    return this.tooltip_shown = true
                };
                l.prototype.disableTooltip = function() {
                    a("ViralSpreadDone").set(1);
                    return $request("/API/v6/tooltips/mark_as_seen").sendReq({
                        name: "viral_spread",
                        token: window.User.token
                    })
                };
                l.prototype.remindMeLater = function() {
                    return a("ViewCount").set("0-30")
                };
                l.prototype.shareLink = function(n, p, o) {
                    var m;
                    m = j("cmp_" + n, 16, 16);
                    return A({
                        href: o,
                        target: "_blank",
                        c: "viral_link"
                    }, m, p)
                };
                l.prototype.genTwitterLink = function() {
                    var m;
                    m = _("Get more productive and organized with @Todoist. Sign up for free.");
                    m += " https://todoist.com/";
                    m = $urlencode(m);
                    return "https://twitter.com/home?status=" + m
                };
                return l
            })();
            c.exports = new k()
        }, {
            "../../models/.coffee.Storage.js": 150
        }
    ],
    105: [
        function(k, b, C) {
            var s, d, w, n, x, r, g, u, z, f, v, h, i, j, y, o, t, m, a, q, l, p, c;
            w = window.Dateist;
            n = window.DateistDateHelpers;
            d = window.DateUtils;
            m = window.Signals;
            c = k("../components/misc/Misc.js").isMacApp;
            j = k("../components/project_list/.coffee.ProjectListUtils.js");
            v = k("../components/notes/Notes.js");
            u = k("../components/local_notifications/.coffee.LocalNotifications.js");
            z = k("../components/local_reminders/.coffee.LocalReminders.js");
            i = k("../components/postpone/.coffee.Postpone.js");
            q = k("../components/themes/.coffee.Themes.js");
            r = k("../models/.coffee.ItemsModel.js");
            g = k("../models/.coffee.LabelsModel.js");
            y = k("../models/.coffee.ProjectsModel.js");
            a = k("../models/.coffee.SyncEngine.js");
            s = k("../models/.coffee.Collaborators.js");
            t = k("../models/.coffee.Reminders.js").RemindersModel;
            o = k("../models/.coffee.QueriesItems.js");
            h = k("../models/.coffee.NotesModel.js");
            l = k("../models/.coffee.UtilModels.js");
            x = k("../mini/.coffee.ContentTransformers.js").GContentTransformers;
            if (c() || window.location.host === "local.todoist.com") {
                p = function(E) {
                    var D;
                    if (window.WebViewJavascriptBridge) {
                        return E(window.WebViewJavascriptBridge)
                    } else {
                        D = function() {
                            return E(window.WebViewJavascriptBridge)
                        };
                        return document.addEventListener("WebViewJavascriptBridgeReady", D, false)
                    }
                };
                window.MacBridge = f = {
                    bridge: null,
                    handleRequest: function(aa, X) {
                        var T, S, ab, H, L, O, Q, E, U, W, J, K, N, R, V, F, D, Y, Z, M, G;
                        N = {
                            status: "ok"
                        };
                        R = function(af) {
                            var ag, ae, ad, ac;
                            ac = [];
                            for (ae = 0, ad = af.length; ae < ad; ae++) {
                                ag = af[ae];
                                if (ag.color === null) {
                                    ac.push(ag.color = 7)
                                } else {
                                    ac.push(void 0)
                                }
                            }
                            return ac
                        };
                        S = function() {
                            N.projects = y.getAll();
                            return R(N.projects)
                        };
                        T = function() {
                            N.labels = g.getAll(true);
                            return R(N.labels)
                        };
                        ab = function() {
                            var ad, ac, af, ae;
                            ad = n.date_min(w.parse("today").due_date);
                            ac = r.getAllOwn();
                            ae = o.getByDate(ad, ac);
                            af = o.getOverdue(ac);
                            N.items_today = f.handleDayResult(ae);
                            return N.items_overdue = f.handleDayResult(af)
                        };
                        H = function() {
                            return N.user = window.User
                        };
                        if (aa.action === "sync") {
                            a.sync(null, true)
                        } else {
                            if (aa.action === "logout") {
                                m.sendSignal("logout")
                            } else {
                                if (aa.action === "getData") {
                                    S();
                                    T();
                                    ab();
                                    H()
                                } else {
                                    if (aa.action === "getProjects") {
                                        S()
                                    } else {
                                        if (aa.action === "getLabels") {
                                            T()
                                        } else {
                                            if (aa.action === "getTodayItems") {
                                                ab()
                                            } else {
                                                if (aa.action === "getUser") {
                                                    H()
                                                } else {
                                                    if (aa.action === "parseDate") {
                                                        f.parseDate(aa, N)
                                                    } else {
                                                        if (aa.action === "formatDate") {
                                                            f.formatDate(aa, N)
                                                        } else {
                                                            if (aa.action === "getProjectMembersWithID") {
                                                                if (!s.isProjectShared(aa.id)) {
                                                                    L = []
                                                                } else {
                                                                    L = s.getAll(aa.id)
                                                                }
                                                                N.members = L;
                                                                N.length = L.length
                                                            } else {
                                                                if (aa.action === "completeItem") {
                                                                    W = r.getById(aa.itemId);
                                                                    if (W) {
                                                                        r.complete(W)
                                                                    }
                                                                } else {
                                                                    if (aa.action === "uncompleteItem") {
                                                                        W = r.getById(aa.itemId);
                                                                        if (W) {
                                                                            r.uncomplete(W.id, W.in_history)
                                                                        }
                                                                    } else {
                                                                        if (aa.action === "genericAction") {
                                                                            M = aa.actions;
                                                                            for (F = 0, Y = M.length; F < Y; F++) {
                                                                                W = M[F];
                                                                                if (W.action === "complete") {
                                                                                    V = r.getById(W.id);
                                                                                    if (V) {
                                                                                        r.complete(V)
                                                                                    }
                                                                                } else {
                                                                                    if (W.action === "postpone") {
                                                                                        V = r.getById(W.id);
                                                                                        if (V) {
                                                                                            i.postPoneModel(V)
                                                                                        }
                                                                                    } else {
                                                                                        if (W.action === "view_project") {
                                                                                            j.setCurrentById(W.project_id)
                                                                                        } else {
                                                                                            if (W.action === "view_task") {
                                                                                                v.loadAndShow(W.item_id, W.note_id, W.sync_id)
                                                                                            } else {
                                                                                                if (W.action === "view_business_users") {
                                                                                                    window.open("/business/users")
                                                                                                } else {
                                                                                                    if (W.action === "view_business_billing") {
                                                                                                        window.open("/business/accountAndBilling")
                                                                                                    } else {
                                                                                                        if (W.action === "note_add") {
                                                                                                            h.addNote(W.item_id, W.text)
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                            m.sendSignal("refresh_interface", null, true)
                                                                        } else {
                                                                            if (aa.action === "addItem") {
                                                                                J = y.get(aa.projectId);
                                                                                if (!J) {
                                                                                    J = y.getInbox()
                                                                                }
                                                                                E = "";
                                                                                U = null;
                                                                                O = "en";
                                                                                if (aa.dueDate) {
                                                                                    Q = d.parse(aa.dueDate);
                                                                                    if (!Q.due_date) {
                                                                                        N.status = "error";
                                                                                        N.reason = "INVALID_DATE";
                                                                                        return X(N)
                                                                                    }
                                                                                    E = Q.date_string;
                                                                                    O = Q.date_lang;
                                                                                    U = Q.due_date
                                                                                }
                                                                                if (!aa.content || aa.content.length === 0) {
                                                                                    N.status = "error";
                                                                                    N.reason = "CONTENT_IS_EMPTY";
                                                                                    return X(N)
                                                                                }
                                                                                W = r.add({
                                                                                    content: aa.content,
                                                                                    date_string: E,
                                                                                    date_lang: O,
                                                                                    due_date: U,
                                                                                    project_id: J.id,
                                                                                    priority: aa.priority || 1,
                                                                                    item_order: r.getMaxOrder(J.id) + 1,
                                                                                    responsible_uid: aa.responsible_uid || null
                                                                                });
                                                                                N.item = W;
                                                                                if (aa.reminders) {
                                                                                    G = aa.reminders;
                                                                                    for (D = 0, Z = G.length; D < Z; D++) {
                                                                                        K = G[D];
                                                                                        Q = d.parse(K);
                                                                                        if (Q.due_date) {
                                                                                            t.add({
                                                                                                item_id: W.id,
                                                                                                type: "absolute",
                                                                                                date_string: Q.date_string,
                                                                                                date_lang: Q.date_lang,
                                                                                                due_date_utc: d.jsonFormat(Q.due_date),
                                                                                                time: Q.due_date.getTime()
                                                                                            })
                                                                                        }
                                                                                    }
                                                                                }
                                                                                if (aa.note && aa.note.length > 0) {
                                                                                    h.addNote(W.id, aa.note)
                                                                                }
                                                                                m.sendSignal("refresh_interface", null, true)
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        } if ($isFunction(X)) {
                            return X(N)
                        }
                    },
                    parseDate: function(G, D) {
                        var E, F;
                        F = G.dueDate;
                        E = d.parse(F);
                        if (!E.due_date) {
                            D.status = "error";
                            D.reason = "INVALID_DATE"
                        } else {
                            D.date_string = E.date_string;
                            D.date_lang = E.date_lang;
                            D.date = E.due_date.getTime()
                        }
                        return D
                    },
                    formatDate: function(G, D) {
                        var E, F;
                        F = G.date_string.split("-");
                        E = new Date(parseInt(F[0]), parseInt(F[1]) - 1, parseInt(F[2]));
                        D.date_string = d.format(E);
                        return D
                    },
                    handleDayResult: function(M) {
                        var G, E, F, L, D, J, H, K;
                        F = new Date();
                        J = new x();
                        E = [];
                        for (H = 0, K = M.length; H < K; H++) {
                            D = M[H];
                            L = {};
                            $update(L, D);
                            J.setupByContent(D.content);
                            if (J.type === "outlook") {
                                L.content = "Outlook: " + J.title
                            } else {
                                if (J.type === "thunderbird") {
                                    L.content = "Thunderbird: " + J.title
                                } else {
                                    if (J.type) {
                                        L.content = "Gmail: " + J.title
                                    }
                                }
                            } if (w.is_recurring(L.date_string, {
                                lang: L.date_lang
                            })) {
                                L.is_recurring = true
                            }
                            if (n.is_overdue(F, L.due_date)) {
                                G = n.day_diff(new Date(), L.due_date);
                                L.diff_human = d.humanizeDayDiff(G, L.due_date)
                            }
                            E.push(L);
                            J.reset()
                        }
                        E.sort(l.daySort);
                        return E
                    }
                };
                p(function(L) {
                    var K, H, J, E, D, G, F;
                    L.init(function() {
                        return null
                    });
                    f.bridge = L;
                    u.connect();
                    z.connect();
                    L.registerHandler("nativeAppBridge", function(N, M) {
                        return f.handleRequest(N, M)
                    });
                    H = 5;
                    D = 6;
                    K = 7;
                    J = 8;
                    E = 9;
                    m.connect("countsUpdated", function(N) {
                        var M;
                        if (L) {
                            M = N.today + N.overdue;
                            return L.callHandler("jsAppBridge", {
                                action: H,
                                count: M
                            }, function() {
                                return null
                            })
                        }
                    });
                    m.connect("data_fully_loaded", function() {
                        if (L) {
                            return L.callHandler("jsAppBridge", {
                                action: K
                            }, function() {
                                return null
                            })
                        }
                    });
                    m.connect("mac_remind", function(M) {
                        var O, N;
                        if (L) {
                            N = {
                                action: D
                            };
                            N.title = M.content;
                            N.body = "";
                            N.type = "reminder";
                            O = [{
                                text: _("Complete"),
                                action: "complete",
                                id: M.id,
                                put_in_focus: false
                            }];
                            if (M.due_date) {
                                O.push({
                                    text: _("Postpone"),
                                    action: "postpone",
                                    id: M.id,
                                    put_in_focus: false
                                })
                            }
                            N.actions = O;
                            return L.callHandler("jsAppBridge", N, function() {
                                return null
                            })
                        }
                    });
                    m.connect("mac_notify", function(R, M, N) {
                        var Q, O;
                        if (L) {
                            O = {
                                action: D
                            };
                            O.title = R;
                            O.body = M || "";
                            O.type = "notification";
                            Q = [];
                            if (N) {
                                Q.push(N)
                            }
                            O.actions = Q;
                            return L.callHandler("jsAppBridge", O, function() {
                                return null
                            })
                        }
                    });
                    F = function(M) {
                        var N;
                        if (L) {
                            N = {
                                action: J
                            };
                            N.user = M;
                            return L.callHandler("jsAppBridge", N, function() {
                                return null
                            })
                        }
                    };
                    G = function() {
                        var M;
                        if (L) {
                            M = {
                                action: E
                            };
                            M.color = "#f6f6f6";
                            return L.callHandler("jsAppBridge", M, function() {
                                return null
                            })
                        }
                    };
                    m.connect("user_updated", function(M) {
                        F(M);
                        return G()
                    });
                    return m.connect("theme_changed", function() {
                        F(window.User);
                        return G()
                    })
                })
            }
        }, {
            "../components/local_notifications/.coffee.LocalNotifications.js": 50,
            "../components/local_reminders/.coffee.LocalReminders.js": 51,
            "../components/misc/Misc.js": 54,
            "../components/notes/Notes.js": 61,
            "../components/postpone/.coffee.Postpone.js": 66,
            "../components/project_list/.coffee.ProjectListUtils.js": 76,
            "../components/themes/.coffee.Themes.js": 101,
            "../mini/.coffee.ContentTransformers.js": 124,
            "../models/.coffee.Collaborators.js": 130,
            "../models/.coffee.ItemsModel.js": 137,
            "../models/.coffee.LabelsModel.js": 138,
            "../models/.coffee.NotesModel.js": 141,
            "../models/.coffee.ProjectsModel.js": 143,
            "../models/.coffee.QueriesItems.js": 145,
            "../models/.coffee.Reminders.js": 147,
            "../models/.coffee.SyncEngine.js": 152,
            "../models/.coffee.UtilModels.js": 157
        }
    ],
    106: [
        function(f, b, j) {
            var k = window.LibEdit;
            var a = window.Signals;
            var c = window.track;
            var g = f("../mini/.coffee.ContentTransformers.js").ContentTransformers;
            var h = {
                current_email_obj: null,
                addToTextArea: function(l) {
                    var m = h.current_email_obj;
                    if (!m) {
                        return false
                    }
                    g.type = "outlook";
                    g.email_id = m.id;
                    g.title = m.subject;
                    g.annotateWithIcon(l);
                    k.insertAtCursor(l, m.subject, true);
                    return false
                },
                setCurrentEmail: function(l) {
                    if (!l) {
                        h.current_email_obj = null
                    } else {
                        var m = h.current_email_obj = {};
                        $update(m, l)
                    }
                    a.sendSignal("PluginVersion.notifyExternalServices")
                },
                openEmail: function(m) {
                    try {
                        window.external.openmail(m);
                        return false
                    } catch (l) {}
                    return true
                },
                tracked: false,
                trackIfNeeded: function() {
                    if (!h.tracked) {
                        c("Outlook", "Open", "Plugin");
                        h.tracked = true
                    }
                }
            };

            function i(l) {
                if ($isString(l)) {
                    l = $eval(l)
                }
                h.setCurrentEmail(l);
                h.trackIfNeeded()
            }

            function d(l) {
                if ($isString(l)) {
                    l = $eval(l)
                }
                h.setCurrentEmail(l);
                a.sendSignal("PluginVersion.addToGenericController");
                c("Outlook", "Open", "addOutlookEmail")
            }
            window.OutlookIntegration = h;
            window.setOutlookEmail = i;
            window.addOutlookEmail = d;
            b.exports = h
        }, {
            "../mini/.coffee.ContentTransformers.js": 124
        }
    ],
    107: [
        function(c, a, g) {
            var h, q, b, j, l, i, f, m, d, n, p, o, k;
            b = c("../components/drag_and_drop/.coffee.DragAndDrop.js");
            h = c("../components/agenda/Agenda.js");
            q = c("../components/agenda/.coffee.AgendaUtils.js");
            d = c("../components/project_editor/ProjectEditor.js").ProjectEditor;
            n = c("../components/project_editor/.coffee.ProjectEditorManager.js");
            p = c("../components/project_list/.coffee.ProjectList.js");
            o = c("../components/project_list/.coffee.ProjectListUtils.js");
            k = c("../components/project_list/.coffee.ProjectArchive.js");
            i = c("../components/left_menu/.coffee.LeftMenuTabs.js");
            f = c("../components/notes/Notes.js");
            m = c("../components/notes/.coffee.NotesUtils.js");
            j = c("../components/filters_list/.coffee.FiltersList.js");
            l = c("../components/labels_list/.coffee.LabelsList.js");
            g.resolve = function() {
                o.Deps.ProjectList = p;
                m.Deps.Notes = f;
                q.Deps.Agenda = h;
                n.DepProjectEditor = d;
                k.DepProjectList = p;
                b.DepAgenda = h;
                b.DepProjectList = p;
                b.DepFiltersList = j;
                b.DepLabelsList = l;
                return b.DepLeftMenuTabs = i
            }
        }, {
            "../components/agenda/.coffee.AgendaUtils.js": 6,
            "../components/agenda/Agenda.js": 12,
            "../components/drag_and_drop/.coffee.DragAndDrop.js": 20,
            "../components/filters_list/.coffee.FiltersList.js": 26,
            "../components/labels_list/.coffee.LabelsList.js": 45,
            "../components/left_menu/.coffee.LeftMenuTabs.js": 47,
            "../components/notes/.coffee.NotesUtils.js": 59,
            "../components/notes/Notes.js": 61,
            "../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../components/project_editor/ProjectEditor.js": 72,
            "../components/project_list/.coffee.ProjectArchive.js": 73,
            "../components/project_list/.coffee.ProjectList.js": 75,
            "../components/project_list/.coffee.ProjectListUtils.js": 76
        }
    ],
    108: [
        function(c, d, a) {
            var g, f, b, h;
            h = window.Signals;
            g = window.AmiMenu;
            f = c("./HelperColorsPriorities.js");
            b = {};
            a.get = function() {
                return b.Menu
            };
            a.init = function(j) {
                var i;
                b.Menu = i = new g();
                i.addItems(i.colors = f.createColor(j.colors, function(k) {
                    h.sendSignal("color_selected", k);
                    i.hide(true, null);
                    return false
                }));
                $addClass(i.colors.view, "filter_list_colors");
                $AEV(document, "click", i.hide);
                return i
            }
        }, {
            "./HelperColorsPriorities.js": 114
        }
    ],
    109: [
        function(c, d, a) {
            var f, b, g;
            g = window.Signals;
            f = window.AmiMenu;
            b = {};
            a.get = function() {
                return b.Menu
            };
            a.init = function() {
                var h;
                b.Menu = h = new f();
                h.with_arrow = true;
                h.pos_y_offset = 9;
                h.arrow_y_offset = 11;
                h.arrow_x_offset = 4;
                h.addItems(f.createItem(SPAN(_("Indent Left"), SPAN({
                    c: "desc"
                }, "(CTRL+Left)")), function() {
                    g.sendSignal("menu_indent_left");
                    return false
                }, {
                    extra_class: "menu_indent"
                }), f.createItem(SPAN(_("Indent Right"), SPAN({
                    c: "desc"
                }, "(CTRL+Right)")), function() {
                    g.sendSignal("menu_indent_right");
                    return false
                }, {
                    extra_class: "menu_indent"
                }));
                $AEV(document, "click", h.hide);
                return h
            }
        }, {}
    ],
    110: [
        function(c, d, a) {
            var g, f, b, h;
            h = window.Signals;
            g = window.AmiMenu;
            f = c("./HelperColorsPriorities.js");
            b = {};
            a.get = function() {
                return b.Menu
            };
            a.init = function(j) {
                var i;
                b.Menu = i = new g();
                i.addItems(i.colors = f.createColor(j.colors, function(k) {
                    h.sendSignal("color_selected", k);
                    i.hide(true, null);
                    return false
                }));
                $addClass(i.colors.view, "label_list_colors");
                $AEV(document, "click", i.hide);
                return i
            }
        }, {
            "./HelperColorsPriorities.js": 114
        }
    ],
    111: [
        function(c, d, a) {
            var g, f, b, h;
            h = window.Signals;
            g = window.AmiMenu;
            f = c("./HelperColorsPriorities.js");
            b = {};
            a.get = function() {
                return b.Menu
            };
            a.init = function() {
                var i;
                b.Menu = i = new g();
                $addClass(i.menu_holder, "priority_menu");
                i.with_arrow = true;
                i.pos_y_offset = 7;
                i.arrow_y_offset = 15;
                i.arrow_x_offset = 4;
                i.addItems(f.createPriorities(function(j) {
                    h.sendSignal("menu_priority_changed", j);
                    return false
                }));
                $AEV(document, "click", i.hide);
                return i
            }
        }, {
            "./HelperColorsPriorities.js": 114
        }
    ],
    112: [
        function(d, f, b) {
            var h, g, c, a, i;
            i = window.Signals;
            h = window.AmiMenu;
            a = d("../components/project_list/.coffee.ProjectColors.js");
            g = d("./HelperColorsPriorities.js");
            c = {};
            b.get = function() {
                return c.Menu
            };
            b.init = function() {
                var j;
                c.Menu = j = new h();
                j.addItems(j.colors = g.createColor(a.get(), function(k) {
                    i.sendSignal("color_selected", k);
                    j.hide(true, null);
                    return false
                }));
                $addClass(j.colors.view, "project_list_colors");
                $AEV(document, "click", j.hide);
                return j
            }
        }, {
            "../components/project_list/.coffee.ProjectColors.js": 74,
            "./HelperColorsPriorities.js": 114
        }
    ],
    113: [
        function(b, c, a) {
            var g, f, h, d;
            h = window.Signals;
            g = window.AmiMenu;
            d = window.imageSprite;
            f = null;
            a.get = function() {
                return f
            };
            a.init = function(k) {
                var l, m, i, j;
                f = new g();
                f.pos_x_offset = -12;
                $addClass(f.menu_holder, "reminders_menu");
                m = SPAN(d("cmp_rem_absolute", 29, 29), _("Date and time"));
                j = SPAN(d("cmp_rem_relative", 29, 29), _("Before task"));
                i = SPAN(d("cmp_rem_location", 29, 29), _("Location"));
                f.addItems(g.createItem(m, function() {
                    return k.adder.onChangeInterface("absolute")
                }), l = g.createItem(j, function() {
                    return k.adder.onChangeInterface("relative")
                }), g.createItem(i, function() {
                    return k.adder.onChangeInterface("location")
                }));
                f.setRelativePossible = function(n) {
                    if (n) {
                        return $show(l.view.parentNode)
                    } else {
                        return $hide(l.view.parentNode)
                    }
                };
                $AEV(document, "click", f.hide);
                return f
            }
        }, {}
    ],
    114: [
        function(c, b, h) {
            var l = window.imageSprite;
            var j = window.AmiTooltip;
            var k = window.$static_path;

            function g(o) {
                var p = UL({
                    "class": "menu_buttons priorities"
                });
                $add(p, LI({
                    "class": "lbl"
                }, _("Priority")));
                var n = LI({
                    "class": "priorities"
                });
                $map([1, 2, 3, 4], function(t) {
                    var s = 5 - t;
                    var q = l("cmp_priority" + t, 22, 22);
                    var r = A({
                        c: "a_priority"
                    }, q);
                    r.priority = s;
                    j.showSimpleText(r, _("Priority %s").replace("%s", t));
                    $AEV(r, ["click", "touchstart"], function(u) {
                        $preventDefault(u);
                        o(s, r);
                        return false
                    });
                    m(r);
                    $add(n, r)
                });
                $add(p, n);
                return {
                    type: "item",
                    view: p,
                    extra_class: "no_hover"
                }
            }

            function i(o, p) {
                var n = $all("li", "colors", o.colors.view)[0];
                $map($AF(n.childNodes), function(r, q) {
                    if (q == p) {
                        $addClass(r, "selected_color")
                    } else {
                        $removeClass(r, "selected_color")
                    }
                })
            }

            function a(o, p) {
                var q = UL({
                    "class": "menu_buttons colors"
                });
                var n = LI({
                    "class": "colors"
                });
                $map(o, function(r, s) {
                    var t = A(IMG({
                        src: "https://d3ptyyxy2at9ui.cloudfront.net/76084e29cb2cf72b320e888edc583dfb.gif",
                        width: 18,
                        height: 20,
                        c: "object_color"
                    }));
                    t.style.backgroundColor = r;
                    t.onclick = $p(p, s, t, null);
                    m(t);
                    $add(n, t)
                });
                $add(q, n);
                return {
                    type: "item",
                    view: q,
                    extra_class: "no_hover"
                }
            }

            function f(n) {
                $addClass(n, "hovering")
            }

            function d(n) {
                $removeClass(n, "hovering")
            }

            function m(n) {
                $AEV(n, "mouseover", $p(f, n));
                $AEV(n, "mouseout", $p(d, n))
            }
            b.exports = {
                createPriorities: g,
                selectColor: i,
                createColor: a
            }
        }, {}
    ],
    115: [
        function(h, d, i) {
            var a = window.Signals;
            var g = window.MiniCal;
            var j = h("../components/smart_scheduler/.coffee.SmartScheduler.js");
            var k = h("../components/items_utils/.coffee.ItemCommonEdits.js");

            function l(n, m) {
                b(m, n.json.priority);
                j.annotate(m.scheduler_holder.view, m, function(o) {
                    k.updateItemsToDate([n], o);
                    m.hide(true, null)
                })
            }

            function c(m) {
                $AEV(document, "click", function(n) {
                    var o = $eventElm(n);
                    if (g.active && $parent(o, "div", "dp_cal")) {
                        return true
                    }
                    if (g.active && !$hasClass(o, "dp_icon")) {
                        g.remove();
                        return true
                    }
                    return m.hide(n)
                })
            }

            function b(o, m) {
                var n = $all("li", "priorities", o.menu_holder)[0];
                f();
                $map($AF(n.childNodes), function(p) {
                    if (p.priority == m) {
                        $addClass(p, "pri_selected")
                    }
                })
            }

            function f() {
                $map($all("a", "a_priority"), function(m) {
                    $removeClass(m, "pri_selected");
                    $removeClass(m, "hovering")
                })
            }
            a.connect("update_priority", f);
            d.exports = {
                annotateItemEditMenu: l,
                miniCalClose: c,
                selectPriority: b
            }
        }, {
            "../components/items_utils/.coffee.ItemCommonEdits.js": 34,
            "../components/smart_scheduler/.coffee.SmartScheduler.js": 95
        }
    ],
    116: [
        function(c, f, b) {
            var d = c("../models/.coffee.ItemsModel.js");
            var h = c("../components/people_assigner/.coffee.PeopleAssigner.js");

            function a(i, j) {
                return function() {
                    var k = i.current_form;
                    if (i.data_model == d) {
                        h.resetSelectedPerson()
                    }
                    if (k && $gc(k, null, "richtext_editor").proxyGetValue() !== "") {
                        if (i.current_mode == "edit") {
                            i.saveItem(k, function() {
                                return i.showAddItem(true, j)
                            })
                        } else {
                            i.addItem(k, function() {
                                return i.showAddItem(true, j)
                            })
                        }
                    } else {
                        return i.showAddItem(true, j)
                    }
                }
            }

            function g(k, i) {
                if (!k) {
                    return null
                }
                var j = k.current_holder;
                k.current_holder = null;
                if (i !== false) {
                    k.hide(null, true)
                }
                return j
            }
            f.exports = {
                menuSaveAndAdd: a,
                getAndResetCurrent: g
            }
        }, {
            "../components/people_assigner/.coffee.PeopleAssigner.js": 65,
            "../models/.coffee.ItemsModel.js": 137
        }
    ],
    117: [
        function(j, d, s) {
            var p = window.AmiMenu;
            var n = window.track;
            var k = window.Signals;
            var l = j("./HelpersMenuGeneral.js");
            var i = j("./HelperMenuAnnotations.js");
            var g = j("./HelperColorsPriorities.js");
            var f = j("../components/misc/Misc.js").isMacStore;
            var m = j("../components/items_utils/.coffee.ItemCommonEdits.js");
            var o = j("../components/items_utils/UniqueTaskLink.js");
            var r = j("../components/generic_manager/GenericManagerUtils.js");
            var h = j("../components/reminders/Reminders.js");
            var b = j("./../components/agenda/.coffee.AgendaUtils.js");
            var c = j("../components/item_selecter/ItemSelecter.js");
            var a;
            var q = {
                init: function(u) {
                    a = new p();
                    a.addItems(p.createItem(_("Edit task"), function() {
                        u.editCurrentItem(l.getAndResetCurrent(a))
                    }), p.createSeparator(), a.scheduler_holder = {
                        type: "item",
                        view: DIV(),
                        extra_class: "no_hover"
                    }, g.createPriorities($p(q.updatePriority, u)));
                    if (window.User.is_premium || !f()) {
                        a.addItems(p.createSeparator(), p.createItem(_("Reminders"), function() {
                            var w = l.getAndResetCurrent(a);
                            if (w) {
                                h.show(w);
                                n("Tasks", "MenuReminders", "AgendaView")
                            }
                            return false
                        }))
                    }
                    var v, t;
                    a.addItems(p.createSeparator(), v = p.createItem(_("Move to history"), $p(q.forceComplete, u)), p.createItem(_("Move to another project"), q.showMoveTo), p.createItem(_("Link to task"), function() {
                        var w = l.getAndResetCurrent(a);
                        if (w) {
                            o.show(w.json)
                        }
                        return false
                    }), p.createSeparator(), t = p.createItem(_("Delete task"), q.deleteCurrentItem));
                    a.adaptToNoteMenu = function(w) {
                        if (w) {
                            $hide(v.view.parentNode, t.view.parentNode)
                        } else {
                            $show(v.view.parentNode, t.view.parentNode)
                        }
                    };
                    a.hide_callbacks.push(function() {
                        $removeClass($all("li", "on_menu_show"), "on_menu_show")
                    });
                    a.hide_menu_icon = true;
                    i.miniCalClose(a);
                    k.connect("hide_editor_menu", function() {
                        a.hide()
                    });
                    return a
                },
                get: function() {
                    return a
                },
                toggle: function(u, w, v, t) {
                    if (u.disabled) {
                        return false
                    }
                    c.deselectAll();
                    a.adaptToNoteMenu($hasClass(u, "note_task"));
                    $removeClass($all("li", "on_menu_show"), "on_menu_show");
                    $addClass(u, "on_menu_show");
                    a.current_holder = u;
                    i.annotateItemEditMenu(u, a);
                    a.toggle(w, u, t);
                    return false
                },
                updatePriority: function(v, u) {
                    var w = l.getAndResetCurrent(a);
                    if (w) {
                        var t = w.json.priority;
                        m.updatePriority(w, u);
                        v.refresh(w.json, {
                            priority: t,
                            due_date: w.json.due_date
                        });
                        n("Tasks", "UpdatePriority", "MenuAgendaView")
                    }
                },
                forceComplete: function(t) {
                    var u = l.getAndResetCurrent(a);
                    if (u) {
                        t.completeItem(u, {
                            shift: true
                        }, true)
                    }
                    return false
                },
                deleteCurrentItem: function() {
                    var w = l.getAndResetCurrent(a);
                    if (w) {
                        var u = $child(w, "img", "arrow");
                        if (u) {
                            try {
                                b.fetchChildren(u)
                            } catch (v) {}
                        }
                        var t = r.getChildren(w, true);
                        m.deleteItems(t);
                        n("Tasks", "Delete", "AgendaView")
                    }
                },
                showMoveTo: function(t) {
                    var v = $eventElm(t);
                    var u = l.getAndResetCurrent(a, false);
                    if (u) {
                        c.showMoveItems(v, [u])
                    }
                    return false
                }
            };
            d.exports = q
        }, {
            "../components/generic_manager/GenericManagerUtils.js": 31,
            "../components/item_selecter/ItemSelecter.js": 32,
            "../components/items_utils/.coffee.ItemCommonEdits.js": 34,
            "../components/items_utils/UniqueTaskLink.js": 41,
            "../components/misc/Misc.js": 54,
            "../components/reminders/Reminders.js": 88,
            "./../components/agenda/.coffee.AgendaUtils.js": 6,
            "./HelperColorsPriorities.js": 114,
            "./HelperMenuAnnotations.js": 115,
            "./HelpersMenuGeneral.js": 116
        }
    ],
    118: [
        function(c, g, a) {
            var h = window.AmiMenu;
            var f = c("./HelpersMenuGeneral.js");
            var b;
            var d = {
                get: function() {
                    return b
                },
                init: function(i) {
                    b = new h();
                    b.hide_menu_icon = true;
                    b.addItems(h.createItem(_("Edit filter"), function() {
                        if (!window.User.is_premium) {
                            return i.premiumOnly()
                        }
                        return i.saveCurrentItem(i.editCurrentItem)
                    }), h.createItem(_("Delete filter"), function() {
                        if (!window.User.is_premium) {
                            return i.premiumOnly()
                        }
                        var j = f.getAndResetCurrent(b);
                        if (j) {
                            i.deleteCurrentItem(j)
                        }
                        return false
                    }));
                    $AEV(document, "click", b.hide);
                    return b
                }
            };
            g.exports = d
        }, {
            "./HelpersMenuGeneral.js": 116
        }
    ],
    119: [
        function(c, g, a) {
            var h = window.AmiMenu;
            var f = c("./HelpersMenuGeneral.js");
            var b;
            var d = {
                get: function() {
                    return b
                },
                init: function(i) {
                    b = new h();
                    b.hide_menu_icon = true;
                    b.addItems(h.createItem(_("Edit label"), $p(i.saveCurrentItem, i.editCurrentItem)), h.createItem(_("Delete label"), function() {
                        var j = f.getAndResetCurrent(b);
                        if (j) {
                            i.deleteCurrentItem(j)
                        }
                    }));
                    $AEV(document, "click", b.hide);
                    return b
                }
            };
            g.exports = d
        }, {
            "./HelpersMenuGeneral.js": 116
        }
    ],
    120: [
        function(g, d, k) {
            var b = window.AmiMenu;
            var f = window.track;
            var a = window.Signals;
            var l = g("./HelpersMenuGeneral.js");
            var h = g("./HelperMenuAnnotations.js");
            var q = g("./HelperColorsPriorities.js");
            var j = g("../components/reminders/Reminders.js");
            var i = g("../components/item_selecter/ItemSelecter.js");
            var n = g("../components/misc/Misc.js").isMacStore;
            var m = g("../components/items_utils/UniqueTaskLink.js");
            var o = g("../components/items_utils/.coffee.ItemCommonEdits.js");
            var p;
            var c = {
                init: function(r) {
                    p = new b();
                    p.addItems(b.createItem(_("Add task above"), function(s) {
                        return l.menuSaveAndAdd(r.getCurrentEditor(), true)(s)
                    }), b.createItem(_("Add task below"), function(s) {
                        l.menuSaveAndAdd(r.getCurrentEditor(), false)(s)
                    }), b.createItem(_("Edit task"), function() {
                        var s = r.getCurrentEditor();
                        return s.saveCurrentItem(s.editCurrentItem)
                    }), b.createSeparator(), p.scheduler_holder = {
                        type: "item",
                        view: DIV(),
                        extra_class: "no_hover"
                    }, q.createPriorities(function(s) {
                        var t = l.getAndResetCurrent(p);
                        if (t) {
                            o.updatePriority(t, s);
                            f("Tasks", "UpdatePriority", "MenuProjectView")
                        }
                    }));
                    if (window.User.is_premium || !n()) {
                        p.addItems(b.createSeparator(), b.createItem(_("Reminders"), function() {
                            var s = l.getAndResetCurrent(p);
                            j.show(s);
                            f("Tasks", "MenuReminders", "ProjectView");
                            return false
                        }))
                    }
                    p.addItems(b.createSeparator(), b.createItem(_("Move to history"), function() {
                        var s = r.getCurrentEditor();
                        var t = l.getAndResetCurrent(p);
                        if (s && t) {
                            s.completeItem(t, {
                                shift: true
                            }, true)
                        }
                    }), b.createItem(_("Move to another project"), function(s) {
                        return c.showMoveTo(s)
                    }), b.createItem(_("Link to task"), function() {
                        var s = l.getAndResetCurrent(p);
                        m.show(s.json);
                        return false
                    }), b.createSeparator(), b.createItem(_("Delete task"), function() {
                        var s = l.getAndResetCurrent(p);
                        r.getCurrentEditor().deleteCurrentItem(s);
                        return false
                    }));
                    p.hide_menu_icon = true;
                    h.miniCalClose(p);
                    p.hide_callbacks.push(function() {
                        $removeClass($all("li", "on_menu_show"), "on_menu_show")
                    });
                    a.connect("hide_editor_menu", function() {
                        p.hide()
                    });
                    return p
                },
                get: function() {
                    return p
                },
                toggle: function(s, u, t, r) {
                    if (s.disabled) {
                        return false
                    }
                    i.deselectAll();
                    $removeClass($all("li", "on_menu_show"), "on_menu_show");
                    $addClass(s, "on_menu_show");
                    p.current_holder = s;
                    h.annotateItemEditMenu(s, p);
                    p.toggle(u, s, r);
                    return false
                },
                showMoveTo: function(r) {
                    var t = $eventElm(r);
                    var s = l.getAndResetCurrent(p, false);
                    if (s) {
                        i.showMoveItems(t, [s])
                    }
                    return false
                }
            };
            d.exports = c
        }, {
            "../components/item_selecter/ItemSelecter.js": 32,
            "../components/items_utils/.coffee.ItemCommonEdits.js": 34,
            "../components/items_utils/UniqueTaskLink.js": 41,
            "../components/misc/Misc.js": 54,
            "../components/reminders/Reminders.js": 88,
            "./HelperColorsPriorities.js": 114,
            "./HelperMenuAnnotations.js": 115,
            "./HelpersMenuGeneral.js": 116
        }
    ],
    121: [
        function(g, d, h) {
            var a = window.Signals;
            var b = window.AmiMenu;
            var c = g("../components/items_utils/ItemsSortBy.js");
            var f = g("../components/project_editor/.coffee.ProjectExtraActions.js");
            var j = g("../components/templates/.coffee.Templates.js");
            var i;
            h.get = function() {
                return i
            };
            h.init = function(k) {
                i = new b();
                i.addItems(b.createItem(_("Sort by date"), c.sortByDate), b.createItem(_("Sort by priority"), c.sortByPriority), b.createItem(_("Sort by name"), c.sortByName), b.createItem(_("Sort by responsible"), c.sortByResponsible), b.createSeparator(), b.createItem(_("Import from template"), function() {
                    j.showImport(k.getCurrentProjectId());
                    i.hide(null, true);
                    return false
                }), b.createItem(_("Export as a template") + " (CSV)", function() {
                    j.showExportTemplate(k.getCurrentProjectId());
                    i.hide(null, true);
                    return false
                }), b.createSeparator(), b.createItem(_("Email tasks to this project"), function() {
                    f.showEmails(k.getCurrentProjectId());
                    return false
                }), b.createSeparator(), b.createItem(_("Delete completed tasks"), function() {
                    i.hide(null, true);
                    return k.current_editor.clearCompletedTasks()
                }));
                $AEV(document, "click", i.hide);
                a.connect("sort_by_done", function() {
                    i.hide(null, true)
                });
                return i
            }
        }, {
            "../components/items_utils/ItemsSortBy.js": 40,
            "../components/project_editor/.coffee.ProjectExtraActions.js": 71,
            "../components/templates/.coffee.Templates.js": 100
        }
    ],
    122: [
        function(g, d, h) {
            var b = window.AmiMenu;
            var j = g("../components/misc/Misc.js").isMacStore;
            var i = g("./HelpersMenuGeneral.js");
            var a = g("../components/project_list/.coffee.ProjectArchive.js");
            var f = g("../components/project_editor/.coffee.ProjectExtraActions.js");
            var c = g("../components/sharing/.coffee.SharingManager.js");
            var k;
            h.get = function() {
                return k
            };
            h.init = function(m) {
                var l;
                k = new b();
                k.addItems(b.createItem(_("Add project above"), i.menuSaveAndAdd(m, true), {
                    extra_class: "project_archive_action project_inbox_action"
                }), b.createItem(_("Add project below"), i.menuSaveAndAdd(m, false), {
                    extra_class: "project_archive_action"
                }), b.createSeparator("project_archive_action"), b.createItem(_("Edit project"), $p(m.saveCurrentItem, m.editCurrentItem), {
                    extra_class: "project_archive_action project_inbox_action"
                }), b.createSeparator("project_archive_action project_inbox_action"), b.createItem(_("Share Project"), function() {
                    var n = i.getAndResetCurrent(k);
                    if (n) {
                        c.show(n.json.id)
                    }
                    return false
                }, {
                    extra_class: "project_archive_action"
                }), l = b.createItem(_("Email tasks to this project"), function() {
                    var n = i.getAndResetCurrent(k);
                    return f.showEmails(n.json.id)
                }, {
                    extra_class: "project_archive_action"
                }), b.createSeparator("project_archive_action project_inbox_action"), b.createItem(SPAN({
                    id: "menu_archive_text"
                }, _("Archive project")), function() {
                    var o = i.getAndResetCurrent(k);
                    if (o) {
                        var n = o.json;
                        if (n.is_archived) {
                            a.unarchive(o)
                        } else {
                            a.archive(o)
                        }
                    }
                    return false
                }, {
                    extra_class: "project_inbox_action"
                }), b.createItem(SPAN({
                    id: "menu_delete_text"
                }, _("Delete project")), function() {
                    var n = i.getAndResetCurrent(k);
                    return m.deleteCurrentItem(n)
                }, {
                    extra_class: "project_inbox_action"
                }));
                if (j() && !window.User.is_premium) {
                    $hide(l.view.parentNode)
                }
                k.hide_menu_icon = true;
                $AEV(document, "click", k.hide);
                return k
            }
        }, {
            "../components/misc/Misc.js": 54,
            "../components/project_editor/.coffee.ProjectExtraActions.js": 71,
            "../components/project_list/.coffee.ProjectArchive.js": 73,
            "../components/sharing/.coffee.SharingManager.js": 93,
            "./HelpersMenuGeneral.js": 116
        }
    ],
    123: [
        function(k, f, u) {
            var m = window.Signals;
            var l = window.imageSprite;
            var r = window.AmiTooltip;
            var q = window.AmiMenu;
            var j = window.GB_show;
            var p = window.track;
            var i = window.DateUtils;
            var g = k("../components/misc/Misc.js").isMacStore;
            var h = k("../components/misc/Misc.js").isMacApp;
            var b = k("../components/location_manager/LocationManager.js");
            var c = k("../components/opener/WindowOpener.js");
            var o = k("../mini/.coffee.Popout.js");
            var d = k("../models/.coffee.SyncEngine.js");
            var t = k("../models/.coffee.VersionUpdater.js");
            var a;
            u.get = function() {
                return a
            };
            u.open = function(w) {
                a.toggle($gc(w, "img"));
                if (window.FLUID_MINI || window.IS_MINI) {
                    $show($all("tr", "menu_mini_only"))
                } else {
                    $hide($all("tr", "menu_mini_only"))
                } if (window.User.is_biz_admin) {
                    $show($all("tr", "menu_biz_admin"))
                } else {
                    $hide($all("tr", "menu_biz_admin"))
                } if (!h()) {
                    if (window.User.business_account_id) {
                        $hide($all("tr", "menu_no_biz_user"))
                    } else {
                        $show($all("tr", "menu_no_biz_user"))
                    }
                }
                var v = $("last_synced");
                $replace(v, SPAN(BR(), _("Last synced ") + i.prettyDate(d.last_synced.getTime())));
                p("Settings", "ShowMenu");
                return false
            };
            u.init = function() {
                a = new q();
                a.with_arrow = true;
                a.arrow_fixed = true;
                a.pos_y_offset = 8;
                a.arrow_y_offset = 11;
                a.arrow_x_offset = 5;
                var v, x;
                var y;
                var w;
                a.addItems(q.createItem(_("Sync"), function() {
                    p("Menu", "MenuUser", "Sync");
                    d.sync(null, true, true);
                    a.hide(null, true);
                    return false
                }), q.createItem(_("Open Todoist.com"), function() {
                    p("Menu", "MenuUser", "OpenTodoist");
                    window.open("https://todoist.com/");
                    return false
                }, {
                    extra_class: "menu_mini_only"
                }), w = q.createItem(_("Popout in a window"), function() {
                    p("Menu", "MenuUser", "Popout");
                    o.launch();
                    a.hide(null, true);
                    return false
                }), q.createSeparator("menu_mini_only"), q.createItem(_("Todoist Business Admin"), function() {
                    p("Menu", "MenuUser", "TodoistBusinessAdmin");
                    window.open("/business/users");
                    return false
                }, {
                    extra_class: "menu_biz_admin"
                }), q.createSeparator("menu_biz_admin"), q.createItem(_("Todoist Settings"), function() {
                    p("Menu", "MenuUser", "TodoistSettings");
                    p("Settings", "ShowWindow");
                    return j(_("Todoist Settings"), "/Users/viewPrefs", 550, 750)
                }), q.createItem(_("Print current page"), function() {
                    p("Menu", "MenuUser", "Print");
                    s();
                    return false
                }), q.createSeparator(), !g() && q.createItem(_("Todoist Premium"), function() {
                    p("Menu", "MenuUser", "TodoistPremium");
                    window.open("/premium");
                    return false
                }, {
                    extra_class: "menu_no_biz_user"
                }), !h() && q.createItem(_("Todoist for Business"), function() {
                    p("Menu", "MenuUser", "TodoistBusinessAdmin");
                    window.open("/business");
                    return false
                }, {
                    extra_class: "menu_no_biz_user"
                }), q.createSeparator("menu_no_biz_user"), q.createItem(_("Todoist Help"), function() {
                    p("Menu", "MenuUser", "TodoistHelp");
                    window.open("/Help");
                    return false
                }), q.createItem(_("Todoist Blog"), function() {
                    p("Menu", "MenuUser", "TodoistHelp");
                    window.open("https://blog.todoist.com/");
                    return false
                }), q.createItem(_("Keyboard shortcuts"), function() {
                    p("Menu", "MenuUser", "TodoistKeyboard");
                    c.showKeyboardShortcuts();
                    return false
                }), q.createSeparator(), q.createItem(_("Logout"), function() {
                    p("Menu", "MenuUser", "TodoistLogout");
                    m.sendSignal("logout")
                }), q.createSeparator(), y = {
                    type: "item",
                    view: n(),
                    extra_class: "no_hover"
                }, q.createSeparator(), v = q.createItem(SPAN(_("New version available"), x = SPAN()), t.update, {
                    extra_class: "menu_new_version"
                }), y = {
                    type: "item",
                    view: SPAN(A({
                        href: "/Changelog",
                        target: "_blank"
                    }, _("Version ") + " " + $queryArgument("v")), SPAN({
                        id: "last_synced"
                    })),
                    extra_class: "no_hover version"
                });
                if (!o.isSupported()) {
                    $hide(w.view.parentNode)
                }
                $AEV(document, "click", a.hide);
                $hide($all("tr", "menu_new_version"));
                m.connect("new_version_available", function(z) {
                    $show($all("tr", "menu_new_version"));
                    $setHTML(x, " (" + z + ")")
                })
            };

            function n() {
                var v = UL({
                    "class": "menu_buttons priorities"
                });
                $add(v, LI({
                    "class": "lbl"
                }, _("Apps")));
                var w = LI({
                    "class": "priorities"
                });
                var x = function(C, F, D) {
                    var z = l("cmp_" + C, 22, 22);
                    var y = {
                        c: "a_priority app_icon fixed_pos",
                        href: D,
                        target: "_blank"
                    };
                    var E = A(y, z);
                    $AEV(E, "click", function() {
                        p("Menu", "MenuUser", "TodoistAppLink");
                        return true
                    });
                    r.showSimpleText(E, F, null, null, 5);
                    $add(w, E)
                };
                if (!h()) {
                    x("pandroid", _("Android"), "/android")
                }
                x("pios", _("iPhone"), "/iphone");
                if (!h()) {
                    if ($isMac()) {
                        x("pmac", _("Mac"), "/mac")
                    } else {
                        x("pwindows", _("Windows"), "/windows")
                    }
                }
                x("menu_on", _("More") + "...", "/Help/Apps");
                $add(v, w);
                return v
            }

            function s() {
                var v = window.location.href;
                if (v.indexOf("?") != -1) {
                    v = v.replace("?", "?print_mode=1&")
                } else {
                    if (v.indexOf("#") != -1) {
                        v = v.replace("#", "?print_mode=1#")
                    }
                } if (v.indexOf("#") != -1) {
                    v = v.split("#")[0] + "#" + b.getCurrentLocation()
                }
                v = v.replace("mini=1", "minip=0");
                window.open(v);
                return false
            }
        }, {
            "../components/location_manager/LocationManager.js": 52,
            "../components/misc/Misc.js": 54,
            "../components/opener/WindowOpener.js": 64,
            "../mini/.coffee.Popout.js": 127,
            "../models/.coffee.SyncEngine.js": 152,
            "../models/.coffee.VersionUpdater.js": 158
        }
    ],
    124: [
        function(c, d, a) {
            var g, f, b = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            f = window.imageSprite;
            g = (function() {
                function h() {
                    this.reset = b(this.reset, this);
                    this.onContollerHide = b(this.onContollerHide, this);
                    this.onContentSave = b(this.onContentSave, this)
                }
                h.prototype.type = null;
                h.prototype.email_id = "";
                h.prototype.title = "";
                h.prototype.onContentSave = function(j) {
                    var i;
                    j = $strip(j);
                    if (j.indexOf("@") !== -1) {
                        j = " " + j + " "
                    }
                    if (this.type === "gmail_new") {
                        j = j.replace(/\(/g, "[");
                        j = j.replace(/\)/g, "]");
                        return "" + this.email_id + " (" + j + ")"
                    }
                    if (this.type === "gmail") {
                        return "[[gmail=" + this.email_id + ", " + j + "]]"
                    }
                    if (this.type === "thunderbird") {
                        i = "[[thunderbird\n " + j.replace(/\n/g, "") + "\n" + this.email_id.replace(/\n/g, "") + " \n]]";
                        return i
                    }
                    if (this.type === "outlook") {
                        return "[[outlook=" + this.email_id + ", " + j + "]]"
                    }
                    return j
                };
                h.prototype.onContentShow = function() {
                    return this.title
                };
                h.prototype.onContollerHide = function() {
                    this.type = null;
                    this.email_id = "";
                    return this.title = ""
                };
                h.prototype.reset = function() {
                    return this.onContollerHide()
                };
                h.prototype.setupByContent = function(j) {
                    var i;
                    if (j.indexOf("mail.google.com/mail/") !== -1) {
                        i = j.match(/(https?:\/\/mail.google.com\/mail\/[^\s]+) \(([^\)]+)\)/);
                        if (i) {
                            this.email_id = i[1];
                            this.title = i[2];
                            this.type = "gmail_new"
                        }
                    }
                    if (j.indexOf("[[gmail=") !== -1) {
                        i = j.match(/\[\[gmail=(.+?),\s*(.+?)\]\]/);
                        if (i) {
                            this.email_id = i[1];
                            this.title = i[2];
                            this.type = "gmail"
                        }
                    }
                    if (j.indexOf("[[thunderbird") !== -1) {
                        i = j.match(/\[\[thunderbird\n?([^\n]+)\n([^\n]+)\n\]\]/);
                        if (i) {
                            this.email_id = i[2];
                            this.title = i[1];
                            this.type = "thunderbird"
                        }
                    }
                    if (j.indexOf("[[outlook=") !== -1) {
                        i = j.match(/\[\[outlook=(.+?),\s*(.+?)\]\]/);
                        if (i) {
                            this.email_id = i[1];
                            this.title = i[2];
                            return this.type = "outlook"
                        }
                    }
                };
                h.prototype.annotateWithIcon = function(i) {
                    var j;
                    j = i.parentNode;
                    if (j) {
                        $addClass(j, "has_content_icon");
                        return $ATT(j, f("cmp_email", 16, 16))
                    }
                };
                return h
            })();
            d.exports = {
                GContentTransformers: g,
                ContentTransformers: new g()
            }
        }, {}
    ],
    125: [
        function(c, d, a) {
            var g, f, b = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            f = window.Signals;
            g = (function() {
                function h() {
                    this._recalculate = b(this._recalculate, this);
                    this.recalculate = b(this.recalculate, this)
                }
                h.prototype.init = function() {
                    $AEV(window, "resize", (function(i) {
                        return function() {
                            var j;
                            i.recalculate();
                            if (i.timeout_refresh) {
                                clearTimeout(i.timeout_refresh)
                            }
                            j = function() {
                                return f.sendSignal("refresh_interface")
                            };
                            return i.timeout_refresh = setTimeout(j, 15)
                        }
                    })(this));
                    f.connect("project_archived", this.recalculate);
                    return f.connect("project_unarchived", this.recalculate)
                };
                h.prototype.recalculate = function() {
                    if (this.timeout) {
                        clearTimeout(this.timeout)
                    }
                    return this.timeout = setTimeout(this._recalculate, 10)
                };
                h.prototype._recalculate = function() {
                    var n, k, p, q, t, m, u, r, s, l, o, j, i;
                    j = $winSize();
                    n = $body();
                    k = n.offsetHeight;
                    s = $("left_menu").offsetHeight;
                    o = j.h;
                    r = Math.max(s, o);
                    p = $("content");
                    i = j.w;
                    if (i < 750 || window.PRINT_MODE) {
                        window.FLUID_MINI = true;
                        $addClass(n, "mini_version");
                        l = i;
                        $setWidth($("editor"), l - 65);
                        u = 0 + "px";
                        $("all_holder").style.marginLeft = u;
                        $("top_bar_inner").style.marginLeft = u
                    } else {
                        window.FLUID_MINI = false;
                        $removeClass(n, "mini_version");
                        $removeClass(n, "left_menu_show");
                        q = $("content").offsetWidth;
                        $setWidth($("editor"), q - 85);
                        if (i > 980) {
                            t = i - 980;
                            u = t / 2 + "px"
                        } else {
                            u = 0 + "px"
                        }
                        $("all_holder").style.marginLeft = u;
                        $("top_bar_inner").style.marginLeft = u
                    } if (this.isMacAppV6()) {
                        n = $body();
                        $removeClass(n, "content_rounded");
                        $removeClass(n, "content_rounded_big");
                        if (!window.FLUID_MINI) {
                            if (i > 980) {
                                $addClass(n, "content_rounded_big")
                            } else {
                                $addClass(n, "content_rounded")
                            }
                        }
                    }
                    if (window.FLUID_MINI) {
                        p.style.minHeight = "0px"
                    } else {
                        p.style.minHeight = r + "px"
                    } if (i < 450) {
                        $addClass(n, "super_mini")
                    } else {
                        $removeClass(n, "super_mini")
                    }
                    m = $("left_menu");
                    if (window.FLUID_MINI) {
                        return setTimeout(function() {
                            return $addClass(m, "left_menu_animated")
                        }, 20)
                    } else {
                        return $removeClass(m, "left_menu_animated")
                    }
                };
                h.prototype.isMacAppV6 = function() {
                    return navigator.userAgent.indexOf("TDMacApp") !== -1
                };
                return h
            })();
            d.exports = new g()
        }, {}
    ],
    126: [
        function(d, f, b) {
            var a, c, g;
            a = d("./PluginVersion.js");
            c = d("./.coffee.RatingsTooltip.js");
            window.CUR_HREF = {};
            g = function(j) {
                var i, h;
                if (j.data.indexOf("--/--") !== -1) {
                    h = j.data.split("--/--");
                    if (window.CUR_HREF.href === h[0]) {
                        return
                    }
                    window.CUR_HREF = {
                        href: h[0],
                        title: h[1]
                    };
                    a.notifyExternalServices()
                }
                if (j.data.indexOf("GCHROME_MESSAGE") !== -1) {
                    i = JSON.parse(j.data);
                    if (window.CUR_HREF.href === i.href) {
                        return
                    }
                    window.CUR_HREF = i;
                    a.notifyExternalServices()
                }
                if (j.data.indexOf("USER_TOOLTIP") !== -1) {
                    i = JSON.parse(j.data);
                    return c.show(i)
                }
            };
            b.init = function() {
                if (window.attachEvent) {
                    return window.attachEvent("onmessage", g)
                } else {
                    return window.addEventListener("message", g, false)
                }
            }
        }, {
            "./.coffee.RatingsTooltip.js": 128,
            "./PluginVersion.js": 129
        }
    ],
    127: [
        function(c, d, b) {
            var a;
            a = {
                isSupported: function() {
                    var f;
                    f = window.location.host;
                    return f === "chrome.todoist.com" || f === "firefox.todoist.com"
                },
                launch: function() {
                    a._popout("" + window.location, "Todoist", 500, 560);
                    return false
                },
                _popout: function(i, m, f, j) {
                    var l, g, k;
                    l = (screen.width / 2) - (f / 2);
                    k = (screen.height / 2) - (j / 2);
                    g = window.open("/app?mini=2", m, "toolbar=no, scrollbars=yes, width=" + f + ", height=" + j + ", top=" + k + ", left=" + l);
                    return g
                }
            };
            window.Popout = d.exports = a
        }, {}
    ],
    128: [
        function(f, c, g) {
            var l, i, d, a, j, h, m, b, k = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            i = window.Alerts;
            d = window.AmiButton;
            j = window.GB_showHTML;
            a = window.GB_hide;
            m = window.imageSprite;
            l = window.$static_path;
            b = f("../components/misc/Util.js").postMessageToWindow;
            h = (function() {
                function n() {
                    this.show = k(this.show, this)
                }
                n.prototype.tooltip_shown = false;
                n.prototype.show = function(t) {
                    var r, o, q, u, s, p;
                    if (this.tooltip_shown) {
                        return
                    }
                    if ($queryArgument("print_mode")) {
                        return
                    }
                    u = t.message || "rate_chrome_plugin";
                    if (u === "rate_chrome_plugin") {
                        q = _("If you enjoy using Todoist for Chrome, would you mind taking a moment and rate us?<br><br>" + _("It won't take more than a minute. Thanks for your support!"))
                    }
                    o = i.renderHolder(q);
                    $add(o.icon, m("cmp_logo_dark", 35, 35));
                    $add(o.buttons, BR(), r = d.createButton(_("Rate it now"), null, "red"));
                    $AEV(r, "click", (function(v) {
                        return function() {
                            window.open(t.action_url);
                            return v.disableTooltip()
                        }
                    })(this));
                    $add(o.buttons, BR(), BR());
                    $add(o.buttons, p = A({
                        href: "#",
                        c: "cancel",
                        s: "margin-right: 10px;"
                    }, _("Remind me later")), s = A({
                        href: "#",
                        c: "cancel"
                    }, _("No, Thanks")));
                    $AEV(p, "click", this.reset);
                    $AEV(s, "click", this.disableTooltip);
                    $AEV([r, p, s], "click", a);
                    j("", o.frame, 180, 330, {
                        callback_fn: function() {
                            return null
                        }
                    });
                    return this.tooltip_shown = true
                };
                n.prototype.disableTooltip = function() {
                    return b(top, "DISABLE_TOOLTIP:chrome_rating")
                };
                n.prototype.reset = function() {
                    return b(top, "RESET_TOOLTIP:chrome_rating")
                };
                return n
            })();
            c.exports = new h()
        }, {
            "../components/misc/Util.js": 55
        }
    ],
    129: [
        function(f, d, i) {
            var p = window.LibEdit;
            var a = window.Signals;
            var h = f("../external_services/OutlookIntegration.js");
            var c = f("../components/misc/Util.js").postMessageToWindow;
            var k = f("../components/quick_add/.coffee.QuickAdd.js");
            var o = f("../components/project_editor/.coffee.ProjectEditorManager.js");
            var m = f("../components/richtext_editor/.coffee.NatrualLanguageParsing.js");
            var g = f("../mini/.coffee.ContentTransformers.js").ContentTransformers;
            window.CURRENT_EXERNAL_SERVICE = null;

            function n(q) {
                window.CUR_HREF = q;
                l.notifyExternalServices()
            }

            function b() {
                if (window.CUR_HREF) {
                    return window.CUR_HREF.href
                }
                return null
            }
            var j = {
                isGmailDomain: function(q) {
                    return q.indexOf("mail.google.com") != -1 || q.indexOf("googlemail.com") != -1
                },
                isCurHrefGmail: function() {
                    var q = j;
                    var r = b();
                    if (!r) {
                        return false
                    }
                    if (q.isGmailDomain(r)) {
                        var s = q.getGmailRealId(r);
                        if (s) {
                            return true
                        }
                    }
                    return false
                },
                getGmailRealId: function(t) {
                    if (!j.isGmailDomain(t)) {
                        return null
                    }
                    try {
                        var r = t.split("/");
                        var q = r[r.length - 1];
                        if (q.indexOf(".") == -1 && q.indexOf("#") == -1 && q.indexOf("/") == -1 && q.length == 16) {
                            return q
                        }
                    } catch (s) {}
                    return null
                },
                getThreadId: function(q) {
                    var r = q.match(/th=(.{16})/);
                    if (r) {
                        return r[1]
                    }
                    var r = q.match(/\/([^\/\.]{16})/);
                    if (r) {
                        return r[1]
                    }
                    return null
                }
            };
            window.linkRedirecter = function(u) {
                var w = u.getAttribute("thunder_id");
                if (w) {
                    var r = JSON.stringify({
                        type: "switchEmail",
                        id: w
                    });
                    return top.postMessage(r, "*")
                }
                if (window.CUR_HREF && window.CUR_HREF.href) {
                    var t = j.getThreadId(u.href);
                    var s = window.CUR_HREF.href.match(/^(.+)#/);
                    if (j.isGmailDomain(u.href) && t && s) {
                        if (window.CUR_HREF.type == "T_FIREFOX_MESSAGE") {
                            var q = s[1] + "#inbox/" + t;
                            var r = JSON.stringify({
                                type: "switchLocation",
                                url: q
                            });
                            try {
                                top.postMessage(r, "*")
                            } catch (v) {}
                            return false
                        }
                        if (top.postMessage) {
                            c(top, "SWITCH_URL:" + u.href);
                            return false
                        }
                        return true
                    }
                }
                return true
            };
            var l = {
                init: function() {
                    try {
                        window.addEventListener("message", function(r) {
                            var s = r.data;
                            if (s && s.indexOf("THUNDERBIRD_MESSAGE") != -1) {
                                n(JSON.parse(s))
                            }
                            if (s && s.indexOf("T_FIREFOX_MESSAGE") != -1) {
                                n(JSON.parse(s))
                            }
                            if (s && s.indexOf("GMAIL_MESSAGE_ADD") != -1) {
                                window.CUR_HREF = JSON.parse(s);
                                setTimeout(function() {
                                    l.addToGenericController(true)
                                }, 100)
                            }
                        }, false)
                    } catch (q) {}
                    a.connect("PluginVersion.notifyExternalServices", this.notifyExternalServices);
                    a.connect("PluginVersion.addToGenericController", $p(this.addToGenericController, true))
                },
                addToGenericController: function(s) {
                    if (s === undefined) {
                        s = false
                    }
                    var q = o.current_editor;
                    if (q && l.force_quick_add === false) {
                        q.addNewItem(false, function() {
                            var t = $gc(o.current_form, null, "richtext_editor");
                            l.addToTextArea(t)
                        })
                    } else {
                        if (!k.shown) {
                            k.support_annotation = false;
                            k.toggle();
                            var r = $child($("quick_add_task"), null, "richtext_editor");
                            if (h.current_email_obj) {
                                h.addToTextArea(r)
                            } else {
                                l.addToTextArea(r)
                            }
                        }
                    }
                    return false
                },
                addToTextArea: function(q) {
                    m.truncate_links = true;
                    if (window.CUR_HREF && window.CUR_HREF.unique_id) {
                        var v = window.CUR_HREF;
                        if (v.unique_id.indexOf("TODOIST_WARN_USER_MESSAGE_NOT_SELECTED") != -1) {
                            alert(_("Please select an email first before adding it as a task."));
                            return false
                        }
                        g.type = "thunderbird";
                        g.email_id = v.unique_id;
                        g.title = v.subject;
                        g.annotateWithIcon(q);
                        p.insertAtCursor(q, v.subject.replace(/\n/g, ""), true);
                        if (q.onchanged) {
                            q.onchanged()
                        }
                        return false
                    }
                    if (!b()) {
                        return false
                    }
                    var w = j.getGmailRealId(b());
                    if (w) {
                        var u = window.CUR_HREF.title;
                        u = u.replace(/[-\s]+[^\s]+@[^\s]+ - [^-]+$/, "");
                        try {
                            u = l._stripTitle(u)
                        } catch (s) {}
                        g.type = "gmail_new";
                        g.email_id = window.CUR_HREF.href;
                        g.title = u;
                        g.annotateWithIcon(q);
                        p.insertAtCursor(q, u, true)
                    } else {
                        var t = l.getTitleAndUrl();
                        var u = t[0];
                        var r = t[1];
                        u = r + " (" + u + ")";
                        p.insertAtCursor(q, u, true)
                    }
                    return false
                },
                getTitleAndUrl: function() {
                    var r = l._stripTitle(window.CUR_HREF.title);
                    if (r.indexOf("(") != -1) {
                        r = r.replace(/\(/g, "[");
                        r = r.replace(/\)/g, "]")
                    }
                    var q = b();
                    if (q.indexOf("teamcom.io") != -1) {
                        r = r.replace(/^\[\d+\]\s+/, "");
                        r = r.replace(" | TeamCom", "")
                    }
                    return [r, q]
                },
                notifyExternalServices: function() {
                    var r = false;
                    var t = true;
                    var u = _("Add email as task");
                    var s;
                    if (h.current_email_obj) {
                        r = true;
                        s = h.addToTextArea
                    } else {
                        if (window.CUR_HREF && window.CUR_HREF.unique_id) {
                            r = true;
                            s = l.addToTextArea
                        } else {
                            if (b()) {
                                r = true;
                                if (!j.isCurHrefGmail()) {
                                    u = _("Add website as task");
                                    t = false
                                }
                                s = l.addToTextArea
                            }
                        }
                    }
                    setTimeout(l.notifyExternalServices, 500);
                    if (r) {
                        var q = window.CURRENT_EXERNAL_SERVICE;
                        if (q && q.annotate_fn == s && q.annotate_text == u) {
                            return
                        }
                        window.CURRENT_EXERNAL_SERVICE = {
                            annotate_fn: s,
                            annotate_text: u,
                            is_email: t
                        }
                    } else {
                        window.CURRENT_EXERNAL_SERVICE = null
                    }
                    a.sendSignal("external_service_annotation", window.CURRENT_EXERNAL_SERVICE)
                },
                _stripTitle: function(q) {
                    q = q.replace(/\s\s+/g, " ").replace(/"/g, "");
                    q = q.replace(/\[/g, "(").replace(/\]/g, ")");
                    return $strip(q)
                }
            };
            window.PluginVersion = l;
            d.exports = l
        }, {
            "../components/misc/Util.js": 55,
            "../components/project_editor/.coffee.ProjectEditorManager.js": 69,
            "../components/quick_add/.coffee.QuickAdd.js": 79,
            "../components/richtext_editor/.coffee.NatrualLanguageParsing.js": 91,
            "../external_services/OutlookIntegration.js": 106,
            "../mini/.coffee.ContentTransformers.js": 124
        }
    ],
    130: [
        function(f, c, i) {
            var b, g, a, d, h, j = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            a = window.Signals;
            b = f("./.coffee.Storage.js").$storage;
            h = f("./.coffee.TemporaryIds.js");
            d = f("./.coffee.SyncEngine.js");
            g = (function() {
                k.prototype.DepItemsModel = null;
                k.prototype.DepRemindersModel = null;
                k.prototype.DepProjectsModel = null;
                k.prototype.is_shared_cache = {};
                k.prototype.get_all_cache = {};
                k.prototype.collaborators = {};
                k.prototype.projects_active = {};
                k.prototype.projects_invited = {};

                function k() {
                    this._genericGet = j(this._genericGet, this);
                    this.loadCachedData = j(this.loadCachedData, this);
                    this.syncCachedData = j(this.syncCachedData, this);
                    this.clearCache = j(this.clearCache, this);
                    this.getActiveUsers = j(this.getActiveUsers, this);
                    this.getInvitedUsers = j(this.getInvitedUsers, this);
                    this.getAll = j(this.getAll, this);
                    this.isProjectShared = j(this.isProjectShared, this);
                    this.getUserById = j(this.getUserById, this);
                    this.deleteFromProject = j(this.deleteFromProject, this);
                    this.cleanProjectState = j(this.cleanProjectState, this);
                    this._addToInvitedList = j(this._addToInvitedList, this);
                    this.addInvite = j(this.addInvite, this);
                    this.resolveTempId = j(this.resolveTempId, this);
                    this.getByEmail = j(this.getByEmail, this);
                    this.syncLocalModel = j(this.syncLocalModel, this);
                    a.connect("load_cached_data", (function(l) {
                        return function() {
                            return l.loadCachedData()
                        }
                    })(this));
                    a.connect("resolve_temp.collaborator", (function(l) {
                        return function(n, m) {
                            return l.resolveTempId(n, m)
                        }
                    })(this))
                }
                k.prototype.syncLocalModel = function(r, u, m) {
                    var v, J, T, M, K, y, L, G, E, C, F, z, H, D, t, s, w, S, o, q, p, n, l, O, R, Q, N, x;
                    G = this.collaborators;
                    for (q = 0, O = r.length; q < O; q++) {
                        S = r[q];
                        G[S.id] = S
                    }
                    z = this.projects_active;
                    H = this.projects_invited;
                    for (p = 0, R = u.length; p < R; p++) {
                        s = u[p];
                        o = s.user_id;
                        F = s.project_id;
                        E = s.state;
                        m[F] = F;
                        T = false;
                        J = false;
                        if (E === "active") {
                            v = z[F];
                            if (!v) {
                                v = z[F] = {}
                            }
                            v[o] = 1;
                            T = true
                        } else {
                            if (E === "invited") {
                                this._addToInvitedList(F, o);
                                J = true
                            } else {
                                if (E === "deleted" || E === "inactive") {
                                    J = true;
                                    T = true
                                }
                            }
                        } if (J) {
                            v = z[F];
                            if (v) {
                                if (v[o]) {
                                    delete v[o]
                                }
                            }
                        }
                        if (T) {
                            y = H[F];
                            if (y) {
                                if (y[o]) {
                                    delete y[o]
                                }
                            }
                        }
                    }
                    if (u.length > 0) {
                        for (C in H) {
                            M = H[C];
                            K = $keys(M);
                            if (K.length === 0) {
                                delete H[C];
                                continue
                            }
                            for (n = 0, Q = K.length; n < Q; n++) {
                                w = K[n];
                                if (typeof w === "string" && w.indexOf("_") === 0) {
                                    delete M[w];
                                    D = h.getRealId(w);
                                    if (D) {
                                        M[D] = 1
                                    }
                                }
                            }
                        }
                        x = this.DepItemsModel.getAll();
                        for (l = 0, N = x.length; l < N; l++) {
                            L = x[l];
                            t = L.responsible_uid;
                            if (typeof t === "string" && t.indexOf("_") === 0) {
                                D = h.getRealId(t);
                                if (D) {
                                    L.responsible_uid = D
                                } else {
                                    L.responsible_uid = null
                                }
                            }
                        }
                        a.sendSignal("collaborators_states_updated");
                        this.clearCache()
                    }
                    return this.syncCachedData()
                };
                k.prototype.getByEmail = function(n) {
                    var m, p, l, o;
                    o = $values(this.collaborators);
                    for (p = 0, l = o.length; p < l; p++) {
                        m = o[p];
                        if (m.email === n) {
                            return m
                        }
                    }
                    return null
                };
                k.prototype.resolveTempId = function(m, y) {
                    var t, x, l, w, o, v, r, q, u, n, s, p;
                    o = this.collaborators;
                    l = o[m];
                    if (l) {
                        delete o[m];
                        l.id = y;
                        x = this.getByEmail(l.email);
                        if (x) {
                            x.id = y
                        }
                        s = this.DepItemsModel.getAll();
                        for (r = 0, u = s.length; r < u; r++) {
                            w = s[r];
                            t = false;
                            if (w.responsible_uid === m) {
                                w.responsible_uid = y;
                                t = true
                            }
                            if (t) {
                                this.DepItemsModel.syncCachedData()
                            }
                        }
                        p = $values(this.DepRemindersModel.model_data);
                        for (q = 0, n = p.length; q < n; q++) {
                            v = p[q];
                            t = false;
                            if (v.notify_uid === m) {
                                v.notify_uid = y;
                                t = true
                            }
                            if (t) {
                                this.DepRemindersModel.syncCachedData()
                            }
                        }
                        return this.syncCachedData()
                    }
                };
                k.prototype.addInvite = function(m, o) {
                    var n, l;
                    n = this.getByEmail(o);
                    if (!n) {
                        n = {
                            email: o,
                            full_name: o.split("@")[0]
                        };
                        l = n.id = h.generate("collaborator");
                        this.collaborators[n.id] = n;
                        l = n.id;
                        this._addToInvitedList(m, l)
                    } else {
                        l = null;
                        this._addToInvitedList(m, n.id)
                    }
                    d.queueUpdate({
                        type: "share_project",
                        temp_id: l,
                        args: {
                            project_id: m,
                            email: o
                        }
                    });
                    a.sendSignal("project_shared", m, o);
                    return a.sendSignal("refresh_interface", [this.DepProjectsModel.get(m)])
                };
                k.prototype._addToInvitedList = function(m, l) {
                    var n, p, o;
                    if (window.User.id === l) {
                        return
                    }
                    o = this.projects_invited;
                    n = o[m];
                    if (!n) {
                        n = o[m] = {}
                    }
                    n[l] = 1;
                    p = this.DepProjectsModel.get(m);
                    if (p) {
                        p.shared = true
                    }
                    return this.clearCache()
                };
                k.prototype.cleanProjectState = function(l, m) {
                    var n;
                    if (m == null) {
                        m = true
                    }
                    n = false;
                    if (this.projects_invited[l]) {
                        delete this.projects_invited[l];
                        n = true
                    }
                    if (this.projects_active[l]) {
                        delete this.projects_active[l];
                        n = true
                    }
                    if (n && m) {
                        this.clearCache();
                        return this.syncCachedData()
                    }
                };
                k.prototype.deleteFromProject = function(n, m, s) {
                    var q, p, o, r, l;
                    r = this.DepProjectsModel.get(n);
                    l = m.id;
                    l = h.getRealId(l);
                    o = this.projects_invited[n];
                    if (o && o[l]) {
                        delete o[l]
                    }
                    q = this.projects_active[n];
                    if (q && q[l]) {
                        delete q[l]
                    }
                    if ($keys(q).length + $keys(o).length <= 1) {
                        this.cleanProjectState(n, p = false);
                        r = this.DepProjectsModel.get(n);
                        if (r) {
                            r.shared = false
                        }
                    }
                    d.queueUpdate({
                        type: "delete_collaborator",
                        args: {
                            project_id: n,
                            email: m.email
                        }
                    });
                    this.clearCache();
                    if ($isFunction(s)) {
                        s()
                    }
                    return a.sendSignal("refresh_interface", [r])
                };
                k.prototype.getUserById = function(l) {
                    return this.collaborators[l]
                };
                k.prototype.isProjectShared = function(m) {
                    var n, o, p, l;
                    if (this.is_shared_cache[m] !== void 0) {
                        return this.is_shared_cache[m]
                    }
                    l = false;
                    n = this.projects_active[m];
                    if (n && $keys(n).length > 1) {
                        l = true
                    }
                    o = this.projects_invited[m];
                    if (o && $keys(o).length >= 1) {
                        l = true
                    }
                    p = this.DepProjectsModel.get(m);
                    if (p && p.shared !== void 0) {
                        l = p.shared
                    }
                    this.is_shared_cache[m] = l;
                    return l
                };
                k.prototype.getAll = function(p) {
                    var m, q, r, t, l, o, n, s;
                    if (this.get_all_cache[p]) {
                        return this.get_all_cache[p]
                    }
                    r = this.getInvitedUsers(p);
                    m = this.getActiveUsers(p);
                    t = r.concat(m);
                    l = {};
                    q = [];
                    l[window.User.email] = true;
                    for (n = 0, s = t.length; n < s; n++) {
                        o = t[n];
                        if (!l[o.email]) {
                            q.push(o);
                            l[o.email] = true
                        }
                    }
                    q = this.sort(q);
                    q.splice(0, 0, window.User);
                    this.get_all_cache[p] = q;
                    return q
                };
                k.prototype.getInvitedUsers = function(l) {
                    return this._genericGet(l, this.projects_invited)
                };
                k.prototype.getActiveUsers = function(l) {
                    return this._genericGet(l, this.projects_active)
                };
                k.prototype.clearCache = function() {
                    this.is_shared_cache = {};
                    return this.get_all_cache = {}
                };
                k.prototype.syncCachedData = function() {
                    b("CollaboratorsU").set(this.collaborators);
                    b("CollaboratorsA").set(this.projects_active);
                    return b("CollaboratorsI").set(this.projects_invited)
                };
                k.prototype.loadCachedData = function() {
                    var n, m, l;
                    n = b("CollaboratorsU").get();
                    if (n) {
                        this.collaborators = n
                    }
                    m = b("CollaboratorsA").get();
                    if (m) {
                        this.projects_active = m
                    }
                    l = b("CollaboratorsI").get();
                    if (l) {
                        return this.projects_invited = l
                    }
                };
                k.prototype._genericGet = function(q, p) {
                    var l, t, r, n, m, s, o;
                    l = this.collaborators;
                    t = [];
                    if (p[q]) {
                        o = $keys(p[q]);
                        for (m = 0, s = o.length; m < s; m++) {
                            r = o[m];
                            n = l[r];
                            if (n && !n.is_deleted) {
                                t.push(n)
                            }
                        }
                    }
                    t = this.sort(t);
                    return t
                };
                k.prototype.sort = function(l) {
                    return l.sort(function(n, m) {
                        var o, p;
                        o = n.full_name.toLowerCase();
                        p = m.full_name.toLowerCase();
                        return o.localeCompare(p)
                    })
                };
                return k
            })();
            c.exports = new g()
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155
        }
    ],
    131: [
        function(c, f, b) {
            var g, d, a;
            a = c("./.coffee.UtilModels.js");
            d = c("./.coffee.ItemsModel.js");
            g = (function() {
                function h() {}
                h.prototype.annotate = function(k) {
                    var r, o, s, p, l, n, m, q, j;
                    k = k.sort(a.daySort);
                    o = 1000;
                    r = false;
                    for (n = 0, q = k.length; n < q; n++) {
                        s = k[n];
                        if (!s.day_order) {
                            s.day_order = o++;
                            r = true
                        }
                    }
                    if (r) {
                        k = k.sort(a.daySort);
                        p = {};
                        l = 1;
                        for (m = 0, j = k.length; m < j; m++) {
                            s = k[m];
                            p[s.id] = l;
                            s.day_order = l;
                            l++
                        }
                        d.updateDayOrders(p)
                    }
                    return k
                };
                return h
            })();
            f.exports = new g()
        }, {
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.UtilModels.js": 157
        }
    ],
    132: [
        function(g, d, j) {
            var b, h, l, a, f, i, c, k = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            a = window.Signals;
            b = g("./.coffee.Storage.js").$storage;
            c = g("./.coffee.UtilModels.js");
            l = g("./.coffee.ItemsModel.js");
            i = g("./.coffee.TemporaryIds.js");
            f = g("./.coffee.SyncEngine.js");
            h = (function() {
                m.prototype.max_limit = 150;

                function m() {
                    this.loadCachedData = k(this.loadCachedData, this);
                    this.syncCachedData = k(this.syncCachedData, this);
                    this.loadData = k(this.loadData, this);
                    this.deleteMany = k(this.deleteMany, this);
                    this.updateOrdersIndents = k(this.updateOrdersIndents, this);
                    this.update = k(this.update, this);
                    this.add = k(this.add, this);
                    this.resolveTempId = k(this.resolveTempId, this);
                    this.getByName = k(this.getByName, this);
                    this.getAll = k(this.getAll, this);
                    this.get = k(this.get, this);
                    this.getById = k(this.getById, this);
                    this.syncLocalModel = k(this.syncLocalModel, this);
                    var s, n, q, p, r, o;
                    a.connect("load_cached_data", (function(t) {
                        return function() {
                            return t.loadData(t.loadCachedData())
                        }
                    })(this));
                    a.connect("resolve_temp.filter", (function(t) {
                        return function(v, u) {
                            return t.resolveTempId(v, u)
                        }
                    })(this));
                    this.filters_default = {};
                    n = [
                        [_("Assigned to me"), ":to_me:", 12],
                        [_("Assigned to others"), ":to_others:", 12],
                        [_("Priority %s").replace("%s", 1), "priority 1", 6],
                        [_("Priority %s").replace("%s", 2), "priority 2", 6],
                        [_("Priority %s").replace("%s", 3), "priority 3", 6],
                        [_("Priority %s").replace("%s", 4), "priority 4", 6],
                        [_("View all"), "view all", 6],
                        [_("No due date"), "no due date", 6]
                    ];
                    this.default_free = [];
                    p = 0;
                    for (r = 0, o = n.length; r < o; r++) {
                        s = n[r];
                        p++;
                        q = {
                            id: -p,
                            item_order: -1,
                            name: s[0],
                            query: s[1],
                            not_editable: s[3],
                            color: s[2]
                        };
                        this.filters_default[-p] = q;
                        this.default_free.push(q)
                    }
                }
                m.prototype.syncLocalModel = function(n) {
                    if (n.length > 0) {
                        c.syncLocalModel(n, this.model_data);
                        this.syncCachedData();
                        return a.sendSignal("filters_updated", n)
                    }
                };
                m.prototype.getById = function(n) {
                    return this.get(n)
                };
                m.prototype.get = function(o) {
                    var n;
                    o = i.getRealId(o);
                    n = this.model_data[o];
                    if (!n) {
                        n = this.filters_default[o]
                    }
                    return n
                };
                m.prototype.getAll = function(n) {
                    var o;
                    if (n == null) {
                        n = false
                    }
                    if (!window.User.is_premium) {
                        return this.default_free
                    }
                    o = $values(this.model_data);
                    o = o.sort(c.sortByItemOrder);
                    return o
                };
                m.prototype.getByName = function(t, q) {
                    var o, p, s, n, r;
                    n = [];
                    r = this.model_data;
                    for (s in r) {
                        p = r[s];
                        o = p.name.toLowerCase();
                        if (o.indexOf(t) !== -1) {
                            n.push(p)
                        }
                        if (n.length >= q) {
                            break
                        }
                    }
                    return n
                };
                m.prototype.resolveTempId = function(o, n) {
                    var p;
                    p = this.model_data[o];
                    if (p) {
                        p.id = n;
                        this.model_data[n] = p;
                        delete this.model_data[o];
                        return this.syncCachedData()
                    }
                };
                m.prototype.add = function(p) {
                    var o, n;
                    if ($keys(this.model_data).length >= this.max_limit) {
                        alert(_("For performance reasons you can only add %s filters.").replace("%s", this.max_limit));
                        return
                    }
                    o = p;
                    n = o.id = i.generate("filter");
                    if (p.name) {
                        p.name = this.normalizeName(p.name)
                    }
                    this.model_data[o.id] = o;
                    f.queueUpdate({
                        type: "filter_add",
                        temp_id: n,
                        args: p
                    });
                    this.syncCachedData();
                    return o
                };
                m.prototype.update = function(p, n) {
                    var o;
                    o = this.get(p);
                    if (o) {
                        n.id = o.id;
                        if (n.name) {
                            n.name = this.normalizeName(n.name)
                        }
                        $update(o, n);
                        f.queueUpdate({
                            type: "filter_update",
                            args: n
                        });
                        this.syncCachedData()
                    }
                    return o
                };
                m.prototype.updateOrdersIndents = function(q) {
                    var p, r, n, o;
                    n = {};
                    for (r in q) {
                        p = q[r];
                        o = this.getById(r);
                        if (o) {
                            o.item_order = p[0];
                            if (o.id > 0) {
                                n[o.id] = o.item_order
                            }
                        }
                    }
                    if ($keys(n).length > 0) {
                        f.queueUpdate({
                            type: "filter_update_orders",
                            args: {
                                id_order_mapping: $serialize(n)
                            }
                        })
                    }
                    return this.syncCachedData()
                };
                m.prototype.deleteMany = function(s) {
                    var r, p, q, o, n;
                    p = this.model_data;
                    n = [];
                    for (q = 0, o = s.length; q < o; q++) {
                        r = s[q];
                        if (p[r]) {
                            delete p[r]
                        }
                        n.push(f.queueUpdate({
                            type: "filter_delete",
                            args: {
                                id: r
                            }
                        }))
                    }
                    return n
                };
                m.prototype.normalizeName = function(n) {
                    n = n.replace(/[<>"=#+]+/g, "_");
                    return n
                };
                m.prototype.loadData = function(n) {
                    if (n) {
                        return this.model_data = n
                    }
                };
                m.prototype.syncCachedData = function() {
                    return b("Filters").set(this.model_data)
                };
                m.prototype.loadCachedData = function() {
                    var n;
                    n = b("Filters").get();
                    if (!n) {
                        return {}
                    } else {
                        return n
                    }
                };
                return m
            })();
            d.exports = new h()
        }, {
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    133: [
        function(f, c, i) {
            var b, h, d, m, j, g, l, a, k = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            a = window.Signals;
            b = f("./.coffee.Storage.js").$storage;
            m = f("./.coffee.ItemsModel.js");
            g = f("./.coffee.ProjectsModel.js");
            j = f("./.coffee.NotesModel.js");
            l = f("./.coffee.Reminders.js").RemindersModel;
            d = f("./.coffee.GarbageCollectorTypes.js");
            h = (function() {
                n.prototype.gc_cycle = 5 * 60000;
                n.prototype.model_data = [];
                n.prototype.timeout = null;

                function n() {
                    this.loadCachedData = k(this.loadCachedData, this);
                    this.syncCachedData = k(this.syncCachedData, this);
                    this.schedule = k(this.schedule, this);
                    this.clean = k(this.clean, this);
                    this.runGC = k(this.runGC, this);
                    a.connect("garbage_collect.clean", (function(o) {
                        return function(q, r, p) {
                            if (p == null) {
                                p = false
                            }
                            return o.clean(q, r, p)
                        }
                    })(this));
                    a.connect("garbage_collect.schedule", (function(o) {
                        return function() {
                            return o.schedule()
                        }
                    })(this))
                }
                n.prototype.runGC = function() {
                    var C, N, V, D, R, M, v, H, F, x, S, u, O, G, Q, q, J, E, U, t, s, p, L, y, K, w, o, W, r, T, z;
                    E = {};
                    o = {};
                    q = {};
                    K = {};
                    z = this.model_data;
                    for (r = 0, T = z.length; r < T; r++) {
                        R = z[r];
                        if (R[0] === d.type_project) {
                            E[R[1]] = R[1]
                        } else {
                            if (R[0] === d.type_item) {
                                o[R[1]] = R[1]
                            } else {
                                if (R[0] === d.type_note) {
                                    q[R[1]] = R[1]
                                } else {
                                    if (R[0] === d.type_reminder) {
                                        K[R[1]] = R[1]
                                    }
                                }
                            }
                        }
                    }
                    this.model_data = [];
                    x = g.model_data;
                    H = m.model_data;
                    F = j.model_data;
                    S = l.model_data;
                    t = false;
                    for (W in E) {
                        J = E[W];
                        U = x[J];
                        D = U && U.is_archived;
                        C = U && (U.is_deleted || U.is_archived);
                        if (C) {
                            delete x[J];
                            t = true
                        }
                        if (!U || C) {
                            for (M in H) {
                                R = H[M];
                                if (R.project_id === J) {
                                    if (D) {
                                        R.in_history = 1
                                    } else {
                                        R.is_deleted = 1
                                    }
                                    o[M] = R.id
                                }
                            }
                        }
                    }
                    if (t) {
                        g.syncCachedData()
                    }
                    w = false;
                    for (W in o) {
                        M = o[W];
                        v = H[M];
                        if (!v) {
                            continue
                        }
                        if (v.id === this.currentActiveTask()) {
                            continue
                        }
                        N = v && v.in_history;
                        V = v && (v.is_deleted || v.in_history);
                        if (V) {
                            delete H[M];
                            w = true
                        }
                        if (!v || V) {
                            for (O in F) {
                                u = F[O];
                                if (u.item_id === M) {
                                    if (N) {
                                        u.is_archived = 1
                                    } else {
                                        u.is_deleted = 1
                                    }
                                    q[u.id] = u.id
                                }
                            }
                            for (L in S) {
                                s = S[L];
                                if (s.item_id === M) {
                                    s.is_deleted = 1;
                                    K[s.id] = s.id
                                }
                            }
                        }
                    }
                    if (w) {
                        m.clearAllCache();
                        m.syncCachedData()
                    }
                    Q = false;
                    for (W in q) {
                        O = q[W];
                        G = F[O];
                        if (G && (G.is_deleted || G.is_archived)) {
                            delete F[O];
                            Q = true
                        }
                    }
                    if (Q) {
                        j.syncCachedData()
                    }
                    p = false;
                    for (W in K) {
                        L = K[W];
                        y = S[L];
                        if (y) {
                            delete S[L];
                            p = true
                        }
                    }
                    if (p) {
                        return l.syncCachedData()
                    }
                };
                n.prototype.clean = function(p, q, o) {
                    if (o == null) {
                        o = false
                    }
                    this.model_data.push([p, q]);
                    this.syncCachedData();
                    if (o === true) {
                        return this.runGC()
                    } else {
                        return this.schedule()
                    }
                };
                n.prototype.schedule = function() {
                    if (this.timeout) {
                        clearTimeout(this.timeout)
                    }
                    return this.timeout = setTimeout(this.runGC, this.gc_cycle)
                };
                n.prototype.syncCachedData = function() {
                    return b("GarbageCollector").set(this.model_data)
                };
                n.prototype.loadCachedData = function() {
                    var o;
                    o = b("GarbageCollector").get();
                    if (o) {
                        return this.model_data = o
                    } else {
                        return this.model_data = []
                    }
                };
                n.prototype.currentActiveTask = function() {
                    if (window.Notes && window.Notes.current_task) {
                        return window.Notes.current_task.id
                    } else {
                        return null
                    }
                };
                return n
            })();
            window.GarbageCollector = new h();
            c.exports = window.GarbageCollector
        }, {
            "./.coffee.GarbageCollectorTypes.js": 134,
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.NotesModel.js": 141,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.Reminders.js": 147,
            "./.coffee.Storage.js": 150
        }
    ],
    134: [
        function(b, c, a) {
            c.exports = {
                type_project: 1,
                type_item: 2,
                type_note: 3,
                type_reminder: 4
            }
        }, {}
    ],
    135: [
        function(c, d, a) {
            var g, h, f, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            g = c("./.coffee.Storage.js").$storage;
            h = (function() {
                function i(j, k) {
                    this.resolveTempId = b(this.resolveTempId, this);
                    this.commit = b(this.commit, this);
                    this.updateIfFound = b(this.updateIfFound, this);
                    this.update = b(this.update, this);
                    this.hasUnfinished = b(this.hasUnfinished, this);
                    this.sync_command = j;
                    this.sync_arg = k;
                    this.timeout = null;
                    this.pending_updates = {}
                }
                i.prototype.hasUnfinished = function() {
                    return $keys(this.pending_updates).length > 0
                };
                i.prototype.update = function(k) {
                    var j, l;
                    for (l in k) {
                        j = k[l];
                        this.pending_updates[l] = j
                    }
                    g(this.sync_command).set(this.pending_updates);
                    if (this.timeout) {
                        clearTimeout(this.timeout)
                    }
                    return this.timeout = setTimeout(this.commit, 2000)
                };
                i.prototype.updateIfFound = function(k, j) {
                    if (this.pending_updates[k]) {
                        this.pending_updates[k] = j;
                        return g(this.sync_command).set(this.pending_updates)
                    }
                };
                i.prototype.commit = function() {
                    var j;
                    if (this.hasUnfinished()) {
                        j = {};
                        j[this.sync_arg] = $serialize(this.pending_updates);
                        f().queueUpdate({
                            type: this.sync_command,
                            args: j
                        });
                        this.pending_updates = {};
                        return g(this.sync_command).set(this.pending_updates)
                    }
                };
                i.prototype.resolveTempId = function(k, j) {
                    var l;
                    l = this.pending_updates[k];
                    if (l) {
                        this.pending_updates[j] = l;
                        delete this.pending_updates[k];
                        return g(this.sync_command).set(this.pending_updates)
                    }
                };
                i.prototype.loadData = function() {
                    this.pending_updates = g(this.sync_command).get() || {};
                    if (this.hasUnfinished()) {
                        return this.commit()
                    }
                };
                return i
            })();
            f = function() {
                var i;
                i = c("./.coffee.SyncEngine.js");
                return i
            };
            d.exports = h
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152
        }
    ],
    136: [
        function(d, b, j) {
            var h, i, p, k, l, g, f, o, m, n, c, a;
            p = d("./.coffee.ItemsModel.js");
            f = d("./.coffee.ProjectsModel.js");
            n = d("./.coffee.Reminders.js").RemindersModel;
            l = d("./.coffee.NotesModel.js");
            k = d("./.coffee.LabelsModel.js");
            a = d("./.coffee.UtilModels.js");
            h = d("./.coffee.Collaborators.js");
            m = d("./.coffee.QueriesItems.js");
            o = d("./.coffee.QueriesComplex.js");
            c = d("./.coffee.SyncEngine.js");
            i = d("./.coffee.GarbageCollector.js");
            g = d("../components/people_assigner/.coffee.PeopleAssigner.js");
            j.init = function() {
                a.DepItemsModel = p;
                a.DepSyncEngine = c;
                h.DepItemsModel = p;
                h.DepProjectsModel = f;
                h.DepRemindersModel = n;
                k.DepItemsModel = p;
                k.DepQueriesComplex = o;
                p.DepCollaborators = h;
                p.DepLabelsModel = k;
                p.DepNotesModel = l;
                p.DepRemindersModel = n;
                p.DepQueriesItems = m;
                n.DepItemsModel = p;
                n.DepCollaborators = h;
                return n.DepPeopleAssigner = g
            }
        }, {
            "../components/people_assigner/.coffee.PeopleAssigner.js": 65,
            "./.coffee.Collaborators.js": 130,
            "./.coffee.GarbageCollector.js": 133,
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.LabelsModel.js": 138,
            "./.coffee.NotesModel.js": 141,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.QueriesComplex.js": 144,
            "./.coffee.QueriesItems.js": 145,
            "./.coffee.Reminders.js": 147,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.UtilModels.js": 157
        }
    ],
    137: [
        function(j, h, m) {
            var d, o, n, r, q, c, g, k, b, i, l, f, a, p = function(s, t) {
                    return function() {
                        return s.apply(t, arguments)
                    }
                };
            b = window.Signals;
            r = window.Dateist;
            n = window.DateUtils;
            q = window.DateistDateHelpers;
            d = j("./.coffee.Storage.js").$storage;
            l = j("./.coffee.TemporaryIds.js");
            k = j("./.coffee.GenericOrderSync.js");
            f = j("./.coffee.UtilModels.js");
            i = j("./.coffee.SyncEngine.js");
            g = j("./.coffee.GarbageCollectorTypes.js");
            o = j("./.coffee.Reminders.js").BufferedRemindersModel;
            c = (function() {
                s.prototype.DepCollaborators = null;
                s.prototype.DepLabelsModel = null;
                s.prototype.DepNotesModel = null;
                s.prototype.DepRemindersModel = null;
                s.prototype.DepQueriesItems = null;
                s.prototype.model_data = {};
                s.prototype.cache_project_items = {};
                s.prototype.cache_all_items = null;
                s.prototype.cache_all_own_items = null;

                function s() {
                    this.getMaxOrder = p(this.getMaxOrder, this);
                    this._setNotifications = p(this._setNotifications, this);
                    this.convertToDateObject = p(this.convertToDateObject, this);
                    this.loadDayOrders = p(this.loadDayOrders, this);
                    this.loadCachedData = p(this.loadCachedData, this);
                    this.syncCachedData = p(this.syncCachedData, this);
                    this._sanitizeArgs = p(this._sanitizeArgs, this);
                    this._addToModel = p(this._addToModel, this);
                    this._areArgsUpdated = p(this._areArgsUpdated, this);
                    this.uncomplete = p(this.uncomplete, this);
                    this._completeNonRecurring = p(this._completeNonRecurring, this);
                    this.complete = p(this.complete, this);
                    this.moveMultiple = p(this.moveMultiple, this);
                    this.updateCached = p(this.updateCached, this);
                    this.updateDayOrders = p(this.updateDayOrders, this);
                    this.updateOrdersIndents = p(this.updateOrdersIndents, this);
                    this.update = p(this.update, this);
                    this.deleteItem = p(this.deleteItem, this);
                    this.add = p(this.add, this);
                    this.resolveTempId = p(this.resolveTempId, this);
                    this.loadData = p(this.loadData, this);
                    this.clearHistoryItems = p(this.clearHistoryItems, this);
                    this.clearAllCache = p(this.clearAllCache, this);
                    this.clearCache = p(this.clearCache, this);
                    this.getByName = p(this.getByName, this);
                    this.getChildren = p(this.getChildren, this);
                    this.getItemCount = p(this.getItemCount, this);
                    this.getByProjectId = p(this.getByProjectId, this);
                    this.getBySyncId = p(this.getBySyncId, this);
                    this.getById = p(this.getById, this);
                    this.getNoLabels = p(this.getNoLabels, this);
                    this.getAssignedToOthers = p(this.getAssignedToOthers, this);
                    this.getAssignedToMe = p(this.getAssignedToMe, this);
                    this.getAllOwn = p(this.getAllOwn, this);
                    this.getAll = p(this.getAll, this);
                    this.syncLocalModel = p(this.syncLocalModel, this);
                    this.item_order_indent_syncer = new k("item_update_orders_indents", "ids_to_orders_indents");
                    this.dayorder_syncer = new k("item_update_day_orders", "ids_to_orders");
                    b.connect("load_cached_data", (function(t) {
                        return function() {
                            return t.loadData(t.loadCachedData())
                        }
                    })(this));
                    b.connect("clear_local_data", (function(t) {
                        return function() {
                            t.model_data = {};
                            t.clearAllCache();
                            return t.syncCachedData()
                        }
                    })(this));
                    b.connect("sync_data.items", (function(t) {
                        return function() {
                            return t.syncCachedData()
                        }
                    })(this));
                    b.connect("resolve_temp.item", (function(t) {
                        return function(v, u) {
                            t.resolveTempId(v, u);
                            return t.item_order_indent_syncer.resolveTempId(v, u)
                        }
                    })(this));
                    b.connect("update_project_count", (function(t) {
                        return function(u) {
                            return u.cache_count = t.getItemCount(u.id)
                        }
                    })(this))
                }
                s.prototype.syncLocalModel = function(J, t) {
                    var H, O, E, C, w, G, D, z, x, v, u, K, N, M, L, F, y;
                    if (J.length > 0) {
                        D = {};
                        E = a().model_data;
                        for (z = 0, K = J.length; z < K; z++) {
                            H = J[z];
                            this.convertToDateObject(H);
                            O = this.model_data[H.id];
                            if (O) {
                                D[O.project_id] = O.project_id
                            }
                            if (!E[H.project_id]) {
                                H.in_history = 1
                            }
                            if (H.in_history || H.is_deleted) {
                                b.sendSignal("garbage_collect.clean", g.type_item, H.id)
                            }
                        }
                        w = this.item_order_indent_syncer.pending_updates;
                        for (x = 0, N = J.length; x < N; x++) {
                            H = J[x];
                            C = w[H.id];
                            if (C) {
                                H.item_order = C[0];
                                H.indent = C[1]
                            }
                        }
                        f.syncLocalModel(J, this.model_data);
                        this.clearAllCache();
                        this.syncCachedData();
                        if (J.length > 0) {
                            for (v = 0, M = J.length; v < M; v++) {
                                H = J[v];
                                D[H.project_id] = H.project_id
                            }
                            F = $values(D);
                            y = [];
                            for (u = 0, L = F.length; u < L; u++) {
                                G = F[u];
                                a().updateCount(G);
                                y.push(t[G] = G)
                            }
                            return y
                        }
                    }
                };
                s.prototype.getAll = function(x) {
                    var v, u, t, w;
                    if (x == null) {
                        x = true
                    }
                    if (this.cache_all_items) {
                        return this.cache_all_items
                    }
                    t = [];
                    w = this.model_data;
                    for (u in w) {
                        v = w[u];
                        if (!x || v.in_history === 0 && v.checked === 0) {
                            t.push(v)
                        }
                    }
                    this.cache_all_items = t;
                    return t
                };
                s.prototype.getAllOwn = function(C) {
                    var v, u, z, y, x, t, w;
                    if (C == null) {
                        C = true
                    }
                    if (this.cache_all_own_items) {
                        return this.cache_all_own_items
                    }
                    y = window.User.id;
                    u = [];
                    w = this.getAll(C);
                    for (x = 0, t = w.length; x < t; x++) {
                        v = w[x];
                        z = v.responsible_uid;
                        if (z && y !== z) {
                            continue
                        }
                        u.push(v)
                    }
                    this.cache_all_own_items = u;
                    return u
                };
                s.prototype.getAssignedToMe = function() {
                    var v, t, y, x, u, w;
                    y = window.User.id;
                    t = [];
                    w = this.getAll();
                    for (x = 0, u = w.length; x < u; x++) {
                        v = w[x];
                        if (v.responsible_uid === y) {
                            if (this.DepCollaborators.isProjectShared(v.project_id)) {
                                t.push(v)
                            }
                        }
                    }
                    return t
                };
                s.prototype.getAssignedToOthers = function() {
                    var v, t, y, x, u, w;
                    y = window.User.id;
                    t = [];
                    w = this.getAll();
                    for (x = 0, u = w.length; x < u; x++) {
                        v = w[x];
                        if (v.responsible_uid && v.responsible_uid !== y && v.assigned_by_uid === y) {
                            t.push(v)
                        }
                    }
                    return t
                };
                s.prototype.getNoLabels = function() {
                    var v, t, x, u, w;
                    t = [];
                    w = this.getAll();
                    for (x = 0, u = w.length; x < u; x++) {
                        v = w[x];
                        if (!v.labels || v.labels.length === 0) {
                            t.push(v)
                        }
                    }
                    return t
                };
                s.prototype.getById = function(t) {
                    return this.model_data[t]
                };
                s.prototype.getBySyncId = function(t) {
                    var w, u, v;
                    v = this.model_data;
                    for (w in v) {
                        u = v[w];
                        if (u.sync_id === t) {
                            return u
                        }
                    }
                    return null
                };
                s.prototype.getByProjectId = function(u) {
                    var y, v, x, t, w;
                    u = l.getRealId(u);
                    if (!l.isTemporary(u)) {
                        u = parseInt(u)
                    }
                    if (this.cache_project_items[u]) {
                        return this.cache_project_items[u]
                    }
                    t = [];
                    w = this.model_data;
                    for (y in w) {
                        v = w[y];
                        x = l.getRealId(v.project_id);
                        if (x === u && !v.in_history) {
                            t.push(v)
                        }
                    }
                    t.sort(f.sortByItemOrder);
                    this.cache_project_items[u] = t;
                    return t
                };
                s.prototype.getItemCount = function(v) {
                    var x, w, u, y, t;
                    u = this.getByProjectId(v);
                    x = 0;
                    for (y = 0, t = u.length; y < t; y++) {
                        w = u[y];
                        if (w.checked === 0 && !f.isBulletItem(w.content)) {
                            x += 1
                        }
                    }
                    return x
                };
                s.prototype.getChildren = function(u, v) {
                    var t;
                    if (v == null) {
                        v = false
                    }
                    t = this.getByProjectId(u.project_id);
                    return f.getChildren(t, u, v)
                };
                s.prototype.getByName = function(C, x) {
                    var w, t, v, z, u, y;
                    t = [];
                    y = this.getAll();
                    for (z = 0, u = y.length; z < u; z++) {
                        v = y[z];
                        w = v.content.toLowerCase();
                        if (w.indexOf(C) !== -1) {
                            t.push(v)
                        }
                        if (t.length >= x) {
                            break
                        }
                    }
                    return t
                };
                s.prototype.clearCache = function(t) {
                    var u;
                    if (!t) {
                        this.cache_project_items = {}
                    } else {
                        u = this.cache_project_items[t];
                        if (u !== void 0) {
                            delete this.cache_project_items[t]
                        }
                    }
                    this.cache_all_items = null;
                    this.cache_all_own_items = null;
                    return this.DepQueriesItems.clearCache()
                };
                s.prototype.clearAllCache = function() {
                    this.cache_all_items = null;
                    this.cache_all_own_items = null;
                    this.cache_project_items = {};
                    return this.DepQueriesItems.clearCache()
                };
                s.prototype.clearHistoryItems = function() {
                    var t, v, D, u, C, x, z, y, w;
                    v = [];
                    y = this.model_data;
                    for (t in y) {
                        u = y[t];
                        if (u.in_history) {
                            v.push(t)
                        }
                    }
                    C = this.model_data;
                    w = [];
                    for (x = 0, z = v.length; x < z; x++) {
                        D = v[x];
                        if (C[D]) {
                            w.push(delete C[D])
                        } else {
                            w.push(void 0)
                        }
                    }
                    return w
                };
                s.prototype.loadData = function(u) {
                    var v, w, t;
                    for (w = 0, t = u.length; w < t; w++) {
                        v = u[w];
                        this.convertToDateObject(v);
                        this._addToModel(v, false, false)
                    }
                    this.clearHistoryItems();
                    this.syncCachedData();
                    this.item_order_indent_syncer.loadData();
                    return this.dayorder_syncer.loadData()
                };
                s.prototype.splitItemsIntoDates = function(y, x) {
                    var t, C, w, D, u, v, z;
                    if (x == null) {
                        x = false
                    }
                    w = {};
                    for (v = 0, z = y.length; v < z; v++) {
                        C = y[v];
                        if (C.due_date) {
                            u = C.due_date.toDateString();
                            t = w[u];
                            if (!t) {
                                t = w[u] = {};
                                t.items = [];
                                t.date = new Date(u);
                                t.time = t.date.getTime()
                            }
                            t.items.push(C)
                        }
                    }
                    D = $values(w);
                    D.sort(f.sortByDate);
                    if (x) {
                        D.reverse()
                    }
                    return D
                };
                s.prototype.resolveTempId = function(u, t) {
                    var v;
                    v = this.model_data[u];
                    if (v) {
                        v.id = t;
                        if (l.isTemporary(v.project_id)) {
                            v.project_id = l.getRealId(v.project_id)
                        }
                        if (l.isTemporary(v.responsible_uid)) {
                            v.responsible_uid = l.getRealId(v.responsible_uid)
                        }
                        delete this.model_data[u];
                        this._addToModel(v);
                        return this.syncCachedData()
                    }
                };
                s.prototype.add = function(w) {
                    var x, v, u, t;
                    x = {
                        content: w.content || "",
                        due_date: w.due_date || null,
                        date_string: w.date_string || "",
                        priority: w.priority,
                        indent: w.indent || 1,
                        item_order: w.item_order || 1,
                        labels: [],
                        checked: 0,
                        user_id: window.User.id,
                        in_history: 0,
                        collapsed: 0,
                        date_added: new Date(),
                        assigned_by_uid: window.User.id,
                        responsible_uid: null,
                        all_notes_fetched: true,
                        date_lang: w.date_lang || "en"
                    };
                    if (x.indent > 5) {
                        x.indent = 4
                    }
                    if (w.content) {
                        this.handleTextShortcuts(w)
                    }
                    if (!w.date_lang) {
                        w.date_lang = "en"
                    }
                    x.project_id = w.project_id;
                    $update(x, w);
                    u = $keys(this.getByProjectId(x.project_id));
                    if (window.User.is_premium) {
                        v = 200
                    } else {
                        v = 150
                    } if (u.length >= v) {
                        alert(_("For performance reasons you can only add %s tasks pr. project. Please split your tasks in multiple projects.").replace("%s", v));
                        return
                    }
                    t = x.id = l.generate("item");
                    this.DepLabelsModel.updateLabels(w, x);
                    w.content = $strip(w.content);
                    if (w.content.length === 0) {
                        return null
                    }
                    if (x.due_date) {
                        x.time = x.due_date.getTime()
                    }
                    b.sendSignal("item_added", x);
                    this._addToModel(x);
                    if (this.item_order_indent_syncer.hasUnfinished()) {
                        this.item_order_indent_syncer.commit()
                    }
                    i.queueUpdate({
                        type: "item_add",
                        temp_id: t,
                        args: this._sanitizeArgs(w)
                    });
                    this._setNotifications(x, x.date_string);
                    a().updateCount(x.project_id);
                    this.syncCachedData();
                    if (w.note) {
                        this.DepNotesModel.addNote(t, w.note)
                    }
                    return x
                };
                s.prototype.deleteItem = function(v, u) {
                    var x, w, t;
                    if (v.length === 0) {
                        return
                    }
                    i.queueUpdate({
                        type: "item_delete",
                        args: {
                            ids: v,
                            project_id: u
                        }
                    });
                    for (w = 0, t = v.length; w < t; w++) {
                        x = v[w];
                        x = l.getRealId(x);
                        if (this.model_data[x]) {
                            delete this.model_data[x]
                        }
                    }
                    this.syncCachedData();
                    this.clearCache(u);
                    return a().updateCount(u)
                };
                s.prototype.update = function(u, x, y) {
                    var v, w, C, D, t, z;
                    if (y == null) {
                        y = false
                    }
                    D = this.getById(u);
                    if (D) {
                        z = {};
                        $update(z, D);
                        if (x.content) {
                            this.handleTextShortcuts(x)
                        }
                        if (x.indent && x.indent > 4) {
                            x.indent = 5
                        }
                        if (x.project_id && x.project_id !== D.project_id) {
                            t = x.project_id;
                            delete x.project_id
                        } else {
                            t = false
                        }
                        this.DepLabelsModel.updateLabels(x, D);
                        if (x.content) {
                            x.content = $strip(x.content);
                            if (x.content.length === 0) {
                                return [z, true]
                            }
                        }
                        x.id = D.id;
                        if (this._areArgsUpdated(x, z) && y === false && t === false) {
                            return [D, false]
                        }
                        i.queueUpdate({
                            type: "item_update",
                            args: this._sanitizeArgs(x)
                        });
                        b.sendSignal("item_updated", x);
                        this.updateCached(D, x);
                        this._setNotifications(D, D.date_string);
                        if (x.indent || x.item_order) {
                            this.item_order_indent_syncer.updateIfFound(D.id, [D.item_order, D.indent])
                        }
                        if (t) {
                            v = {};
                            v[D.project_id] = (function() {
                                var H, F, G, E;
                                G = this.getChildren(D, true);
                                E = [];
                                for (H = 0, F = G.length; H < F; H++) {
                                    w = G[H];
                                    E.push(w.id)
                                }
                                return E
                            }).call(this);
                            this.moveMultiple(v, t)
                        }
                        if (x.date_string && x.date_string !== D.date_string) {
                            D.tz_set = false;
                            D.due_date = new Date(D.due_date.getTime())
                        }
                        if (D.due_date) {
                            D.time = D.due_date.getTime()
                        } else {
                            if (D.time) {
                                delete D.time
                            }
                        }
                        a().updateCount(D.project_id);
                        C = false;
                        if (x.due_date !== void 0) {
                            if (!q.is_same_date(z.due_date, x.due_date)) {
                                C = true
                            }
                        }
                        if (x.priority !== void 0) {
                            if (x.priority && x.priority !== z.priority) {
                                C = true
                            }
                        }
                        if (C) {
                            x.day_order = D.day_order = -1
                        }
                        if (x.date_string) {
                            this._markLocalRemindersNonProcessed(D)
                        }
                        this.syncCachedData();
                        return [D, true]
                    } else {
                        return [null, false]
                    }
                };
                s.prototype.updateOrdersIndents = function(z) {
                    var y, v, t, D, C, x, u, w;
                    v = false;
                    x = {};
                    for (t in z) {
                        y = z[t];
                        D = this.model_data[t];
                        if (D) {
                            D.item_order = y[0];
                            D.indent = y[1];
                            x[D.project_id] = true;
                            v = true
                        }
                    }
                    if (v) {
                        this.item_order_indent_syncer.update(z);
                        this.syncCachedData();
                        w = [];
                        for (C in x) {
                            u = x[C];
                            w.push(this.clearCache(C))
                        }
                        return w
                    }
                };
                s.prototype.updateDayOrders = function(w) {
                    var v, C, x, t, u, z, y;
                    v = false;
                    z = {};
                    for (C in w) {
                        t = w[C];
                        x = this.model_data[C];
                        if (x) {
                            x.day_order = t;
                            z[x.project_id] = true;
                            v = true
                        }
                    }
                    if (v) {
                        for (u in z) {
                            y = z[u];
                            this.clearCache(u)
                        }
                        this.dayorder_syncer.update(w);
                        return this.syncCachedData()
                    }
                };
                s.prototype.updateCached = function(u, t) {
                    var v;
                    u.id = l.getRealId(u.id);
                    v = this.getById(u.id);
                    this.clearCache(u.project_id);
                    if (v) {
                        $update(v, t)
                    }
                    return $update(u, t)
                };
                s.prototype.moveMultiple = function(D, y) {
                    var v, x, C, G, H, E, u, z, t, w, F;
                    v = a();
                    t = v.get(y);
                    if (!t) {
                        return
                    }
                    u = this.getMaxOrder(y);
                    for (z in D) {
                        E = D[z];
                        C = 0;
                        x = this.getById($first(E));
                        if (x && x.indent > 1) {
                            C = x.indent - 1
                        }
                        for (w = 0, F = E.length; w < F; w++) {
                            H = E[w];
                            G = this.getById(H);
                            if (G) {
                                G.responsible_uid = null;
                                G.indent -= C;
                                this.updateCached(G, {
                                    project_id: y,
                                    item_order: u++,
                                    indent: G.indent
                                })
                            }
                        }
                        v.updateCount(z)
                    }
                    this.clearCache(y);
                    v.updateCount(y);
                    i.queueUpdate({
                        type: "item_move",
                        args: {
                            project_items: D,
                            to_project: y
                        }
                    });
                    return this.syncCachedData()
                };
                s.prototype.complete = function(v, w) {
                    var t, u;
                    if (w == null) {
                        w = 0
                    }
                    u = this.getById(v.id);
                    if (u) {
                        v = u
                    }
                    if (u && u.checked === 0) {
                        b.sendSignal("model_item_completed", u)
                    }
                    t = r.is_recurring(v.date_string, {
                        lang: v.date_lang
                    });
                    if (v.in_history === 0 && t && !w) {
                        return this._completeRecurring(v)
                    } else {
                        return this._completeNonRecurring(v, w)
                    }
                };
                s.prototype._completeNonRecurring = function(H, x) {
                    var y, D, t, G, C, z, F, w, v, E, u;
                    G = H.project_id;
                    y = this.getChildren(H, F = true);
                    D = 0;
                    for (w = 0, E = y.length; w < E; w++) {
                        C = y[w];
                        if (!C.checked || x) {
                            D += 1
                        }
                    }
                    if (D === 1) {
                        z = _("1 item completed").replace("%s", D)
                    } else {
                        z = _("%s items completed").replace("%s", D)
                    }
                    b.sendSignal("mark_for_undo", y, "complete_non_recurring", z);
                    if (H.indent === 1) {
                        x = 1
                    }
                    t = [];
                    for (v = 0, u = y.length; v < u; v++) {
                        C = y[v];
                        t.push(C.id);
                        C.checked = 1;
                        if (x || C.indent === 1) {
                            C.indent = 1;
                            C.in_history = 1
                        }
                    }
                    if (t.length > 0 && G) {
                        i.queueUpdate({
                            type: "item_complete",
                            args: {
                                project_id: G,
                                ids: t,
                                force_history: x,
                                content: H.content
                            }
                        });
                        this.clearCache(G);
                        this.syncCachedData();
                        a().updateCount(G)
                    }
                    return y
                };
                s.prototype._completeRecurring = function(v) {
                    var u, w, t;
                    t = _("Date updated");
                    b.sendSignal("mark_for_undo", [v], "complete_recurring", t);
                    u = n.parse(v.date_string, v);
                    if (u.end_reached) {
                        return this.complete(v, true)
                    } else {
                        if (u.error) {
                            w = r.parse("tomorrow").due_date
                        } else {
                            w = u.due_date
                        }
                    }
                    v.due_date = w;
                    v.time = v.due_date.getTime();
                    v.checked = 0;
                    v.day_order = -1;
                    i.queueUpdate({
                        type: "item_update_date_complete",
                        args: {
                            id: v.id,
                            new_date_utc: n.jsonFormat(v.due_date),
                            date_string: v.date_string,
                            is_forward: 1
                        }
                    });
                    this.clearCache(v.project_id);
                    this.syncCachedData();
                    this._markLocalRemindersNonProcessed(v);
                    return [v]
                };
                s.prototype.uncomplete = function(u) {
                    var t;
                    i.queueUpdate({
                        type: "item_uncomplete",
                        args: {
                            project_id: u.project_id,
                            ids: [u.id]
                        }
                    });
                    t = this.getById(u.id);
                    if (t && t.checked === 1) {
                        b.sendSignal("model_item_uncompleted", t)
                    }
                    if (t) {
                        u = t
                    } else {
                        this._addToModel(u, true, false)
                    }
                    u.checked = 0;
                    if (u.in_history) {
                        u.in_history = 0;
                        u.indent = 1;
                        u.item_order = this.getMaxOrder(u.project_id)
                    }
                    this.clearCache(u.project_id);
                    this._markLocalRemindersNonProcessed(u);
                    this._markLocalNotesAsNotInHistory(u);
                    this.syncCachedData();
                    return u
                };
                s.prototype._areArgsUpdated = function(u, w) {
                    var v, y, t, x;
                    x = $keys(u);
                    for (y = 0, t = x.length; y < t; y++) {
                        v = x[y];
                        if (v === "labels" || v === "due_date") {
                            if ("" + u[v] !== "" + w[v]) {
                                return false
                            }
                        } else {
                            if (u[v] !== w[v]) {
                                return false
                            }
                        }
                    }
                    return true
                };
                s.prototype._addToModel = function(u, v, t) {
                    if (v == null) {
                        v = true
                    }
                    if (t == null) {
                        t = true
                    }
                    this.model_data[u.id] = u;
                    this.clearCache(u.project_id);
                    if (t) {
                        return this.syncCachedData()
                    }
                };
                s.prototype._sanitizeArgs = function(u) {
                    var t;
                    if (!u.due_date && !u.labels) {
                        return u
                    } else {
                        t = {};
                        $update(t, u);
                        if (t.due_date) {
                            t.due_date_utc = n.jsonFormat(u.due_date);
                            delete t.due_date
                        }
                        if (t.labels) {
                            t.labels = $serialize(u.labels)
                        }
                        return t
                    }
                };
                s.prototype.syncCachedData = function() {
                    return d("Items").set(this.model_data)
                };
                s.prototype.loadCachedData = function() {
                    var w, u, v, t;
                    v = d("Items").get();
                    if (!v) {
                        return []
                    } else {
                        t = [];
                        for (u in v) {
                            w = v[u];
                            t.push(w)
                        }
                        return t
                    }
                };
                s.prototype.loadDayOrders = function(v) {
                    var x, w, t, u;
                    u = [];
                    for (w in v) {
                        t = v[w];
                        x = this.model_data[w];
                        if (x) {
                            u.push(x.day_order = t)
                        } else {
                            u.push(void 0)
                        }
                    }
                    return u
                };
                s.prototype.convertToDateObject = function(t) {
                    if ($isString(t.due_date) || t.time) {
                        if (t.time) {
                            t.due_date = new Date(t.time)
                        } else {
                            t.due_date = new Date(t.due_date)
                        } if (!q.has_time(t.due_date)) {
                            t.due_date = q.date_max(t.due_date)
                        }
                        t.time = t.due_date.getTime()
                    }
                    if (!t.date_string && t.time) {
                        delete t.time;
                        return t.due_date = null
                    }
                };
                s.prototype._setNotifications = function(v, u) {
                    var w, t, x;
                    x = window.User.default_reminder;
                    w = window.User.auto_reminder;
                    if (this.DepRemindersModel.featureEnabled() && x !== "no_default" && w !== -1) {
                        if (u && q.has_time(v.due_date)) {
                            t = this.DepRemindersModel.getRemindersByItemId(v.id);
                            t = t.concat(o.reminders);
                            if (t.length > 0) {
                                return
                            }
                            w = window.User.auto_reminder;
                            if (w === void 0) {
                                w = 30
                            }
                            this.DepRemindersModel.add({
                                item_id: v.id,
                                service: x,
                                minute_offset: w
                            });
                            return
                        }
                    }
                    if (this.DepRemindersModel.featureEnabled()) {
                        if (u && !q.has_time(v.due_date)) {
                            return this.DepRemindersModel.removeRelative(v.id)
                        }
                    }
                };
                s.prototype._markLocalRemindersNonProcessed = function(u) {
                    var x, y, w, t, v;
                    x = false;
                    v = this.DepRemindersModel.getRemindersByItemId(u.id);
                    for (w = 0, t = v.length; w < t; w++) {
                        y = v[w];
                        y.lprocessed = false;
                        x = true
                    }
                    if (x) {
                        return this.DepRemindersModel.syncCachedData()
                    }
                };
                s.prototype._markLocalNotesAsNotInHistory = function(u) {
                    var x, y, w, t, v;
                    x = false;
                    v = this.DepNotesModel.getNotes(u.id);
                    for (w = 0, t = v.length; w < t; w++) {
                        y = v[w];
                        y.is_archived = 0
                    }
                    if (x) {
                        return this.DepNotesModel.syncCachedData()
                    }
                };
                s.prototype.getMaxOrder = function(u) {
                    var v, t;
                    v = $last(this.getByProjectId(u));
                    if (v) {
                        t = v.item_order + 1
                    } else {
                        t = 1
                    }
                    return t
                };
                s.prototype.handleTextShortcuts = function(v) {
                    var w, t, u;
                    u = /[ ]*![pP]([1234])|!!([1234])/;
                    t = v.content.match(u);
                    if (t) {
                        w = t[1] || t[2];
                        v.priority = Math.abs(parseInt(w) - 5);
                        v.content = v.content.replace(u, "")
                    }
                    return v
                };
                return s
            })();
            a = function() {
                var s;
                s = j("./.coffee.ProjectsModel.js");
                return s
            };
            window.ItemsModel = new c();
            h.exports = window.ItemsModel
        }, {
            "./.coffee.GarbageCollectorTypes.js": 134,
            "./.coffee.GenericOrderSync.js": 135,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.Reminders.js": 147,
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    138: [
        function(g, d, i) {
            var b, j, a, f, h, c, k = function(l, m) {
                    return function() {
                        return l.apply(m, arguments)
                    }
                };
            a = window.Signals;
            b = g("./.coffee.Storage.js").$storage;
            f = g("./.coffee.SyncEngine.js");
            c = g("./.coffee.UtilModels.js");
            h = g("./.coffee.TemporaryIds.js");
            j = (function() {
                l.prototype.DepItemsModel = null;
                l.prototype.DepQueriesComplex = null;
                l.prototype.re_labels = /(^|\s+)@([^\s,]+)/g;
                l.prototype.max_limit = 500;
                l.prototype.labels = {};

                function l() {
                    this.loadCachedData = k(this.loadCachedData, this);
                    this.syncCachedData = k(this.syncCachedData, this);
                    this.loadData = k(this.loadData, this);
                    this.getLabels = k(this.getLabels, this);
                    this.registerIfNedded = k(this.registerIfNedded, this);
                    this.updateOrdersIndents = k(this.updateOrdersIndents, this);
                    this.update = k(this.update, this);
                    this.deleteLabel = k(this.deleteLabel, this);
                    this.deleteMany = k(this.deleteMany, this);
                    this.add = k(this.add, this);
                    this.resolveTempId = k(this.resolveTempId, this);
                    this.updateLabels = k(this.updateLabels, this);
                    this.getByName = k(this.getByName, this);
                    this.getDataLabels = k(this.getDataLabels, this);
                    this.getById = k(this.getById, this);
                    this.getAll = k(this.getAll, this);
                    this.get = k(this.get, this);
                    this.syncLocalModel = k(this.syncLocalModel, this);
                    a.connect("load_cached_data", (function(m) {
                        return function() {
                            return m.loadData(m.loadCachedData())
                        }
                    })(this));
                    a.connect("clear_local_data", (function(m) {
                        return function() {
                            return m.labels = []
                        }
                    })(this));
                    a.connect("resolve_temp.label", (function(m) {
                        return function(o, n) {
                            return m.resolveTempId(o, n)
                        }
                    })(this))
                }
                l.prototype.syncLocalModel = function(s) {
                    var x, m, u, t, w, y, F, q, p, o, n, z, E, D, C, v, r;
                    if (s.length > 0) {
                        w = this.labels;
                        t = {};
                        for (q = 0, z = s.length; q < z; q++) {
                            x = s[q];
                            t[x.id] = x.id
                        }
                        v = $keys(w);
                        for (p = 0, E = v.length; p < E; p++) {
                            F = v[p];
                            u = w[F];
                            y = "" + u.id;
                            if (t[u.id] || y.indexOf("_") !== -1) {
                                delete w[F]
                            }
                        }
                        for (o = 0, D = s.length; o < D; o++) {
                            m = s[o];
                            w[m.name.toLowerCase()] = m
                        }
                        r = $keys(w);
                        for (n = 0, C = r.length; n < C; n++) {
                            F = r[n];
                            u = w[F];
                            if (u.is_deleted) {
                                delete w[F]
                            }
                        }
                        this.syncCachedData();
                        return a.sendSignal("labels_updated", s)
                    }
                };
                l.prototype.get = function(m) {
                    return this.labels[m]
                };
                l.prototype.getAll = function(o) {
                    var n, q, p, m;
                    if (o == null) {
                        o = false
                    }
                    q = $values(this.labels);
                    if (o) {
                        for (p = 0, m = q.length; p < m; p++) {
                            n = q[p];
                            n.count = this.DepQueriesComplex.getByLabels([n.id], true)
                        }
                        q = q.sort(c.sortByItemOrder)
                    }
                    return q
                };
                l.prototype.getById = function(p) {
                    var n, m, o;
                    p = h.getRealId(p);
                    p = "" + p;
                    o = this.labels;
                    for (m in o) {
                        n = o[m];
                        if ("" + n.id === p) {
                            return n
                        }
                    }
                    return null
                };
                l.prototype.getDataLabels = function(n) {
                    var s, q, r, p, m, o;
                    if (!n.labels) {
                        return []
                    }
                    r = [];
                    o = n.labels;
                    for (p = 0, m = o.length; p < m; p++) {
                        s = o[p];
                        q = this.getById(s);
                        if (q) {
                            r.push("@" + q.name)
                        }
                    }
                    return r
                };
                l.prototype.getByName = function(r, p) {
                    var o, n, m, q;
                    m = [];
                    q = this.labels;
                    for (n in q) {
                        o = q[n];
                        if (n.indexOf(r) !== -1) {
                            m.push(o)
                        }
                        if (m.length >= p) {
                            break
                        }
                    }
                    return m
                };
                l.prototype.updateLabels = function(t, v) {
                    var r, m, q, s, p, n, u, o;
                    if (t.content === void 0) {
                        return
                    }
                    this.registerIfNedded(t);
                    o = this.getLabels(t), r = o[0], p = o[1];
                    m = [];
                    for (n = 0, u = p.length; n < u; n++) {
                        q = p[n];
                        s = this.get(q);
                        if (s) {
                            m.push(s.id)
                        }
                    }
                    t.labels = m;
                    t.content = r;
                    v.labels = m;
                    return v.content = r
                };
                l.prototype.resolveTempId = function(m, z) {
                    var w, y, v, t, q, u, r, p, x, n, s, o;
                    q = null;
                    s = $values(this.labels);
                    for (r = 0, x = s.length; r < x; r++) {
                        t = s[r];
                        if (t.id === m) {
                            q = t;
                            break
                        }
                    }
                    if (q) {
                        q.id = z;
                        v = false;
                        o = this.DepItemsModel.getAll();
                        for (p = 0, n = o.length; p < n; p++) {
                            y = o[p];
                            u = y.labels;
                            if (u.length > 0) {
                                w = $index(m, u);
                                if (w !== -1) {
                                    u.splice(w, 1, z);
                                    v = true
                                }
                            }
                        }
                        if (v) {
                            this.DepItemsModel.syncCachedData()
                        }
                        return this.syncCachedData()
                    }
                };
                l.prototype.normalizeName = function(m) {
                    m = m.replace(/[<>"=#+\s%!?~:]+/g, "_");
                    return m
                };
                l.prototype.add = function(o) {
                    var n, m;
                    if ($keys(this.labels).length >= this.max_limit) {
                        alert(_("For performance reasons you can only add %s labels.").replace("%s", this.max_limit));
                        return
                    }
                    if (o.color === void 0) {
                        o.color = 7
                    }
                    o.name = this.normalizeName(o.name);
                    n = o;
                    this.labels[n.name.toLowerCase()] = n;
                    m = n.id = h.generate("label");
                    f.queueUpdate({
                        type: "label_register",
                        temp_id: m,
                        args: o
                    });
                    this.syncCachedData();
                    return n
                };
                l.prototype.deleteMany = function(o) {
                    var q, p, n, m;
                    m = [];
                    for (p = 0, n = o.length; p < n; p++) {
                        q = o[p];
                        m.push(this.deleteLabel(q))
                    }
                    return m
                };
                l.prototype.deleteLabel = function(n) {
                    var m;
                    m = this.getById(n);
                    if (m) {
                        delete this.labels[m.name.toLowerCase()];
                        f.queueUpdate({
                            type: "label_delete",
                            args: {
                                id: m.id
                            }
                        });
                        return this.syncCachedData()
                    }
                };
                l.prototype.update = function(p, o) {
                    var n, m;
                    if (o.name) {
                        o.name = this.normalizeName(o.name)
                    }
                    n = this.getById(p);
                    if (n) {
                        m = n.name.toLowerCase();
                        o.id = n.id;
                        $update(n, o);
                        if (o.name) {
                            if (this.labels[m]) {
                                delete this.labels[m]
                            }
                            this.labels[o.name.toLowerCase()] = n;
                            n.name = o.name
                        }
                        f.queueUpdate({
                            type: "label_update",
                            args: o
                        });
                        this.syncCachedData()
                    }
                    return n
                };
                l.prototype.updateOrdersIndents = function(p) {
                    var o, q, m, n;
                    m = {};
                    for (q in p) {
                        o = p[q];
                        n = this.getById(q);
                        if (n) {
                            n.item_order = o[0];
                            if (n.id > 0) {
                                m[n.id] = n.item_order
                            }
                        }
                    }
                    if ($keys(m).length > 0) {
                        f.queueUpdate({
                            type: "label_update_orders",
                            args: {
                                id_order_mapping: $serialize(m)
                            }
                        })
                    }
                    return this.syncCachedData()
                };
                l.prototype.registerIfNedded = function(r) {
                    var s, q, m, u, o, t, p, n;
                    p = this.getLabels(r, m = true), u = p[0], q = p[1];
                    n = [];
                    for (o = 0, t = q.length; o < t; o++) {
                        s = q[o];
                        n.push(this.add({
                            name: s
                        }))
                    }
                    return n
                };
                l.prototype.getLabels = function(m, p) {
                    var n, q, o;
                    if (p == null) {
                        p = false
                    }
                    n = m.content;
                    q = [];
                    o = (function(r) {
                        return function(v, t, s) {
                            var u;
                            if (m.labels_to_ignore && m.labels_to_ignore[s]) {
                                return v
                            }
                            s = r.normalizeName(s.toLowerCase());
                            u = r.get(s);
                            if (p) {
                                if (!u) {
                                    q.push(s)
                                }
                            } else {
                                q.push(s)
                            }
                            return ""
                        }
                    })(this);
                    n = n.replace(this.re_labels, o);
                    return [n, q]
                };
                l.prototype.loadData = function(q) {
                    var o, p, n, m;
                    if (q) {
                        this.labels = {};
                        m = [];
                        for (p = 0, n = q.length; p < n; p++) {
                            o = q[p];
                            m.push(this.labels[o.name.toLowerCase()] = o)
                        }
                        return m
                    }
                };
                l.prototype.syncCachedData = function() {
                    return b("Labels").set(this.labels)
                };
                l.prototype.loadCachedData = function() {
                    var o, n, p, m;
                    p = b("Labels").get();
                    if (!p) {
                        return []
                    } else {
                        m = [];
                        for (n in p) {
                            o = p[n];
                            m.push(o)
                        }
                        return m
                    }
                };
                return l
            })();
            d.exports = new j()
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    139: [
        function(g, f, i) {
            var c, n, b, l, h, d, k, a, m, j = function(o, p) {
                    return function() {
                        return o.apply(p, arguments)
                    }
                };
            b = window.Signals;
            c = g("./.coffee.Storage.js").$storage;
            h = g("./.coffee.TemporaryIds.js");
            d = g("./.coffee.UtilModels.js");
            k = g("./.coffee.VersionUpdater.js");
            l = g("./.coffee.SyncData.js");
            n = (function() {
                o.prototype.initial_load = true;

                function o() {
                    this.logout = j(this.logout, this);
                    this.clearLocalData = j(this.clearLocalData, this);
                    this.loadData = j(this.loadData, this);
                    b.connect("syncing_data", (function(p) {
                        return function() {
                            return p.fetched_data_from_server = true
                        }
                    })(this));
                    b.connect("logout", (function(p) {
                        return function() {
                            return p.logout()
                        }
                    })(this))
                }
                o.prototype.loadCachedData = function() {
                    return b.sendSignal("load_cached_data")
                };
                o.prototype.loadData = function(q, t) {
                    var s, r, p;
                    if (c("TimestampS2").get() === null) {
                        this.clearLocalData()
                    }
                    this.loadCachedData();
                    s = false;
                    if (a().getAll().length > 0) {
                        if ($isFunction(t)) {
                            t(true)
                        }
                        r = function(u) {
                            l.cleanLocalModel();
                            k.check(u);
                            return b.sendSignal("garbage_collect.schedule")
                        }
                    } else {
                        r = function(u) {
                            l.cleanLocalModel();
                            k.check(u);
                            b.sendSignal("garbage_collect.schedule");
                            if ($isFunction(t)) {
                                return t(true)
                            }
                        };
                        s = true
                    }
                    p = (function(u) {
                        return function(v, x) {
                            var w;
                            if (d.checkIfErrorIsLogout(v, x)) {
                                return
                            }
                            if (s) {
                                u.clearLocalData();
                                w = _("Could not sync with Todoist. Please try again later.");
                                window.oldAlert(w);
                                return window.location.reload()
                            }
                        }
                    })(this);
                    return m().sync({
                        onSuccess: r,
                        onError: p
                    }, true, true)
                };
                o.prototype.clearLocalData = function() {
                    window.localStorage.clear();
                    return b.sendSignal("clear_local_data")
                };
                o.prototype.logout = function(q) {
                    var p;
                    if (q == null) {
                        q = true
                    }
                    this.clearLocalData();
                    if (q) {
                        p = "/Users/logout?csrf=" + ($cookie.get("csrf"));
                        if (window.IS_MINI || window.FLUID_MINI) {
                            p += "&mini=1"
                        }
                        return window.location = p
                    }
                };
                return o
            })();
            a = function() {
                var o;
                o = g("./.coffee.ProjectsModel.js");
                return o
            };
            m = function() {
                var o;
                o = g("./.coffee.SyncEngine.js");
                return o
            };
            f.exports = new n()
        }, {
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncData.js": 151,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157,
            "./.coffee.VersionUpdater.js": 158
        }
    ],
    140: [
        function(d, a, g) {
            var h, l, c, i, f, k, b, j = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            h = window.DateUtils;
            l = d("./.coffee.ItemsModel.js");
            k = d("./.coffee.Reminders.js").RemindersModel;
            f = d("./.coffee.ProjectsModel.js");
            i = d("./.coffee.NotesModel.js");
            b = d("./.coffee.SyncEngine.js");
            c = (function() {
                function m() {
                    this.clear = j(this.clear, this);
                    this.restoreCustom = j(this.restoreCustom, this);
                    this.restore = j(this.restore, this);
                    this.markCheckpoint = j(this.markCheckpoint, this);
                    this.getCurrentCheckpoint = j(this.getCurrentCheckpoint, this)
                }
                m.prototype.getCurrentCheckpoint = function() {
                    return this.currentCheckpoint
                };
                m.prototype.markCheckpoint = function(u, n) {
                    var w, q, x, t, p, s, r, v, o;
                    w = {};
                    w.items = [];
                    for (s = 0, v = u.length; s < v; s++) {
                        x = u[s];
                        q = {};
                        $update(q, x);
                        w.items.push(q)
                    }
                    if (n === "delete") {
                        t = [];
                        p = [];
                        for (r = 0, o = u.length; r < o; r++) {
                            x = u[r];
                            t = t.concat(i.getNotes(x.id));
                            p = p.concat(k.getRemindersByItemId(x.id))
                        }
                        w.notes = t;
                        w.reminders = p
                    }
                    w.intent = n;
                    this.currentCheckpoint = w;
                    return w
                };
                m.prototype.restore = function() {
                    return this.restoreCustom(this.currentCheckpoint)
                };
                m.prototype.restoreCustom = function(ab) {
                    var K, n, O, G, M, Q, N, ae, ad, ac, aa, L, y, w, u, t, s, r, q, p, o, Z, Y, X, U, T, S, R, J, H, F, E, D, C, z, x, v, W, V;
                    if (ab.intent === "postpone") {
                        R = ab.items;
                        W = [];
                        for (ae = 0, L = R.length; ae < L; ae++) {
                            O = R[ae];
                            G = l.getById(O.id);
                            if (G) {
                                l.update(G.id, {
                                    due_date: O.due_date,
                                    date_string: O.date_string,
                                    day_order: O.day_order
                                });
                                W.push(l.syncCachedData())
                            } else {
                                W.push(void 0)
                            }
                        }
                        return W
                    } else {
                        if (ab.intent === "complete_recurring") {
                            J = ab.items;
                            V = [];
                            for (ad = 0, y = J.length; ad < y; ad++) {
                                N = J[ad];
                                G = l.getById(N.id);
                                if (G) {
                                    G.due_date = N.due_date;
                                    G.time = N.time;
                                    G.checked = 0;
                                    G.day_order = N.day_order;
                                    l.clearAllCache();
                                    l.syncCachedData()
                                }
                                V.push(b.queueUpdate({
                                    type: "item_update_date_complete",
                                    args: {
                                        id: N.id,
                                        new_date_utc: h.jsonFormat(N.due_date),
                                        date_string: N.date_string,
                                        is_forward: 0
                                    }
                                }))
                            }
                            return V
                        } else {
                            if (ab.intent === "complete_non_recurring") {
                                if (ab.items.length > 0) {
                                    K = {};
                                    H = ab.items;
                                    for (ac = 0, w = H.length; ac < w; ac++) {
                                        N = H[ac];
                                        K[N.id] = [0, N.checked, N.item_order, N.indent];
                                        G = l.getById(N.id);
                                        if (G) {
                                            G.in_history = 0;
                                            G.checked = N.checked;
                                            G.item_order = N.item_order;
                                            G.indent = N.indent
                                        } else {
                                            l._addToModel(N, false, false)
                                        }
                                    }
                                    b.queueUpdate({
                                        type: "item_uncomplete_update_meta",
                                        args: {
                                            project_id: ab.items[0].project_id,
                                            ids_to_metas: $serialize(K)
                                        }
                                    });
                                    F = ab.items;
                                    for (aa = 0, u = F.length; aa < u; aa++) {
                                        O = F[aa];
                                        E = i.getNotes(O.id);
                                        for (Z = 0, t = E.length; Z < t; Z++) {
                                            M = E[Z];
                                            M.is_archived = 0
                                        }
                                    }
                                    l.clearAllCache();
                                    return l.syncCachedData()
                                }
                            } else {
                                if (ab.intent === "reorder_project_editor") {
                                    n = {};
                                    D = ab.items;
                                    for (Y = 0, s = D.length; Y < s; Y++) {
                                        O = D[Y];
                                        G = l.getById(O.id);
                                        if (G) {
                                            n[G.id] = [O.item_order, O.indent]
                                        }
                                    }
                                    return l.updateOrdersIndents(n)
                                } else {
                                    if (ab.intent === "reorder_project_list") {
                                        n = {};
                                        C = ab.items;
                                        for (X = 0, r = C.length; X < r; X++) {
                                            O = C[X];
                                            G = f.get(O.id);
                                            if (G) {
                                                n[G.id] = [O.item_order, O.indent]
                                            }
                                        }
                                        return f.updateOrdersIndents(n)
                                    } else {
                                        z = ab.notes;
                                        for (U = 0, q = z.length; U < q; U++) {
                                            M = z[U];
                                            M.is_deleted = false;
                                            i._addToModel(M, false)
                                        }
                                        i.syncCachedData();
                                        x = ab.reminders;
                                        for (T = 0, p = x.length; T < p; T++) {
                                            Q = x[T];
                                            Q.is_deleted = false;
                                            k._addToModel(Q, false)
                                        }
                                        k.syncCachedData();
                                        v = ab.items;
                                        for (S = 0, o = v.length; S < o; S++) {
                                            O = v[S];
                                            l._addToModel(O, false);
                                            l.update(O.id, {
                                                is_deleted: 0
                                            }, true)
                                        }
                                        return l.syncCachedData()
                                    }
                                }
                            }
                        }
                    }
                };
                m.prototype.clear = function() {
                    return this.currentCheckpoint = {
                        items: [],
                        notes: [],
                        reminders: [],
                        intent: null
                    }
                };
                return m
            })();
            a.exports = new c()
        }, {
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.NotesModel.js": 141,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.Reminders.js": 147,
            "./.coffee.SyncEngine.js": 152
        }
    ],
    141: [
        function(i, f, k) {
            var b, d, g, o, n, l, a, h, j, c, m = function(p, q) {
                    return function() {
                        return p.apply(q, arguments)
                    }
                };
            n = window.MediaParser;
            a = window.Signals;
            d = window.ElementStore;
            b = i("./.coffee.Storage.js").$storage;
            c = i("./.coffee.UtilModels.js");
            h = i("./.coffee.SyncEngine.js");
            j = i("./.coffee.TemporaryIds.js");
            g = i("./.coffee.GarbageCollectorTypes.js");
            o = i("./.coffee.ItemsModel.js");
            l = (function() {
                p.prototype.model_data = {};
                p.prototype.cache = {};

                function p() {
                    this.parseNoteMedia = m(this.parseNoteMedia, this);
                    this.clearCache = m(this.clearCache, this);
                    this.loadCachedData = m(this.loadCachedData, this);
                    this.syncCachedData = m(this.syncCachedData, this);
                    this.updateNote = m(this.updateNote, this);
                    this.deleteNote = m(this.deleteNote, this);
                    this._addToModel = m(this._addToModel, this);
                    this.addNote = m(this.addNote, this);
                    this.resolveTempId = m(this.resolveTempId, this);
                    this.getNotes = m(this.getNotes, this);
                    this.ajaxGetNotesData = m(this.ajaxGetNotesData, this);
                    this.syncLocalModel = m(this.syncLocalModel, this);
                    a.connect("load_cached_data", (function(q) {
                        return function() {
                            return q.loadCachedData()
                        }
                    })(this));
                    a.connect("resolve_temp.note", (function(q) {
                        return function(s, r) {
                            return q.resolveTempId(s, r)
                        }
                    })(this))
                }
                p.prototype.syncLocalModel = function(w, v) {
                    var s, t, r, u, q;
                    if (w.length > 0) {
                        r = [];
                        for (u = 0, q = w.length; u < q; u++) {
                            t = w[u];
                            if (!t) {
                                continue
                            } else {
                                r.push(t)
                            } if (t.file_attachment) {
                                s = t.file_attachment.file_url;
                                if (s) {
                                    t.content = $strip(t.content.replace(s, ""))
                                }
                            }
                            if (t.is_archived) {
                                a.sendSignal("garbage_collect.clean", g.type_note, t.id)
                            } else {
                                v[t.project_id] = t.project_id
                            }
                        }
                        c.syncLocalModel(r, this.model_data);
                        a.sendSignal("notes_updated", r);
                        this.parseNoteMedia(r);
                        return this.syncCachedData()
                    }
                };
                p.prototype.ajaxGetNotesData = function(s, r, u, q) {
                    var t;
                    if (r == null) {
                        r = 0
                    }
                    s = j.getRealId(s);
                    t = $requestJSON("/API/v6/get_item");
                    t.offline_message = true;
                    t.addCallback(u);
                    t.addErrback(q);
                    return t.sendReq({
                        token: window.User.token,
                        item_id: s,
                        sync_id: r,
                        all_data: 1
                    })
                };
                p.prototype.getNotes = function(q) {
                    var u, t, s, r, v;
                    q = j.getRealId(q);
                    u = this.cache[q];
                    if (u) {
                        return u
                    }
                    r = [];
                    v = this.model_data;
                    for (s in v) {
                        t = v[s];
                        if (t.item_id === q) {
                            r.push(t)
                        }
                    }
                    r.sort(function(x, w) {
                        var z, D, y, C;
                        z = x.posted;
                        y = w.posted;
                        if ($isString(z)) {
                            z = new Date(z)
                        }
                        if ($isString(y)) {
                            y = new Date(y)
                        }
                        D = z.getTime();
                        C = y.getTime();
                        if (D === C) {
                            return x.id - w.id
                        } else {
                            return z.getTime() - y.getTime()
                        }
                    });
                    this.cache[q] = r;
                    return r
                };
                p.prototype.resolveTempId = function(r, q) {
                    var s;
                    s = this.model_data[r];
                    if (s) {
                        delete this.model_data[r];
                        s.id = q;
                        this.model_data[s.id] = s;
                        if (j.isTemporary(s.item_id)) {
                            s.item_id = j.getRealId(s.item_id)
                        }
                        this.clearCache(s.item_id);
                        return this.syncCachedData()
                    }
                };
                p.prototype.addNote = function(y, v, r, s) {
                    var w, u, t, x, q;
                    if (r == null) {
                        r = null
                    }
                    if (s == null) {
                        s = null
                    }
                    t = window.User.id;
                    w = {
                        item_id: y,
                        content: v,
                        posted_uid: t
                    };
                    if (r) {
                        w.uids_to_notify = r
                    }
                    if (s && s.file_server_info) {
                        w.file_attachment = s.file_server_info
                    }
                    x = {};
                    x.posted = new Date();
                    $update(x, w);
                    q = x.id = j.generate("note");
                    this.model_data[x.id] = x;
                    u = this.getNotes(y);
                    u.push(x);
                    this.clearCache(y);
                    h.queueUpdate({
                        type: "note_add",
                        temp_id: q,
                        args: w
                    });
                    this.parseNoteMedia([x]);
                    return x
                };
                p.prototype._addToModel = function(q, r) {
                    if (r == null) {
                        r = true
                    }
                    this.model_data[q.id] = q;
                    if (r) {
                        return this.clearCache(q.item_id)
                    }
                };
                p.prototype.deleteNote = function(u, v) {
                    var q, t, s, r;
                    u = j.getRealId(u);
                    v = j.getRealId(v);
                    r = this.model_data[v];
                    if (r) {
                        s = d.get(r, "file");
                        if (s) {
                            s.reset();
                            d.remove(s)
                        }
                    }
                    h.queueUpdate({
                        type: "note_delete",
                        args: {
                            item_id: u,
                            note_id: v
                        }
                    });
                    q = this.getNotes(u);
                    t = $index(v, q, function(w) {
                        return w.id === v
                    });
                    if (t !== -1) {
                        q.splice(t, 1)
                    }
                    if (this.model_data[v]) {
                        delete this.model_data[v]
                    }
                    return this.clearCache(u)
                };
                p.prototype.updateNote = function(s, r, u, t) {
                    var q, v;
                    if (u == null) {
                        u = null
                    }
                    if (t == null) {
                        t = null
                    }
                    s = j.getRealId(s);
                    v = this.model_data[s];
                    if (v && u !== null) {
                        v.content = u
                    }
                    q = {
                        note_id: s
                    };
                    if (u !== null) {
                        q.content = u
                    }
                    if (t !== null) {
                        q.file_attachment = t
                    }
                    h.queueUpdate({
                        type: "note_update",
                        args: q
                    });
                    if (v) {
                        this.parseNoteMedia([v])
                    }
                    $update(v, q);
                    return this.clearCache(r)
                };
                p.prototype.syncCachedData = function() {
                    b("Notes").set(this.model_data);
                    return this.cache = {}
                };
                p.prototype.loadCachedData = function() {
                    var q;
                    q = b("Notes").get();
                    if (q) {
                        return this.model_data = q
                    } else {
                        return this.model_data = {}
                    }
                };
                p.prototype.clearCache = function(q) {
                    var r;
                    r = o.getById(q);
                    if (r) {
                        o.clearCache(r.project_id);
                        o.syncCachedData()
                    }
                    return this.syncCachedData()
                };
                p.prototype.parseNoteMedia = function(v) {
                    var q, r, s, y, w, u, t, x;
                    if (!v) {
                        return
                    }
                    s = (function(z) {
                        return function(D, E) {
                            var C;
                            if (E) {
                                D.link_data = E;
                                C = z.model_data[D.id];
                                if (C) {
                                    return C.link_data = E
                                }
                            }
                        }
                    })(this);
                    q = (function(z) {
                        return function() {
                            z.syncCachedData();
                            return a.sendSignal("notes_updated", v)
                        }
                    })(this);
                    u = [];
                    for (t = 0, x = v.length; t < x; t++) {
                        w = v[t];
                        y = n.getMediaURLs(w.content);
                        if (y && y.length > 0) {
                            r = $partial(s, w);
                            u.push([y.join(" "), r])
                        }
                    }
                    return n.parse(u, q)
                };
                return p
            })();
            window.NotesModel = new l();
            f.exports = window.NotesModel
        }, {
            "./.coffee.GarbageCollectorTypes.js": 134,
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    142: [
        function(f, c, h) {
            var b, j, a, d, g, i = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            a = window.Signals;
            b = f("./.coffee.Storage.js").$storage;
            d = f("./.coffee.SyncEngine.js");
            g = f("./.coffee.SyncEngineExt.js");
            j = (function() {
                k.prototype.noti_model = {};
                k.prototype.last_read_seq_no = 0;
                k.prototype.initial_sync = true;
                k.prototype.note_notifications_unread = {};

                function k() {
                    this.loadCachedData = i(this.loadCachedData, this);
                    this.syncCachedData = i(this.syncCachedData, this);
                    this.doInvitationGeneric = i(this.doInvitationGeneric, this);
                    this.rejectInvitation = i(this.rejectInvitation, this);
                    this.acceptInvitation = i(this.acceptInvitation, this);
                    this.doInvitationGenericBiz = i(this.doInvitationGenericBiz, this);
                    this.rejectInvitationBiz = i(this.rejectInvitationBiz, this);
                    this.acceptInvitationBiz = i(this.acceptInvitationBiz, this);
                    this.markAsRead = i(this.markAsRead, this);
                    this.getLastRead = i(this.getLastRead, this);
                    this.syncLastRead = i(this.syncLastRead, this);
                    this.markNotesAsRead = i(this.markNotesAsRead, this);
                    this.getUnreadCount = i(this.getUnreadCount, this);
                    this.getNotifications = i(this.getNotifications, this);
                    this.syncLocalModel = i(this.syncLocalModel, this);
                    a.connect("load_cached_data", (function(l) {
                        return function() {
                            return l.loadCachedData()
                        }
                    })(this))
                }
                k.prototype.syncLocalModel = function(u) {
                    var r, s, q, w, x, v, m, o, n, t, l, p;
                    x = this.noti_model;
                    v = true;
                    if (this.initial_sync) {
                        v = false
                    }
                    if (g.isInitialSync()) {
                        v = false
                    }
                    for (o = 0, t = u.length; o < t; o++) {
                        q = u[o];
                        w = q.notification_key;
                        if (w.indexOf("note_added") !== -1) {
                            this.note_notifications_unread[q.note_id] = q
                        }
                        x[w] = q;
                        if (q.is_deleted) {
                            r = x[w];
                            if (r) {
                                delete x[w]
                            }
                        } else {
                            if (v) {
                                a.sendSignal("notify", q)
                            }
                        }
                    }
                    m = this.getNotifications();
                    if (m.length > 120) {
                        p = m.slice(120);
                        for (n = 0, l = p.length; n < l; n++) {
                            s = p[n];
                            if (x[s.notification_key]) {
                                delete x[s.notification_key]
                            }
                        }
                    }
                    this.syncCachedData();
                    return this.initial_sync = false
                };
                k.prototype.getNotifications = function() {
                    var l;
                    l = $values(this.noti_model);
                    l = l.sort(function(n, m) {
                        return m.seq_no - n.seq_no
                    });
                    return l
                };
                k.prototype.getUnreadCount = function() {
                    var o, n, m, q, l, p;
                    n = this.last_read_seq_no;
                    o = 0;
                    p = this.getNotifications();
                    for (q = 0, l = p.length; q < l; q++) {
                        m = p[q];
                        if (m.seq_no > n) {
                            o += 1
                        }
                    }
                    return o
                };
                k.prototype.markNotesAsRead = function(n) {
                    var o, q, p, m, l;
                    l = [];
                    for (p = 0, m = n.length; p < m; p++) {
                        o = n[p];
                        q = this.note_notifications_unread[o.id];
                        if (q) {
                            delete this.note_notifications_unread[o.id];
                            l.push(a.sendSignal("noti_updated", q))
                        } else {
                            l.push(void 0)
                        }
                    }
                    return l
                };
                k.prototype.isNoteUnread = function(l) {
                    return this.note_notifications_unread[l] !== void 0
                };
                k.prototype.syncLastRead = function(l) {
                    this.last_read_seq_no = l;
                    this.syncCachedData();
                    return a.sendSignal("notifications_updated")
                };
                k.prototype.getLastRead = function() {
                    return this.last_read_seq_no
                };
                k.prototype.markAsRead = function(l) {
                    if (l.seq_no !== this.last_read_seq_no) {
                        this.last_read_seq_no = l.seq_no;
                        this.syncCachedData();
                        return d.queueUpdate({
                            type: "live_notifications_mark_as_read",
                            args: {
                                seq_no: this.last_read_seq_no
                            }
                        })
                    }
                };
                k.prototype.acceptInvitationBiz = function(n, o, l) {
                    var m;
                    m = "biz_accept_invitation";
                    return this.doInvitationGenericBiz(m, n, o, l)
                };
                k.prototype.rejectInvitationBiz = function(n, o, l) {
                    var m;
                    m = "biz_reject_invitation";
                    return this.doInvitationGenericBiz(m, n, o, l)
                };
                k.prototype.doInvitationGenericBiz = function(o, q, r, m) {
                    var n, l, p;
                    p = function() {
                        if (r) {
                            return r()
                        }
                    };
                    n = {
                        onSuccess: p,
                        onError: m
                    };
                    d.queueUpdate({
                        type: o,
                        args: {
                            invitation_id: q.invitation_id,
                            invitation_secret: q.invitation_secret
                        }
                    });
                    d.sync(n, true);
                    l = this.noti_model[q.notification_key];
                    if (l) {
                        delete this.noti_model[q.notification_key];
                        return this.syncCachedData()
                    }
                };
                k.prototype.acceptInvitation = function(n, o, l) {
                    var m;
                    m = "accept_invitation";
                    return this.doInvitationGeneric(m, n, o, l)
                };
                k.prototype.rejectInvitation = function(o, p, m) {
                    var n, l;
                    n = "reject_invitation";
                    this.doInvitationGeneric(n, o, p, m);
                    l = this.noti_model[o.notification_key];
                    if (l) {
                        delete this.noti_model[o.notification_key];
                        return this.syncCachedData()
                    }
                };
                k.prototype.doInvitationGeneric = function(n, p, q, l) {
                    var m, o;
                    o = function() {
                        if (q) {
                            return q()
                        }
                    };
                    m = {
                        onSuccess: o,
                        onError: l
                    };
                    d.queueUpdate({
                        type: n,
                        args: {
                            invitation_id: p.invitation_id,
                            invitation_secret: p.invitation_secret
                        }
                    });
                    return d.sync(m, true)
                };
                k.prototype.syncCachedData = function() {
                    b("Notifications").set(this.noti_model);
                    return b("NotificationsLastRead").set(this.last_read_seq_no)
                };
                k.prototype.loadCachedData = function() {
                    var m, l;
                    l = b("Notifications").get();
                    if (l) {
                        this.noti_model = l
                    } else {
                        this.noti_model = {}
                    }
                    m = b("NotificationsLastRead").get();
                    if (m) {
                        return this.last_read_seq_no = m
                    } else {
                        return this.last_read_seq_no = 0
                    }
                };
                return k
            })();
            c.exports = new j()
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.SyncEngineExt.js": 153
        }
    ],
    143: [
        function(h, d, m) {
            var b, l, f, j, i, a, g, k, c, n = function(o, p) {
                    return function() {
                        return o.apply(p, arguments)
                    }
                };
            a = window.Signals;
            b = h("./.coffee.Storage.js").$storage;
            k = h("./.coffee.TemporaryIds.js");
            g = h("./.coffee.SyncEngine.js");
            c = h("./.coffee.UtilModels.js");
            j = h("./.coffee.GenericOrderSync.js");
            f = h("./.coffee.GarbageCollectorTypes.js");
            l = h("./.coffee.Collaborators.js");
            i = (function() {
                o.prototype.model_loaded = false;
                o.prototype.model_data = {};
                o.prototype.temporary_projects = {};

                function o() {
                    this.loadCachedData = n(this.loadCachedData, this);
                    this.syncCachedData = n(this.syncCachedData, this);
                    this.unarchive = n(this.unarchive, this);
                    this.archive = n(this.archive, this);
                    this.updateCached = n(this.updateCached, this);
                    this.updateOrdersIndents = n(this.updateOrdersIndents, this);
                    this.updateCount = n(this.updateCount, this);
                    this.update = n(this.update, this);
                    this.deleteFromModel = n(this.deleteFromModel, this);
                    this.deleteProjects = n(this.deleteProjects, this);
                    this.deleteMany = n(this.deleteMany, this);
                    this.add = n(this.add, this);
                    this.resolveTempId = n(this.resolveTempId, this);
                    this.loadData = n(this.loadData, this);
                    this.getByRegExp = n(this.getByRegExp, this);
                    this.getByName = n(this.getByName, this);
                    this.getParent = n(this.getParent, this);
                    this.getChildren = n(this.getChildren, this);
                    this.getAll = n(this.getAll, this);
                    this.getIds = n(this.getIds, this);
                    this.getTeamInbox = n(this.getTeamInbox, this);
                    this.getInbox = n(this.getInbox, this);
                    this.get = n(this.get, this);
                    this.syncLocalModel = n(this.syncLocalModel, this);
                    this.project_order_indent_syncer = new j("project_update_orders_indents", "ids_to_orders_indents");
                    a.connect("load_cached_data", (function(p) {
                        return function() {
                            return p.loadData(p.loadCachedData())
                        }
                    })(this));
                    a.connect("resolve_temp.project", (function(p) {
                        return function(r, q) {
                            p.resolveTempId(r, q);
                            return p.project_order_indent_syncer.resolveTempId(r, q)
                        }
                    })(this))
                }
                o.prototype.syncLocalModel = function(E, v) {
                    var G, s, u, F, z, y, w, t, D, r, q, p, C, x;
                    if (E.length > 0) {
                        G = {};
                        C = $values(this.model_data);
                        for (z = 0, D = C.length; z < D; z++) {
                            F = C[z];
                            G[F.id] = F.cache_count
                        }
                        u = this.project_order_indent_syncer.pending_updates;
                        for (y = 0, r = E.length; y < r; y++) {
                            F = E[y];
                            s = u[F.id];
                            if (s) {
                                F.item_order = s[0];
                                F.indent = s[1]
                            }
                        }
                        c.syncLocalModel(E, this.model_data);
                        x = $values(this.model_data);
                        for (w = 0, q = x.length; w < q; w++) {
                            F = x[w];
                            if (G[F.id]) {
                                F.cache_count = G[F.id]
                            }
                            if (F.shared === false) {
                                l.cleanProjectState(F.id)
                            }
                            if (F.is_archived || F.is_deleted) {
                                a.sendSignal("garbage_collect.clean", f.type_project, F.id)
                            }
                        }
                        for (t = 0, p = E.length; t < p; t++) {
                            F = E[t];
                            v[F.id] = F.id
                        }
                        return this.syncCachedData()
                    }
                };
                o.prototype.get = function(p) {
                    return this.model_data[p]
                };
                o.prototype.getInbox = function() {
                    return this.model_data[window.User.inbox_project]
                };
                o.prototype.getTeamInbox = function() {
                    return this.model_data[window.User.team_inbox]
                };
                o.prototype.getIds = function() {
                    return $keys(this.model_data)
                };
                o.prototype.getAll = function() {
                    var r, q, p;
                    p = (function() {
                        var t, s;
                        t = this.model_data;
                        s = [];
                        for (r in t) {
                            q = t[r];
                            s.push(q)
                        }
                        return s
                    }).call(this);
                    p.sort(c.sortByItemOrder);
                    return p
                };
                o.prototype.getChildren = function(q, r) {
                    var p;
                    if (r == null) {
                        r = false
                    }
                    p = this.getAll();
                    return c.getChildren(p, q, r)
                };
                o.prototype.getParent = function(q) {
                    var p;
                    p = this.getAll();
                    return c.getParent(p, q)
                };
                o.prototype.getByName = function(w, y) {
                    var z, q, x, s, p, D, v, t, C, u;
                    v = [];
                    u = this.model_data;
                    for (x in u) {
                        s = u[x];
                        q = s.name.toLowerCase();
                        z = q.indexOf(w);
                        if (z !== -1) {
                            v.push([z, s])
                        }
                    }
                    v.sort(function(E, r) {
                        return E[0] - r[0]
                    });
                    D = [];
                    for (t = 0, C = v.length; t < C; t++) {
                        p = v[t];
                        D.push(p[1]);
                        if (D.length > y) {
                            break
                        }
                    }
                    return D
                };
                o.prototype.getByRegExp = function(w) {
                    var p, r, q, x, z, s, C, u, y, v, t;
                    C = [];
                    z = {};
                    p = function(D) {
                        if (!z[D.id]) {
                            C.push(D);
                            return z[D.id] = true
                        }
                    };
                    v = this.model_data;
                    for (x in v) {
                        s = v[x];
                        q = s.name;
                        if (q && q.match(w)) {
                            p(s);
                            t = this.getChildren(s);
                            for (u = 0, y = t.length; u < y; u++) {
                                r = t[u];
                                p(r)
                            }
                        }
                    }
                    return C
                };
                o.prototype.loadData = function(r) {
                    var t, q, s, p;
                    q = window.User && window.User.team_inbox;
                    for (s = 0, p = r.length; s < p; s++) {
                        t = r[s];
                        this.model_data[t.id] = t;
                        if (t.inbox_project) {
                            if (q) {
                                t.name = _("My Inbox")
                            } else {
                                t.name = _("Inbox")
                            }
                        }
                        if (t.team_inbox) {
                            t.name = _("Team Inbox")
                        }
                        t.name = $strip(t.name.replace(/^\*\s+/, ""))
                    }
                    this.project_order_indent_syncer.loadData();
                    this.syncCachedData();
                    return this.model_loaded = true
                };
                o.prototype.resolveTempId = function(q, p) {
                    var r;
                    r = this.model_data[q];
                    if (r) {
                        r.id = p;
                        this.model_data[r.id] = r;
                        delete this.model_data[q];
                        return this.syncCachedData()
                    }
                };
                o.prototype.normalizeName = function(p) {
                    p = p.replace(/[<>"=#+]+/g, "_");
                    return p
                };
                o.prototype.add = function(r) {
                    var s, q, t, p;
                    t = {
                        user_id: window.User.id,
                        color: 1,
                        collapsed: 0,
                        indent: r.indent || 1,
                        cache_count: 0
                    };
                    r.name = this.normalizeName(r.name);
                    s = this.getAll();
                    if (window.User.is_premium) {
                        q = 201
                    } else {
                        q = 81
                    } if (s.length >= q) {
                        alert(_("For performance reasons you can only add %s projects. Please archive or delete some of your finished projects.").replace("%s", q));
                        return
                    }
                    if (s.length > 0) {
                        t.item_order = $last(s).item_order + 1
                    } else {
                        t.item_order = 1
                    }
                    $update(t, r);
                    p = t.id = k.generate("project");
                    if (this.project_order_indent_syncer.hasUnfinished()) {
                        this.project_order_indent_syncer.commit()
                    }
                    g.queueUpdate({
                        type: "project_add",
                        temp_id: p,
                        args: r
                    });
                    this.model_data[t.id] = t;
                    this.syncCachedData();
                    return t
                };
                o.prototype.deleteMany = function(p) {
                    return this.deleteProjects(p)
                };
                o.prototype.deleteProjects = function(q) {
                    var s, r, p;
                    g.queueUpdate({
                        type: "project_delete",
                        args: {
                            ids: q
                        }
                    });
                    for (r = 0, p = q.length; r < p; r++) {
                        s = q[r];
                        this.deleteFromModel(s, false)
                    }
                    a.sendSignal("sync_data.items");
                    return this.syncCachedData()
                };
                o.prototype.deleteFromModel = function(q, p) {
                    if (p == null) {
                        p = true
                    }
                    if (this.model_data[q]) {
                        delete this.model_data[q]
                    }
                    a.sendSignal("garbage_collect.clean", f.type_project, q, true);
                    if (p) {
                        return this.syncCachedData()
                    }
                };
                o.prototype.update = function(r, p) {
                    var q;
                    q = this.get(r);
                    if (q) {
                        if (p.name) {
                            p.name = this.normalizeName(p.name)
                        }
                        $update(q, p);
                        p.id = q.id;
                        g.queueUpdate({
                            type: "project_update",
                            args: p
                        });
                        if (p.indent || p.item_order) {
                            this.project_order_indent_syncer.updateIfFound(p.id, [q.item_order, q.indent])
                        }
                        if (p.name) {
                            a.sendSignal("project.name.changed", q)
                        }
                        this.syncCachedData();
                        return q
                    }
                };
                o.prototype.updateCount = function(q) {
                    var p;
                    p = this.get(q);
                    if (p) {
                        a.sendSignal("update_project_count", p);
                        return this.syncCachedData()
                    }
                };
                o.prototype.updateOrdersIndents = function(s) {
                    var r, p, t, q;
                    p = false;
                    for (t in s) {
                        r = s[t];
                        q = this.model_data[t];
                        if (q) {
                            q.item_order = r[0];
                            q.indent = r[1];
                            p = true
                        }
                    }
                    if (p) {
                        this.project_order_indent_syncer.update(s);
                        return this.syncCachedData()
                    }
                };
                o.prototype.updateCached = function(q, p) {
                    var r;
                    q.id = k.getRealId(q.id);
                    r = this.get(q.id);
                    if (r) {
                        $update(r, p)
                    }
                    return $update(q, p)
                };
                o.prototype.archive = function(q) {
                    var u, t, s, p, r;
                    t = this.get(q);
                    if (t) {
                        t.is_archived = true;
                        a.sendSignal("garbage_collect.clean", f.type_project, t.id);
                        g.queueUpdate({
                            type: "project_archive",
                            args: {
                                id: q
                            }
                        });
                        r = this.getChildren(t, true);
                        for (s = 0, p = r.length; s < p; s++) {
                            u = r[s];
                            this.deleteFromModel(u.id, false)
                        }
                        a.sendSignal("sync_data.items");
                        return this.syncCachedData()
                    }
                };
                o.prototype.unarchive = function(p) {
                    var q;
                    q = this.get(p);
                    if (q) {
                        q.is_archived = false
                    }
                    return g.queueUpdate({
                        type: "project_unarchive",
                        args: {
                            id: p
                        }
                    })
                };
                o.prototype.syncCachedData = function() {
                    return b("Projects").set(this.model_data)
                };
                o.prototype.loadCachedData = function() {
                    var p;
                    p = b("Projects").get();
                    if (!p) {
                        return []
                    } else {
                        return $values(p)
                    }
                };
                return o
            })();
            d.exports = new i()
        }, {
            "./.coffee.Collaborators.js": 130,
            "./.coffee.GarbageCollectorTypes.js": 134,
            "./.coffee.GenericOrderSync.js": 135,
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    144: [
        function(c, b, g) {
            var a, k, h, d, l, j, f, i = function(m, n) {
                    return function() {
                        return m.apply(n, arguments)
                    }
                };
            f = c("./.coffee.TemporaryIds.js");
            a = c("./.coffee.DayOrders.js");
            k = c("./.coffee.ItemsModel.js");
            d = c("./.coffee.ProjectsModel.js");
            h = c("./.coffee.LabelsModel.js");
            j = c("./.coffee.QueriesItems.js");
            l = (function() {
                function m() {
                    this.query = i(this.query, this)
                }
                m.prototype.query = function(q, t) {
                    var p, s, n, r, o;
                    n = [];
                    if (q.length === 0 && t.length > 0) {
                        n.push({
                            type: "label",
                            data: this.getByLabels(t)
                        })
                    } else {
                        for (r = 0, o = q.length; r < o; r++) {
                            s = q[r];
                            p = {};
                            if (s.raw) {
                                p.query = p.query_query
                            }
                            p.type = s.type;
                            if (s.type === "overdue") {
                                p.data = j.getOverdue()
                            } else {
                                if (s.type === "date") {
                                    p.date = s.query_data;
                                    p.data = j.getByDate(p.date);
                                    p.data = a.annotate(p.data)
                                } else {
                                    if (s.type === "priority") {
                                        p.priority = s.query_data;
                                        p.data = this.getByPriority(s.query_data)
                                    } else {
                                        if (s.type === "no date") {
                                            p.data = this.getNoDueDate()
                                        } else {
                                            if (s.type === "viewall") {
                                                p.data = this.getAllByProject()
                                            } else {
                                                if (s.type === "labels") {
                                                    p.data = h.getAll(true)
                                                }
                                            }
                                        }
                                    }
                                }
                            } if (t.length > 0) {
                                p.data = this.filterByLabels(p.data, t)
                            }
                            n.push(p)
                        }
                    }
                    return n
                };
                m.prototype.getByPriority = function(p) {
                    var q, n, s, o, r;
                    p = 5 - p;
                    n = [];
                    r = k.getAllOwn();
                    for (s = 0, o = r.length; s < o; s++) {
                        q = r[s];
                        if (q.priority === p) {
                            n.push(q)
                        }
                    }
                    return n
                };
                m.prototype.getByLabels = function(q, u) {
                    var o, w, p, x, s, r, v, n, t;
                    if (u == null) {
                        u = false
                    }
                    if (u) {
                        x = 0
                    } else {
                        x = []
                    }
                    t = k.getAllOwn();
                    for (s = 0, v = t.length; s < v; s++) {
                        w = t[s];
                        o = true;
                        for (r = 0, n = q.length; r < n; r++) {
                            p = q[r];
                            if (!$isIn(p, f.getRealIds(w.labels))) {
                                o = false;
                                break
                            }
                        }
                        if (o) {
                            if (u) {
                                x += 1
                            } else {
                                x.push(w)
                            }
                        }
                    }
                    return x
                };
                m.prototype.getAllByProject = function() {
                    var p, s, n, r, o, q;
                    n = [];
                    q = d.getAll();
                    for (r = 0, o = q.length; r < o; r++) {
                        s = q[r];
                        p = k.getByProjectId(s.id);
                        if (p.length > 0) {
                            n.push({
                                project_id: s.id,
                                uncompleted: p
                            })
                        }
                    }
                    return n
                };
                m.prototype.getNoDueDate = function() {
                    var p, n, r, o, q;
                    n = [];
                    q = k.getAllOwn();
                    for (r = 0, o = q.length; r < o; r++) {
                        p = q[r];
                        if (!p.due_date) {
                            n.push(p)
                        }
                    }
                    return n
                };
                m.prototype.filterByLabels = function(u, t) {
                    var o, w, q, x, p, s, r, v, n;
                    x = [];
                    for (s = 0, v = u.length; s < v; s++) {
                        w = u[s];
                        q = w.labels;
                        if (q && q.length > 0) {
                            o = true;
                            for (r = 0, n = t.length; r < n; r++) {
                                p = t[r];
                                if (!$isIn(p, q)) {
                                    o = false;
                                    break
                                }
                            }
                            if (o) {
                                x.push(w)
                            }
                        }
                    }
                    return x
                };
                return m
            })();
            b.exports = new l()
        }, {
            "./.coffee.DayOrders.js": 131,
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.LabelsModel.js": 138,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.QueriesItems.js": 145,
            "./.coffee.TemporaryIds.js": 155
        }
    ],
    145: [
        function(d, g, b) {
            var h, f, i, a, c = function(j, k) {
                    return function() {
                        return j.apply(k, arguments)
                    }
                };
            h = window.DateistDateHelpers;
            f = d("./.coffee.ItemsModel.js");
            i = d("./.coffee.ProjectsModel.js");
            a = (function() {
                function j() {
                    this.clearCache = c(this.clearCache, this)
                }
                j.prototype.cache = {};
                j.prototype.getCounts = function(k) {
                    var l;
                    if (k == null) {
                        k = null
                    }
                    if (!k) {
                        k = f.getAllOwn()
                    }
                    l = {
                        today: this.getToday(k).length,
                        overdue: this.getOverdue(k).length
                    };
                    return l
                };
                j.prototype._hourlyCache = function(k) {
                    return "" + k + "-" + ((new Date()).getHours())
                };
                j.prototype.getToday = function(k) {
                    if (k == null) {
                        k = null
                    }
                    return this.getByDate(new Date(), k)
                };
                j.prototype.getOverdue = function(o) {
                    var k, l, r, s, n, p, m, q;
                    if (o == null) {
                        o = null
                    }
                    if (!o) {
                        o = f.getAll()
                    }
                    k = this._hourlyCache("overdue-" + (o && o.length));
                    if (this.cache[k]) {
                        return $arrayCopy(this.cache[k])
                    }
                    n = window.User.id;
                    s = [];
                    p = new Date();
                    for (m = 0, q = o.length; m < q; m++) {
                        r = o[m];
                        l = r.due_date;
                        if (l && h.is_overdue(p, l)) {
                            if (!h.is_same_date(p, l)) {
                                s.push(r)
                            }
                        }
                    }
                    s.sort(function(u, t) {
                        return u.time - t.time
                    });
                    this.cache[k] = s;
                    return $arrayCopy(s)
                };
                j.prototype.getNextXdays = function(m, t, r) {
                    var o, n, k, s, l, v, q, p, u;
                    if (m == null) {
                        m = false
                    }
                    if (t == null) {
                        t = 7
                    }
                    if (r == null) {
                        r = null
                    }
                    if (!r) {
                        r = f.getAll()
                    }
                    o = this._hourlyCache("next-" + m + "-" + t + "-" + (r && r.length));
                    if (this.cache[o]) {
                        return this.cache[o]
                    }
                    l = h.date_max(new Date());
                    k = [];
                    for (s = q = 0; 0 <= t ? q <= t : q >= t; s = 0 <= t ? ++q : --q) {
                        k.push(l);
                        l = new Date(l.getTime() + (24 * 60 * 60 * 1000))
                    }
                    v = {};
                    for (p = 0, u = k.length; p < u; p++) {
                        n = k[p];
                        v[n] = this.getByDate(n, r)
                    }
                    if (m) {
                        v = $arrayFlatten($values(v))
                    } else {
                        v = v
                    }
                    this.cache[o] = v;
                    return v
                };
                j.prototype.getByDate = function(l, p) {
                    var m, r, s, k, o, n, q;
                    if (p == null) {
                        p = null
                    }
                    o = window.User.id;
                    if (!p) {
                        p = f.getAll()
                    }
                    m = this._hourlyCache("next-" + l + "-" + (p && p.length));
                    if (this.cache[m]) {
                        return this.cache[m]
                    }
                    k = window.User.id;
                    s = [];
                    for (n = 0, q = p.length; n < q; n++) {
                        r = p[n];
                        if (r.due_date && h.is_same_date(r.due_date, l)) {
                            s.push(r)
                        }
                    }
                    this.cache[m] = s;
                    return s
                };
                j.prototype.clearCache = function() {
                    return this.cache = {}
                };
                return j
            })();
            g.exports = new a()
        }, {
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.ProjectsModel.js": 143
        }
    ],
    146: [
        function(c, g, b) {
            var f, d, a;
            f = c("./.coffee.ItemsModel.js");
            d = c("./.coffee.NotesModel.js");
            a = (function() {
                function h() {}
                h.prototype.search = function(p, t) {
                    var k, q, o, i, r, j, m, s, n, l;
                    i = [];
                    p = $strip(p).toLowerCase();
                    n = f.model_data;
                    for (o in n) {
                        j = n[o];
                        if (j.in_history || j.is_deleted) {
                            continue
                        }
                        k = j.content.toLowerCase();
                        q = false;
                        if (k.indexOf(p) !== -1) {
                            q = true
                        }
                        l = d.getNotes(j.id);
                        for (m = 0, s = l.length; m < s; m++) {
                            r = l[m];
                            k = r.content.toLowerCase();
                            if (k.indexOf(p) !== -1) {
                                q = true;
                                break
                            }
                        }
                        if (q) {
                            i.push(j)
                        }
                    }
                    if (t) {
                        t(i)
                    }
                    return i
                };
                return h
            })();
            g.exports = new a()
        }, {
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.NotesModel.js": 141
        }
    ],
    147: [
        function(g, d, i) {
            var b, k, j, n, m, a, f, h, c, l = function(o, p) {
                    return function() {
                        return o.apply(p, arguments)
                    }
                };
            a = window.Signals;
            j = window.DateUtils;
            b = g("./.coffee.Storage.js").$storage;
            h = g("./.coffee.TemporaryIds.js");
            f = g("./.coffee.SyncEngine.js");
            c = g("./.coffee.UtilModels.js");
            n = (function() {
                o.prototype.DepItemsModel = null;
                o.prototype.DepCollaborators = null;
                o.prototype.DepPeopleAssigner = null;
                o.prototype.loaded = false;
                o.prototype.model_data = {};
                o.prototype.cache_has_reminders = {};

                function o() {
                    this.loadCachedData = l(this.loadCachedData, this);
                    this.syncCachedData = l(this.syncCachedData, this);
                    this.loadData = l(this.loadData, this);
                    this.removeRelative = l(this.removeRelative, this);
                    this.remove = l(this.remove, this);
                    this._addToModel = l(this._addToModel, this);
                    this.addLocation = l(this.addLocation, this);
                    this.add = l(this.add, this);
                    this.resolveTempId = l(this.resolveTempId, this);
                    this.getRemindersByItemId = l(this.getRemindersByItemId, this);
                    this.hasReminders = l(this.hasReminders, this);
                    this.getAllReminders = l(this.getAllReminders, this);
                    this.syncLocalModel = l(this.syncLocalModel, this);
                    a.connect("load_cached_data", (function(p) {
                        return function() {
                            return p.loadData(p.loadCachedData())
                        }
                    })(this));
                    a.connect("resolve_temp.reminder", (function(p) {
                        return function(r, q) {
                            return p.resolveTempId(r, q)
                        }
                    })(this))
                }
                o.prototype.syncLocalModel = function(y, s) {
                    var w, r, z, p, u, v, t, x, q;
                    if (y.length > 0) {
                        c.syncLocalModel(y, this.model_data);
                        p = {};
                        for (v = 0, x = y.length; v < x; v++) {
                            w = y[v];
                            p[w.item_id] = w.item_id
                        }
                        z = $values(p);
                        if (z.length > 0) {
                            for (t = 0, q = z.length; t < q; t++) {
                                u = z[t];
                                r = this.DepItemsModel.getById(u);
                                if (r) {
                                    this.DepItemsModel.clearCache(r.project_id);
                                    s[r.project_id] = r.project_id
                                }
                            }
                            this.DepItemsModel.syncCachedData()
                        }
                        return this.syncCachedData()
                    }
                };
                o.prototype.getAllReminders = function() {
                    return $values(this.model_data)
                };
                o.prototype.hasReminders = function(q) {
                    var p;
                    if (this.cache_has_reminders[q] === void 0) {
                        p = this.getRemindersByItemId(q);
                        if (p.length > 0) {
                            this.cache_has_reminders[q] = true
                        } else {
                            this.cache_has_reminders[q] = false
                        }
                    }
                    return this.cache_has_reminders[q]
                };
                o.prototype.getRemindersByItemId = function(s, v) {
                    var r, p, u, q, t;
                    if (v == null) {
                        v = null
                    }
                    s = h.getRealId(s);
                    p = [];
                    t = $values(this.model_data);
                    for (u = 0, q = t.length; u < q; u++) {
                        r = t[u];
                        if (r.item_id === s) {
                            if (v !== null && r.type !== v) {
                                continue
                            }
                            p.push(r)
                        }
                    }
                    return p
                };
                o.prototype.resolveTempId = function(r, q) {
                    var p;
                    p = this.model_data[r];
                    if (p) {
                        p.id = q;
                        delete this.model_data[r];
                        this.model_data[q] = p;
                        if (h.isTemporary(p.notify_uid)) {
                            p.notify_uid = h.getRealId(p.notify_uid)
                        }
                        if (h.isTemporary(p.item_id)) {
                            p.item_id = h.getRealId(p.item_id)
                        }
                        return this.syncCachedData()
                    }
                };
                o.prototype.add = function(r) {
                    var q, p;
                    q = {};
                    if (!q.id) {
                        p = q.id = h.generate("reminder")
                    } else {
                        p = q.id
                    } if (r.minute_offset !== void 0) {
                        q.type = "relative"
                    } else {
                        q.type = "absolute"
                    }
                    r.type = q.type;
                    if (r.notify_uid) {
                        q.notify_uid = r.notify_uid
                    }
                    if (!r.date_lang) {
                        r.date_lang = "en"
                    }
                    if (r.date_lang) {
                        q.date_lang = r.date_lang
                    }
                    if (!r.service) {
                        r.service = "default";
                        q.service = "default"
                    } else {
                        q.service = r.service
                    }
                    this.model_data[p] = q;
                    $update(q, r);
                    f.queueUpdate({
                        type: "reminder_add",
                        args: r,
                        temp_id: p
                    });
                    this.syncCachedData();
                    return q
                };
                o.prototype.addLocation = function(r) {
                    var q, p;
                    q = {};
                    if (!q.id) {
                        p = q.id = h.generate("reminder")
                    } else {
                        p = q.id
                    }
                    this.model_data[p] = q;
                    $update(q, r);
                    f.queueUpdate({
                        type: "reminder_add",
                        args: r,
                        temp_id: p
                    });
                    this.syncCachedData();
                    return q
                };
                o.prototype._addToModel = function(q, p) {
                    if (p == null) {
                        p = true
                    }
                    this.model_data[q.id] = q;
                    if (p) {
                        return this.syncCachedData()
                    }
                };
                o.prototype.featureEnabled = function() {
                    if (window.User.is_premium) {
                        return true
                    }
                    if (window.User.restriction > 0) {
                        return true
                    }
                    return false
                };
                o.prototype.remove = function(p) {
                    p = h.getRealId(p);
                    if (this.model_data[p]) {
                        delete this.model_data[p]
                    }
                    f.queueUpdate({
                        type: "reminder_delete",
                        args: {
                            id: p
                        }
                    });
                    return this.syncCachedData()
                };
                o.prototype.removeRelative = function(r) {
                    var u, t, q, s, p;
                    s = this.getRemindersByItemId(r, "relative");
                    p = [];
                    for (t = 0, q = s.length; t < q; t++) {
                        u = s[t];
                        p.push(this.remove(u.id))
                    }
                    return p
                };
                o.prototype.loadData = function(p) {
                    this.model_data = p;
                    return this.syncCachedData()
                };
                o.prototype.syncCachedData = function() {
                    b("Reminders").set(this.model_data);
                    return this.cache_has_reminders = {}
                };
                o.prototype.loadCachedData = function() {
                    var p;
                    this.loaded = true;
                    p = b("Reminders").get();
                    if (p) {
                        return this.model_data = p
                    } else {
                        return this.model_data = {}
                    }
                };
                return o
            })();
            k = (function() {
                function o() {
                    this.getCurrentReminders = l(this.getCurrentReminders, this);
                    this.commitBuffered = l(this.commitBuffered, this);
                    this.getCurItem = l(this.getCurItem, this)
                }
                o.prototype.use_buffered = false;
                o.prototype.cur_item = null;
                o.prototype.current_project_id = null;
                o.prototype.reminders = [];
                o.prototype.getCurItem = function() {
                    var q, p, s;
                    p = {};
                    if (this.cur_item) {
                        $update(p, this.cur_item)
                    } else {
                        p.id = "_buf_rem";
                        p.project_id = this.current_project_id
                    }
                    q = $all("input", "input_due_date");
                    if (q.length > 0) {
                        s = q[0].value;
                        p.date_string = s;
                        try {
                            p.due_date = j.parse(s).due_date
                        } catch (r) {
                            p.due_date = null
                        }
                    }
                    if (m.DepCollaborators.isProjectShared(p.project_id)) {
                        p.responsible_uid = m.DepPeopleAssigner.current_uid
                    }
                    return p
                };
                o.prototype.commitBuffered = function(r) {
                    var u, t, q, s, p;
                    if (this.reminders.length > 0) {
                        s = this.reminders;
                        p = [];
                        for (t = 0, q = s.length; t < q; t++) {
                            u = s[t];
                            u.item_id = r.id;
                            if (u.type === "location") {
                                p.push(m.addLocation(u))
                            } else {
                                p.push(m.add(u))
                            }
                        }
                        return p
                    }
                };
                o.prototype.getCurrentReminders = function() {
                    var p;
                    try {
                        return this.getRemindersByItemId(this.getCurItem().id)
                    } catch (q) {
                        p = q;
                        return []
                    }
                };
                o.prototype.getRemindersByItemId = function(p) {
                    if (this.use_buffered) {
                        return this.reminders
                    } else {
                        return m.getRemindersByItemId(p)
                    }
                };
                o.prototype.add = function(p) {
                    if (this.use_buffered) {
                        p.id = h.generate("reminder");
                        this.reminders.push(p)
                    } else {
                        if (p.type === "location") {
                            p = m.addLocation(p)
                        } else {
                            p = m.add(p)
                        }
                    }
                    return p
                };
                o.prototype.remove = function(u) {
                    var s, t, r, p, q;
                    if (this.use_buffered) {
                        s = [];
                        q = this.reminders;
                        for (r = 0, p = q.length; r < p; r++) {
                            t = q[r];
                            if (t.id !== u) {
                                s.push(t)
                            }
                        }
                        return this.reminders = s
                    } else {
                        return m.remove(u)
                    }
                };
                o.prototype.reset = function() {
                    this.reminders = [];
                    this.cur_item = null;
                    return this.use_buffered = false
                };
                return o
            })();
            m = new n();
            d.exports = {
                RemindersModel: m,
                BufferedRemindersModel: new k()
            }
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngine.js": 152,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157
        }
    ],
    148: [
        function(c, d, a) {
            var f, h, g, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            g = window.Signals;
            f = c("./.coffee.Storage.js").$storage;
            h = (function() {
                i.prototype.model_data = [];

                function i() {
                    this.loadCachedData = b(this.loadCachedData, this);
                    this.syncCachedData = b(this.syncCachedData, this);
                    this.getLastLocations = b(this.getLastLocations, this);
                    this.syncLocalModel = b(this.syncLocalModel, this);
                    g.connect("load_cached_data", (function(j) {
                        return function() {
                            return j.loadCachedData()
                        }
                    })(this))
                }
                i.prototype.syncLocalModel = function(j) {
                    this.model_data = j;
                    return this.syncCachedData()
                };
                i.prototype.getLastLocations = function() {
                    return this.model_data
                };
                i.prototype.syncCachedData = function() {
                    return f("RemindersLocation").set(this.model_data)
                };
                i.prototype.loadCachedData = function() {
                    var j;
                    j = f("RemindersLocation").get();
                    if (j) {
                        return this.model_data = j
                    } else {
                        return this.model_data = []
                    }
                };
                return i
            })();
            d.exports = new h()
        }, {
            "./.coffee.Storage.js": 150
        }
    ],
    149: [
        function(d, f, b) {
            var a, g, c = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            a = {
                waiting: 1,
                reordering: 2
            };
            g = (function() {
                function h() {
                    this.get = c(this.get, this);
                    this.set = c(this.set, this)
                }
                h.prototype.DragMode = a;
                h.prototype.model_data = {
                    drag_and_drop_mode: a.waiting
                };
                h.prototype.set = function(i, j) {
                    return this.model_data[i] = j
                };
                h.prototype.get = function(i) {
                    return this.model_data[i]
                };
                return h
            })();
            f.exports = new g()
        }, {}
    ],
    150: [
        function(c, d, a) {
            var h, g, f, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            g = (function() {
                function i() {
                    this.commitAll = b(this.commitAll, this);
                    this._commit = b(this._commit, this);
                    this.storeLocally = b(this.storeLocally, this)
                }
                i.prototype.cache = {};
                i.prototype.timeouts = {};
                i.prototype.manual_commit = false;
                i.prototype.storeLocally = function(k, l) {
                    var j;
                    this.cache[k] = l;
                    if (this.timeouts[k]) {
                        clearTimeout(this.timeouts[k]);
                        delete this.timeouts[k]
                    }
                    if (this.manual_commit !== true) {
                        j = (function(m) {
                            return function() {
                                m._commit(k, m.cache[k]);
                                if (m.timeouts[k]) {
                                    return delete m.timeouts[k]
                                }
                            }
                        })(this);
                        this.timeouts[k] = setTimeout(j, 0.3)
                    }
                    return l
                };
                i.prototype._commit = function(j, k) {
                    if (window.JSON) {
                        k = JSON.stringify(k)
                    } else {
                        k = $serialize(k)
                    } if (k !== localStorage.getItem(j)) {
                        return localStorage.setItem(j, k)
                    }
                };
                i.prototype.commitAll = function() {
                    var j;
                    j = (function(k) {
                        return function() {
                            var m, o, n, l;
                            n = k.cache;
                            l = [];
                            for (m in n) {
                                o = n[m];
                                l.push(k._commit(m, o))
                            }
                            return l
                        }
                    })(this);
                    return setTimeout(j, 5)
                };
                return i
            })();
            f = new g();
            h = function(i) {
                return {
                    set: function(j) {
                        f.storeLocally(i, j);
                        return j
                    },
                    get: function() {
                        var j, k;
                        j = f.cache[i];
                        if (j !== void 0) {
                            return j
                        }
                        k = localStorage.getItem(i);
                        if (k) {
                            if (window.JSON) {
                                k = JSON.parse(k)
                            } else {
                                k = $eval(k)
                            }
                            f.cache[i] = k
                        }
                        return k
                    },
                    remove: function() {
                        if (window.localStorage) {
                            localStorage.removeItem(i)
                        }
                        if (f.cache[i]) {
                            return delete f.cache[i]
                        }
                    }
                }
            };
            f = f;
            window.$storage = h;
            window.GlobalStorage = f;
            if (typeof a !== "undefined" && a !== null) {
                a.$storage = h;
                a.GlobalStorage = f
            }
        }, {}
    ],
    151: [
        function(j, b, s) {
            var i, o, m, a, n, g, h, q, t, r, p, k, l, f, c, d = function(u, v) {
                    return function() {
                        return u.apply(v, arguments)
                    }
                };
            k = window.Signals;
            i = j("./.coffee.Storage.js").$storage;
            c = j("../components/misc/Misc.js").isAsianLang;
            a = j("./.coffee.Storage.js").GlobalStorage;
            o = j("./.coffee.Collaborators.js");
            g = j("./.coffee.LabelsModel.js");
            m = j("./.coffee.FiltersModel.js");
            t = j("./.coffee.ProjectsModel.js");
            n = j("./.coffee.ItemsModel.js");
            p = j("./.coffee.Reminders.js").RemindersModel;
            r = j("./.coffee.RemindersLocationModel.js");
            h = j("./.coffee.NotesModel.js");
            q = j("./.coffee.NotificationsModel.js");
            f = j("./.coffee.UserModel.js");
            l = (function() {
                function u() {
                    this.cleanLocalModel = d(this.cleanLocalModel, this);
                    this.syncLocalData = d(this.syncLocalData, this);
                    k.connect("sync_local_data", (function(v) {
                        return function(w) {
                            return v.syncLocalData(w)
                        }
                    })(this))
                }
                u.prototype.syncLocalData = function(y) {
                    var w, E, D, x, C, v, z;
                    a.manual_commit = true;
                    k.sendSignal("syncing_data", y);
                    if (y.User) {
                        f.update(y.User)
                    }
                    if (y.DayOrdersTimestamp) {
                        i("DayOrdersTimestamp").set(y.DayOrdersTimestamp)
                    }
                    E = {};
                    if (y.DayOrders) {
                        n.loadDayOrders(y.DayOrders)
                    }
                    if (y.Projects) {
                        t.syncLocalModel(y.Projects, E)
                    }
                    if (y.Items) {
                        n.syncLocalModel(y.Items, E)
                    }
                    if (y.Labels) {
                        g.syncLocalModel(y.Labels, E)
                    }
                    if (y.Notes) {
                        h.syncLocalModel(y.Notes, E)
                    }
                    if (y.Reminders) {
                        p.syncLocalModel(y.Reminders, E)
                    }
                    if (y.Locations) {
                        r.syncLocalModel(y.Locations)
                    }
                    if (y.Filters) {
                        m.syncLocalModel(y.Filters, E)
                    }
                    if (q.syncLastRead) {
                        q.syncLastRead(y.LiveNotificationsLastRead)
                    }
                    if (y.LiveNotifications) {
                        q.syncLocalModel(y.LiveNotifications)
                    }
                    if (y.LiveNotificationsLastRead !== void 0) {
                        q.syncLastRead(y.LiveNotificationsLastRead)
                    }
                    if (y.Collaborators) {
                        o.syncLocalModel(y.Collaborators, y.CollaboratorStates, E)
                    }
                    x = [];
                    z = $values(E);
                    for (C = 0, v = z.length; C < v; C++) {
                        w = z[C];
                        D = t.model_data[w];
                        if (D) {
                            x.push(D);
                            D.cache_count = n.getItemCount(D.id)
                        }
                        t.syncCachedData()
                    }
                    a.manual_commit = false;
                    a.commitAll();
                    return k.sendSignal("refresh_interface", x)
                };
                u.prototype.cleanLocalModel = function() {
                    var M, N, G, w, D, F, J, y, K, E, z, L, x, v, O, Q, H, C;
                    D = {};
                    H = $keys(t.model_data);
                    for (x = 0, O = H.length; x < O; x++) {
                        K = H[x];
                        D[K] = true
                    }
                    G = n.model_data;
                    for (M in G) {
                        N = G[M];
                        if (!D[N.project_id]) {
                            delete G[M]
                        }
                    }
                    w = {};
                    C = $keys(n.model_data);
                    for (v = 0, Q = C.length; v < Q; v++) {
                        M = C[v];
                        w[M] = true
                    }
                    F = h.model_data;
                    for (J in F) {
                        y = F[J];
                        if (!w[y.item_id]) {
                            delete F[J]
                        }
                    }
                    z = p.model_data;
                    for (L in z) {
                        E = z[L];
                        if (!w[E.item_id]) {
                            delete z[L]
                        }
                    }
                    n.syncCachedData();
                    h.syncCachedData();
                    return p.syncCachedData()
                };
                return u
            })();
            b.exports = new l()
        }, {
            "../components/misc/Misc.js": 54,
            "./.coffee.Collaborators.js": 130,
            "./.coffee.FiltersModel.js": 132,
            "./.coffee.ItemsModel.js": 137,
            "./.coffee.LabelsModel.js": 138,
            "./.coffee.NotesModel.js": 141,
            "./.coffee.NotificationsModel.js": 142,
            "./.coffee.ProjectsModel.js": 143,
            "./.coffee.Reminders.js": 147,
            "./.coffee.RemindersLocationModel.js": 148,
            "./.coffee.Storage.js": 150,
            "./.coffee.UserModel.js": 156
        }
    ],
    152: [
        function(g, d, j) {
            var b, a, f, i, m, h, c, l, k = function(n, o) {
                    return function() {
                        return n.apply(o, arguments)
                    }
                };
            a = window.Signals;
            b = g("./.coffee.Storage.js").$storage;
            h = g("./.coffee.TemporaryIds.js");
            l = g("./.coffee.VersionUpdater.js");
            m = g("./.coffee.SyncQueue.js");
            i = g("./.coffee.SyncEngineExt.js");
            c = g("./.coffee.UtilModels.js");
            f = (function() {
                n.prototype.sync_states = {
                    idle: 1,
                    syncing: 2
                };
                n.prototype.sync_timeouts = {
                    mini: 400,
                    full: 1500
                };
                n.prototype.last_synced = new Date();

                function n() {
                    this._queueWithoutErrorMeta = k(this._queueWithoutErrorMeta, this);
                    this._processSyncQueue = k(this._processSyncQueue, this);
                    this._setGlobalError = k(this._setGlobalError, this);
                    this._setSyncingState = k(this._setSyncingState, this);
                    this.setUpdateTimeout = k(this.setUpdateTimeout, this);
                    this.sync = k(this.sync, this);
                    this.queueIncludesErrors = k(this.queueIncludesErrors, this);
                    this.getQueueErrorLength = k(this.getQueueErrorLength, this);
                    this.getQueueSuccessLength = k(this.getQueueSuccessLength, this);
                    this.getQueueAllLength = k(this.getQueueAllLength, this);
                    this.getSyncState = k(this.getSyncState, this);
                    this.scheduleSync = k(this.scheduleSync, this);
                    this.cancelSyncIfNeeded = k(this.cancelSyncIfNeeded, this);
                    this.queueUpdate = k(this.queueUpdate, this);
                    this.sync_queue = new m();
                    this.number_of_errors = 0;
                    if (!window.ONLY_PRELOAD) {
                        this.scheduleSync()
                    }
                }
                n.prototype.queueUpdate = function(o) {
                    this.sync_queue.add(o);
                    return this.scheduleSync()
                };
                n.prototype.cancelSyncIfNeeded = function() {
                    if (this.current_req) {
                        this.current_req.abort();
                        this.current_req = null
                    }
                    if (this.getQueueAllLength() > 0) {
                        return this.scheduleSync()
                    }
                };
                n.prototype.scheduleSync = function(o, q, p) {
                    if (o == null) {
                        o = null
                    }
                    if (q == null) {
                        q = null
                    }
                    if (p == null) {
                        p = false
                    }
                    if (!o) {
                        if (window.FLUID_MINI) {
                            o = this.sync_timeouts.mini
                        } else {
                            o = this.sync_timeouts.full
                        }
                    }
                    if (this.getQueueSuccessLength() === 0) {
                        this.sync(q)
                    } else {
                        this.setUpdateTimeout(o, q)
                    }
                    return false
                };
                n.prototype.getSyncState = function() {
                    return this.sync_state
                };
                n.prototype.getQueueAllLength = function() {
                    return this.sync_queue.get().length
                };
                n.prototype.getQueueSuccessLength = function() {
                    var s, p, r, o, q;
                    p = 0;
                    q = this.sync_queue.get();
                    for (r = 0, o = q.length; r < o; r++) {
                        s = q[r];
                        if (!s.last_error) {
                            p++
                        }
                    }
                    return p
                };
                n.prototype.getQueueErrorLength = function() {
                    var s, p, r, o, q;
                    p = 0;
                    q = this.sync_queue.get();
                    for (r = 0, o = q.length; r < o; r++) {
                        s = q[r];
                        if (s.last_error && s.retry_count > 3) {
                            p++
                        }
                    }
                    return p
                };
                n.prototype.queueIncludesErrors = function() {
                    var r, q, o, p;
                    p = this.sync_queue.get();
                    for (q = 0, o = p.length; q < o; q++) {
                        r = p[q];
                        if (r.last_error) {
                            return true
                        }
                    }
                    return false
                };
                n.prototype.sync = function(o, q, v) {
                    var x, w, t, r, p, s, u;
                    if (o == null) {
                        o = null
                    }
                    if (q == null) {
                        q = false
                    }
                    if (v == null) {
                        v = false
                    }
                    if (this.sync_timeout) {
                        clearTimeout(this.sync_timeout);
                        this.sync_timeout = null
                    }
                    if (this.current_req) {
                        this.sync_timeout = setTimeout($p(this.sync, o, false), this.sync_timeouts.full);
                        return
                    }
                    if (this.getQueueSuccessLength() === 0 && q === false) {
                        if (o && o.onSuccess) {
                            o.onSuccess()
                        }
                        return
                    }
                    if (v === true) {
                        this._setSyncingState(this.sync_states.syncing)
                    }
                    x = this.sync_queue.get();
                    x = x.slice(0, 100);
                    this.sync_queue.assignUnqiueIds(x);
                    r = $arrayCopy(x);
                    p = "/API/v6/sync";
                    this.current_req = t = $requestJSON(p);
                    t.addCallback((function(y) {
                        return function(C) {
                            var z, D, E;
                            y.current_req = null;
                            y._setGlobalError(null);
                            E = C.TempIdMapping;
                            if (E) {
                                h.setRealIds(E)
                            }
                            z = C.UserId;
                            if (z && window.User) {
                                if (z !== window.User.id) {
                                    return c.checkIfErrorIsLogout("Not logged in")
                                }
                            }
                            l.check(C);
                            y._processSyncQueue(r, C);
                            y._setSyncingState(y.sync_states.idle);
                            y.number_of_errors = 0;
                            if (y.getQueueSuccessLength() === 0) {
                                a.sendSignal("sync_local_data", C);
                                i.syncData(C);
                                if (C.Projects && C.Projects.length > 0) {
                                    a.sendSignal("refresh_interface", C.Projects)
                                }
                            } else {
                                y.scheduleSync()
                            } if (E) {
                                D = y.getQueueAllLength() - r.length;
                                if (D === 0) {
                                    h.clearOld()
                                }
                            }
                            if (o && o.onSuccess) {
                                o.onSuccess(C)
                            }
                            y.last_synced = new Date();
                            return a.sendSignal("sync_engine_synced", y.last_synced)
                        }
                    })(this));
                    t.addErrback((function(y) {
                        return function(C, E) {
                            var z, D;
                            y.current_req = null;
                            if (c.checkIfErrorIsLogout(C, E)) {
                                return
                            }
                            y._setGlobalError([C, E]);
                            y._setSyncingState(y.sync_states.idle);
                            y.number_of_errors++;
                            D = y.number_of_errors * (1000 + (Math.floor(Math.random() * 11) * 1000));
                            if (D > 60000) {
                                D = 60000
                            }
                            y.timeout = D;
                            y.scheduleSync(D, null, z = true);
                            if (o && o.onError) {
                                return o.onError(C)
                            }
                        }
                    })(this));
                    for (s = 0, u = r.length; s < u; s++) {
                        w = r[s];
                        this._setRealIds(w)
                    }
                    return t.sendReq({
                        resource_types: $serialize(["all"]),
                        commands: $serialize(this._queueWithoutErrorMeta(r)),
                        day_orders_timestamp: this._getDayOrdersTimestamp(),
                        collaborators_timestamp: this._getCollaboratorsTimestamp(),
                        seq_no: i.seq_no || 0,
                        seq_no_global: i.seq_no_global || 0,
                        with_web_static_version: true,
                        limit_notes: 1,
                        with_dateist_version: 1
                    })
                };
                n.prototype.setUpdateTimeout = function(o, p) {
                    var q;
                    if (o == null) {
                        o = 500
                    }
                    if (p == null) {
                        p = null
                    }
                    if (this._update_timeout) {
                        clearTimeout(this._update_timeout)
                    }
                    q = (function(r) {
                        return function() {
                            return r.sync(p)
                        }
                    })(this);
                    return this._update_timeout = setTimeout(q, o)
                };
                n.prototype._setSyncingState = function(o) {
                    this.sync_state = o;
                    return a.sendSignal("sync_state_changed")
                };
                n.prototype._setGlobalError = function(o) {
                    this.global_error = o;
                    return a.sendSignal("sync_state_changed")
                };
                n.prototype._setRealIds = function(r) {
                    var p, u, q, t, s, o;
                    p = h.getRealId;
                    if (r.temp_id) {
                        r.temp_id = p(r.temp_id)
                    }
                    s = r.args;
                    o = [];
                    for (q in s) {
                        t = s[q];
                        switch (q) {
                            case "id":
                                o.push(r.args.id = p(r.args.id));
                                break;
                            case "ids":
                                o.push(r.args.ids = (function() {
                                    var y, w, v, x;
                                    v = r.args.ids;
                                    x = [];
                                    for (y = 0, w = v.length; y < w; y++) {
                                        u = v[y];
                                        x.push(p(u))
                                    }
                                    return x
                                })());
                                break;
                            case "project_id":
                                o.push(r.project_id = p(r.project_id));
                                break;
                            default:
                                o.push(void 0)
                        }
                    }
                    return o
                };
                n.prototype._getDayOrdersTimestamp = function() {
                    return b("DayOrdersTimestamp").get() || ""
                };
                n.prototype._getCollaboratorsTimestamp = function() {
                    return b("CollaboratorsTimestamp").get() || ""
                };
                n.prototype._processSyncQueue = function(q, o) {
                    var s, y, r, w, v, u, x, p, t;
                    r = [];
                    w = o.SyncStatus;
                    if (w) {
                        for (v = 0, x = q.length; v < x; v++) {
                            s = q[v];
                            y = w[s.uuid];
                            if (y && y.error_code) {
                                if (y.error_code === 37) {
                                    continue
                                }
                                if (!s.last_error) {
                                    s.last_error = y
                                }
                                if (!s.retry_count) {
                                    s.retry_count = 1
                                } else {
                                    s.retry_count++
                                } if (s.retry_count < 100) {
                                    r.push(s)
                                }
                            }
                        }
                    }
                    this.sync_queue.deleteItems(q);
                    t = [];
                    for (u = 0, p = r.length; u < p; u++) {
                        s = r[u];
                        t.push(this.sync_queue.add(s))
                    }
                    return t
                };
                n.prototype._queueWithoutErrorMeta = function(o) {
                    var s, q, t, r, p;
                    t = [];
                    for (r = 0, p = o.length; r < p; r++) {
                        s = o[r];
                        q = $update({}, s);
                        if (q.last_error) {
                            delete q.last_error
                        }
                        t.push(q)
                    }
                    return t
                };
                return n
            })();
            window.SyncEngine = new f();
            d.exports = window.SyncEngine
        }, {
            "./.coffee.Storage.js": 150,
            "./.coffee.SyncEngineExt.js": 153,
            "./.coffee.SyncQueue.js": 154,
            "./.coffee.TemporaryIds.js": 155,
            "./.coffee.UtilModels.js": 157,
            "./.coffee.VersionUpdater.js": 158
        }
    ],
    153: [
        function(c, f, a) {
            var g, h, d, b = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            h = window.Signals;
            g = c("./.coffee.Storage.js").$storage;
            d = (function() {
                function i() {
                    this.loadCachedData = b(this.loadCachedData, this);
                    this.syncCachedData = b(this.syncCachedData, this);
                    this.syncData = b(this.syncData, this);
                    h.connect("load_cached_data", (function(j) {
                        return function() {
                            return j.loadCachedData()
                        }
                    })(this))
                }
                i.prototype.isInitialSync = function() {
                    return g("TimestampS2").get() === null
                };
                i.prototype.syncData = function(j) {
                    if (j.seq_no) {
                        this.seq_no = j.seq_no;
                        this.seq_no_global = j.seq_no_global;
                        return this.syncCachedData()
                    }
                };
                i.prototype.syncCachedData = function() {
                    g("TimestampS2").set(this.seq_no);
                    return g("TimestampG").set(this.seq_no_global)
                };
                i.prototype.loadCachedData = function() {
                    var k, j;
                    k = g("TimestampS2").get();
                    if (k) {
                        this.seq_no = k
                    } else {
                        this.seq_no = 0
                    }
                    j = g("TimestampG").get();
                    if (j) {
                        return this.seq_no_global = j
                    } else {
                        return this.seq_no_global = 0
                    }
                };
                return i
            })();
            f.exports = new d()
        }, {
            "./.coffee.Storage.js": 150
        }
    ],
    154: [
        function(c, d, a) {
            var f, g, b = function(h, i) {
                    return function() {
                        return h.apply(i, arguments)
                    }
                };
            f = c("./.coffee.Storage.js").$storage;
            g = (function() {
                function h() {
                    this.clear = b(this.clear, this);
                    this.deleteItems = b(this.deleteItems, this);
                    this.save = b(this.save, this);
                    this.assignUnqiueIds = b(this.assignUnqiueIds, this);
                    this.add = b(this.add, this);
                    this.get = b(this.get, this);
                    if (!this.get()) {
                        this.clear()
                    }
                }
                h.prototype.get = function() {
                    return f("Queue").get()
                };
                h.prototype.add = function(i) {
                    var j;
                    j = this.get();
                    if (!i.uuid) {
                        i.uuid = this.guid()
                    }
                    j.push(i);
                    return this.save(j)
                };
                h.prototype.assignUnqiueIds = function(i) {
                    var l, k, m, j;
                    k = false;
                    for (m = 0, j = i.length; m < j; m++) {
                        l = i[m];
                        if (!l.uuid) {
                            l.uuid = this.guid();
                            k = true
                        }
                    }
                    if (k) {
                        return this.save(i)
                    }
                };
                h.prototype.save = function(i) {
                    return f("Queue").set(i)
                };
                h.prototype.deleteItems = function(j) {
                    var m, n, k, l, i;
                    m = this.get();
                    for (l = 0, i = j.length; l < i; l++) {
                        k = j[l];
                        n = function(o) {
                            return o.uuid === k.uuid
                        };
                        $arrayRemove(m, k, n)
                    }
                    return this.save(m)
                };
                h.prototype.clear = function() {
                    return f("Queue").set([])
                };
                h.prototype.guid = function() {
                    var i;
                    i = function() {
                        return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1)
                    };
                    return i() + i() + "-" + i() + "-" + i() + "-" + i() + "-" + i() + i() + i()
                };
                return h
            })();
            d.exports = g
        }, {
            "./.coffee.Storage.js": 150
        }
    ],
    155: [
        function(d, f, b) {
            var g, h, a, c = function(i, j) {
                    return function() {
                        return i.apply(j, arguments)
                    }
                };
            h = window.Signals;
            g = d("./.coffee.Storage.js").$storage;
            a = (function() {
                i.prototype.listeners_all = [];

                function i() {
                    this.loadCachedData = c(this.loadCachedData, this);
                    this.syncCachedData = c(this.syncCachedData, this);
                    this.waitToResolve = c(this.waitToResolve, this);
                    this.listenAll = c(this.listenAll, this);
                    this.clearOld = c(this.clearOld, this);
                    this.setRealIds = c(this.setRealIds, this);
                    this.getRealIds = c(this.getRealIds, this);
                    this.getRealId = c(this.getRealId, this);
                    this.generate = c(this.generate, this);
                    this.temp_counter = (new Date()).getTime();
                    h.connect("load_cached_data", (function(j) {
                        return function() {
                            return j.loadCachedData()
                        }
                    })(this))
                }
                i.prototype.generate = function(j) {
                    var k;
                    k = "_" + this.temp_counter++;
                    this.cur_temp_ids[k] = j;
                    this.syncCachedData();
                    return k
                };
                i.prototype.isTemporary = function(j) {
                    if ($isString(j)) {
                        if (j.indexOf("_") === 0) {
                            return true
                        }
                        if (j.indexOf("$") === 0) {
                            return true
                        }
                    }
                    return false
                };
                i.prototype.getRealId = function(j) {
                    var k;
                    k = this.real_id_mapping[j];
                    return k && k || j
                };
                i.prototype.getRealIds = function(n) {
                    var l, k, m, j;
                    l = [];
                    for (m = 0, j = n.length; m < j; m++) {
                        k = n[m];
                        l.push(this.real_id_mapping[k] || k)
                    }
                    return l
                };
                i.prototype.setRealIds = function(q) {
                    var p, m, r, j, o, k, n, l;
                    for (j in q) {
                        r = q[j];
                        this.real_id_mapping[j] = r;
                        this.real_id_list.push(j)
                    }
                    for (j in q) {
                        r = q[j];
                        o = this.cur_temp_ids[j];
                        h.sendSignal("resolve_temp." + o, j, r);
                        if (this.listeners_all.length > 0) {
                            l = this.listeners_all;
                            for (k = 0, n = l.length; k < n; k++) {
                                p = l[k];
                                p(j, r)
                            }
                        }
                    }
                    while (this.real_id_list.length > 250) {
                        m = this.real_id_list.shift();
                        if (this.real_id_mapping[m]) {
                            delete this.real_id_mapping[m]
                        }
                    }
                    return this.syncCachedData()
                };
                i.prototype.clearOld = function() {
                    this.cur_temp_ids = {};
                    return this.syncCachedData()
                };
                i.prototype.listenAll = function(j) {
                    return this.listeners_all.push(j)
                };
                i.prototype.waitToResolve = function(l, k) {
                    var j;
                    j = this.getRealId(l);
                    if (!this.isTemporary(j)) {
                        k(j)
                    } else {
                        setTimeout($p(this.waitForResolve, l, k), 500)
                    }
                    return false
                };
                i.prototype.syncCachedData = function() {
                    g("RealIdMapping").set(this.real_id_mapping);
                    g("RealIdList").set(this.real_id_list);
                    return g("CurTempIds").set(this.cur_temp_ids)
                };
                i.prototype.loadCachedData = function() {
                    var j, l, k;
                    k = g("RealIdMapping").get();
                    if (k) {
                        this.real_id_mapping = k
                    } else {
                        this.real_id_mapping = {}
                    }
                    l = g("RealIdList").get();
                    if (l) {
                        this.real_id_list = l
                    } else {
                        this.real_id_list = []
                    }
                    j = g("CurTempIds").get();
                    if (j) {
                        return this.cur_temp_ids = j
                    } else {
                        return this.cur_temp_ids = {}
                    }
                };
                return i
            })();
            f.exports = new a()
        }, {
            "./.coffee.Storage.js": 150
        }
    ],
    156: [
        function(d, f, b) {
            var h, g, i, a, c = function(j, k) {
                    return function() {
                        return j.apply(k, arguments)
                    }
                };
            i = window.Signals;
            a = d("../components/misc/Misc.js").isAsianLang;
            h = d("./.coffee.Storage.js").$storage;
            g = (function() {
                function j() {
                    this.updateUserSettings = c(this.updateUserSettings, this);
                    this.update = c(this.update, this);
                    i.connect("load_cached_data", (function(k) {
                        return function() {
                            k.loadCachedData();
                            return k.updateUserSettings(window.User)
                        }
                    })(this));
                    i.connect("model_item_completed", function() {
                        window.User.completed_today++;
                        return window.User.completed_count++
                    });
                    i.connect("model_item_uncompleted", function() {
                        window.User.completed_today--;
                        return window.User.completed_count--
                    })
                }
                j.prototype.update = function(m) {
                    var k, l;
                    k = window.User;
                    l = window.User = window.User || {};
                    $update(window.User, m);
                    l.team_inbox = m.team_inbox;
                    this.updateUserSettings(window.User);
                    i.sendSignal("user_updated", l);
                    return this.syncCachedData()
                };
                j.prototype.updateUserSettings = function(k) {
                    if (!k) {
                        k = {}
                    }
                    window.Settings = {
                        AMPM: k.time_format === 1,
                        US_DATES: k.date_format === 1,
                        START_PAGE: k.start_page,
                        TIMEZONE: k.timezone,
                        START_DAY: k.start_day || 1,
                        NEXT_WEEK: k.next_week || 1
                    };
                    if (a()) {
                        return window.Settings.US_DATES = true
                    }
                };
                j.prototype.loadCachedData = function() {
                    return window.User = h("User").get()
                };
                j.prototype.syncCachedData = function() {
                    return h("User").set(window.User)
                };
                return j
            })();
            window.UserModel = new g();
            f.exports = window.UserModel
        }, {
            "../components/misc/Misc.js": 54,
            "./.coffee.Storage.js": 150
        }
    ],
    157: [
        function(c, b, d) {
            var f, j, i, h, a, g = function(k, l) {
                    return function() {
                        return k.apply(l, arguments)
                    }
                };
            j = window.Dateist;
            i = window.DateistDateHelpers;
            f = window.DateUtils;
            a = window.Signals;
            h = (function() {
                k.prototype.DepItemsModel = null;
                k.prototype.DepSyncEngine = null;

                function k() {
                    this.checkIfErrorIsLogout = g(this.checkIfErrorIsLogout, this);
                    this.gSortByGeneric = g(this.gSortByGeneric, this);
                    this.daySort = g(this.daySort, this);
                    this.sortByDate = $p(this.gSortByGeneric, "time");
                    this.sortByPriority = $p(this.gSortByGeneric, "priority");
                    this.sortByResponsible = $p(this.gSortByGeneric, "assigned_by_uid")
                }
                k.prototype.getChildren = function(r, t, s) {
                    var l, o, m, q, n, p;
                    if (s == null) {
                        s = false
                    }
                    l = [];
                    if (s) {
                        l.push(t)
                    }
                    o = $index(t, r, function(u) {
                        return u.id === t.id
                    });
                    if (o !== -1) {
                        q = r.slice(o + 1, +r.length + 1 || 9000000000);
                        for (n = 0, p = q.length; n < p; n++) {
                            m = q[n];
                            if (m.indent <= t.indent) {
                                break
                            }
                            l.push(m)
                        }
                    }
                    return l
                };
                k.prototype.getParent = function(r, s) {
                    var p, t, o, n, m, q, l;
                    t = [];
                    for (n = 0, q = r.length; n < q; n++) {
                        p = r[n];
                        if (p.id === s.id) {
                            break
                        }
                        t.push(p)
                    }
                    t.reverse();
                    for (m = 0, l = t.length; m < l; m++) {
                        o = t[m];
                        if (o.indent < s.indent) {
                            return o
                        }
                    }
                    return null
                };
                k.prototype.daySort = function(m, l) {
                    if (m.priority > l.priority) {
                        return -1
                    } else {
                        if (m.priority < l.priority) {
                            return 1
                        } else {
                            if (m.day_order !== -1 && l.day_order !== -1) {
                                return this.gSortByGeneric("day_order", l, m)
                            } else {
                                if (m.project_id !== l.project_id) {
                                    return this.gSortByGeneric("project_id", l, m)
                                } else {
                                    return this.sortByItemOrder(m, l)
                                }
                            }
                        }
                    }
                };
                k.prototype.sortByItemOrder = function(m, l) {
                    if (m.item_order < l.item_order) {
                        return -1
                    }
                    if (m.item_order === l.item_order) {
                        return 0
                    }
                    return 1
                };
                k.prototype.gSortByGeneric = function(p, n, l) {
                    var o, m;
                    if (!n[p] || !l[p]) {
                        return 1
                    }
                    o = n[p];
                    m = l[p];
                    if (o === m) {
                        return this.sortByItemOrder(n, l)
                    }
                    if (o > m) {
                        return -1
                    }
                    return 1
                };
                k.prototype.isBulletItem = function(l) {
                    return l && l.indexOf("*") === 0
                };
                k.prototype.syncLocalModel = function(x, r) {
                    var q, n, l, m, y, p, u, t, w, o, v, s;
                    for (u = 0, w = x.length; u < w; u++) {
                        y = x[u];
                        n = r[y.id];
                        if (n) {
                            $update(n, y)
                        } else {
                            n = y
                        }
                        r[y.id] = n
                    }
                    m = true;
                    if (this.DepSyncEngine.queueIncludesErrors()) {
                        m = false
                    }
                    if (m) {
                        q = this.DepItemsModel.model_data;
                        v = $keys(r);
                        s = [];
                        for (t = 0, o = v.length; t < o; t++) {
                            l = v[t];
                            n = r[l];
                            p = false;
                            if (l.indexOf && l.indexOf("_") !== -1) {
                                p = true
                            }
                            if (n.is_deleted || n.is_archived) {
                                p = true
                            }
                            if (p) {
                                s.push(delete r[l])
                            } else {
                                s.push(void 0)
                            }
                        }
                        return s
                    }
                };
                k.prototype.checkIfErrorIsLogout = function(m, n) {
                    var l;
                    l = false;
                    if (m.indexOf("Not logged in") !== -1) {
                        l = true
                    }
                    if (m.indexOf("Token not correct") !== -1) {
                        l = true
                    }
                    if (m.indexOf("403 Forbidden") !== -1) {
                        l = true
                    }
                    if (n && n.status === 403) {
                        l = true
                    }
                    if (l && !window.ACCOUNT_DELETED) {
                        alert(_("It seems like our session has expired. Please re-login."), function() {
                            return a.sendSignal("logout")
                        });
                        return true
                    }
                };
                k.prototype.getNewDate = function(u, t) {
                    var n, o, p, s, q, v, m, r, l;
                    if (t == null) {
                        t = false
                    }
                    l = new Date();
                    n = u.due_date;
                    v = j.is_recurring(u.date_string, {
                        lang: u.date_lang
                    });
                    q = i.is_overdue(l, n);
                    if (n && v) {
                        o = f.parse(u.date_string, u);
                        if (o.end_reached) {
                            throw "END_REACHED"
                        }
                        if (o.error || !o.due_date) {
                            throw "INVALID_DATE"
                        } else {
                            r = o.due_date
                        }
                    } else {
                        if (n && !q) {
                            r = new Date(u.due_date.getTime());
                            r.setDate(r.getDate() + 1)
                        } else {
                            r = j.parse("tomorrow").due_date;
                            if (u.due_date) {
                                r = i.inherit_date(r, u.due_date)
                            }
                        }
                    }
                    m = f.jsonFormat(r);
                    s = "";
                    if (t) {
                        p = i.day_diff(new Date(), r);
                        s = f.humanizeDayDiff(p, r)
                    }
                    return [r, m, s, v]
                };
                return k
            })();
            b.exports = new h()
        }, {}
    ],
    158: [
        function(b, c, a) {
            var d;
            d = window.Signals;
            window.SERVER_VERSION = 0;
            a.check = function(g) {
                var f;
                f = $queryArgument("v");
                window.SERVER_VERSION = g.WebStaticVersion;
                if (f && window.SERVER_VERSION) {
                    f = parseInt(f);
                    if (f !== window.SERVER_VERSION) {
                        d.sendSignal("new_version_available", window.SERVER_VERSION)
                    }
                }
                return true
            };
            a.update = function() {
                var f;
                try {
                    if (window.applicationCache) {
                        window.applicationCache.update()
                    }
                } catch (g) {}
                if (window.SERVER_VERSION.toString().indexOf("beta") !== -1) {
                    f = window.location.toString().replace(window.location.host, "beta.todoist.com");
                    f = f.replace(/v=[^;&]+/, "v=");
                    window.location = f
                } else {
                    window.location = window.location.href.replace(/v=\d+/, "v=" + window.SERVER_VERSION)
                }
                return false
            }
        }, {}
    ],
    159: [
        function(b, c, a) {
            var d;
            d = window.imageSprite;
            window.getKarmaImage = function(g) {
                var f;
                f = SPAN({
                    c: (getKarmaFontClass(g)) + " karma-icon"
                });
                return f
            };
            window.getKarmaFontClass = function(f) {
                if (f < 500) {
                    return "icon-karmaprofile1"
                } else {
                    if (f >= 500 && f < 2500) {
                        return "icon-karmaprofile2"
                    } else {
                        if (f >= 2500 && f < 5000) {
                            return "icon-karmaprofile3"
                        } else {
                            if (f >= 5000 && f < 7500) {
                                return "icon-karmaprofile4"
                            } else {
                                if (f >= 7500 && f < 10000) {
                                    return "icon-karmaprofile5"
                                } else {
                                    if (f >= 10000 && f < 20000) {
                                        return "icon-karmaprofile6"
                                    } else {
                                        if (f >= 20000 && f < 50000) {
                                            return "icon-karmaprofile7"
                                        } else {
                                            return "icon-karmaprofile8"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }, {}
    ]
}, {}, [1]);
